<?php

// Generated by Haxe 3.4.2 (git build master @ 890f8c7)
class cornerstone_integrator_exceptions_LogicException extends _Exception_HException {
	public function __construct($Code, $Msg) {
		if(!php_Boot::$skip_constructor) {
		$this->set_Code($Code);
		parent::__construct($Msg,_hx_anonymous(array("fileName" => "LogicException.hx", "lineNumber" => 7, "className" => "cornerstone.integrator.exceptions.LogicException", "methodName" => "new")));
	}}
	public $Code;
	public function set_Code($value) {
		return $this->Code = $value;
	}
	public function get_Code() {
		return $this->Code;
	}
	public function __call($m, $a) {
		if(isset($this->$m) && is_callable($this->$m))
			return call_user_func_array($this->$m, $a);
		else if(isset($this->__dynamics[$m]) && is_callable($this->__dynamics[$m]))
			return call_user_func_array($this->__dynamics[$m], $a);
		else if('toString' == $m)
			return $this->__toString();
		else
			throw new HException('Unable to call <'.$m.'>');
	}
	static $__properties__ = array("set_Code" => "set_Code","get_Code" => "get_Code");
	function __toString() { return 'cornerstone.integrator.exceptions.LogicException'; }
}
