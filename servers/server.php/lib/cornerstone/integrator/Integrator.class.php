<?php

// Generated by Haxe 3.4.2 (git build master @ 890f8c7)
class cornerstone_integrator_Integrator {
	public function __construct(){}
	static function Init() {
		if(cornerstone_integrator_configuration_Configuration::$Data === null) {
			cornerstone_integrator_configuration_Configuration::$Data = new cornerstone_integrator_configuration_ConfigurationData();
			cornerstone_integrator_configuration_Configuration::$Data->set_LogFolder("D:\\Workspace\\Cornerstone\\log\\");
			cornerstone_integrator_configuration_Configuration::$Data->set_CurrentDeployEnvironment(cornerstone_integrator_configuration_DeployEnvironmentEnum::$DEVELOPMENT);
			$tmp = cornerstone_integrator_configuration_Configuration::$Data;
			$tmp->set_DatabaseConnections(new _hx_array(array()));
			$dcd = new cornerstone_integrator_configuration_DatabaseConnectionData();
			$dcd->set_DeploEnvironment(cornerstone_integrator_configuration_DeployEnvironmentEnum::$DEVELOPMENT);
			cornerstone_integrator_configuration_Configuration::$Data->get_DatabaseConnections()->push($dcd);
		}
	}
	static function Process($PostData) {
		$DecryptedString = "";
		$req = null;
		$LogicModule = "";
		$LogicClass = "";
		$LogicMethod = "";
		$Name = "";
		try {
			if(cornerstone_integrator_configuration_Configuration::$Data === null) {
				cornerstone_integrator_Integrator::Init();
			}
			$unserializer = new haxe_Unserializer($PostData);
			$req = $unserializer->unserialize();
			$res = new cornerstone_integrator_transport_ResponseMessage();
			$Results = new _hx_array(array());
			{
				$_g = 0;
				$_g1 = $req->get_Calls();
				while($_g < $_g1->length) {
					$mc = $_g1[$_g];
					$_g = $_g + 1;
					$LogicModule = $mc->get_LogicModule();
					$LogicClass = $mc->get_LogicClass();
					$LogicMethod = $mc->get_LogicMethod();
					$Name = $mc->get_Name();
					$cl = Type::resolveClass($mc->get_LogicClass());
					if($cl === null) {
						cornerstone_integrator_exceptions_ExceptionManager::LogicException(1, "Clase no encontrada. Revise actualización de módulos");
					}
					$obj = Type::createInstance($cl, (new _hx_array(array())));
					$mt = Reflect::field($obj, $mc->get_LogicMethod());
					if($mt === null) {
						cornerstone_integrator_exceptions_ExceptionManager::LogicException(2, "Método no encontrado. Revise actualización de módulos");
					}
					$ret = Reflect::callMethod($obj, $mt, $mc->get_LogicParams());
					$mr = new cornerstone_integrator_transport_MethodResult();
					$mr->set_Name($mc->get_Name());
					$mr->set_ReturnObject($ret);
					$Results->push($mr);
					$obj->Dispose();
					unset($ret,$obj,$mt,$mr,$mc,$cl);
				}
			}
			$LogicModule = "";
			$LogicClass = "";
			$LogicMethod = "";
			$Name = "OK";
			$res->set_RequestSeq($req->get_RequestSeq());
			$res->set_Results($Results);
			$serializer = new haxe_Serializer();
			$serializer->serialize($res);
			$ResponseString = $serializer->toString();
			return $ResponseString;
		}catch(Exception $__hx__e) {
			$_ex_ = ($__hx__e instanceof HException) && $__hx__e->getCode() == null ? $__hx__e->e : $__hx__e;
			if(($ex = $_ex_) instanceof cornerstone_integrator_exceptions_LogicException){
				return cornerstone_integrator_exceptions_ExceptionManager::HandleException($ex, null, null, null, null, null, null);
			}
			else if(($ex1 = $_ex_) instanceof cornerstone_integrator_exceptions_SecurityException){
				return cornerstone_integrator_exceptions_ExceptionManager::HandleException($ex1, null, null, null, null, null, null);
			}
			else if(($ex2 = $_ex_) instanceof _Exception_HException){
				return cornerstone_integrator_exceptions_ExceptionManager::HandleException($ex2, $DecryptedString, $req, $LogicModule, $LogicClass, $LogicMethod, $Name);
			}
			else { $ex3 = $_ex_;
			{
				return cornerstone_integrator_exceptions_ExceptionManager::HandleException(_Exception_HException::wrap($ex3, _hx_anonymous(array("fileName" => "Integrator.hx", "lineNumber" => 125, "className" => "cornerstone.integrator.Integrator", "methodName" => "Process"))), $DecryptedString, $req, $LogicModule, $LogicClass, $LogicMethod, $Name);
			}}
		}
	}
	static function main() {
		Type::getClass(_hx_qtype("cornerstone.integrator.LibReference"));
	}
	function __toString() { return 'cornerstone.integrator.Integrator'; }
}
