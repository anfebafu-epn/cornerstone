<?php

// Generated by Haxe 3.4.2 (git build master @ 890f8c7)
class org_ascrypt_utilities_HMAC {
	public function __construct(){}
	static function compute($key, $bytes, $hash, $size) {
		$hk = $key->copy();
		$ik = (new _hx_array(array()));
		$ok = (new _hx_array(array()));
		if($key->length > $size) {
			$hk = call_user_func_array($hash, array($key));
		}
		while($hk->length < $size) {
			$hk[$hk->length] = 0;
		}
		$hkl = $hk->length;
		{
			$_g1 = 0;
			$_g = $hkl;
			while($_g1 < $_g) {
				$_g1 = $_g1 + 1;
				$i = $_g1 - 1;
				$ik[$i] = $hk->a[$i] ^ 54;
				$ok[$i] = $hk->a[$i] ^ 92;
				unset($i);
			}
		}
		$ik = $ik->concat($bytes);
		$ok = $ok->concat(call_user_func_array($hash, array($ik)));
		return call_user_func_array($hash, array($ok));
	}
	function __toString() { return 'org.ascrypt.utilities.HMAC'; }
}
