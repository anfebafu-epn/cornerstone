var $global = typeof window != "undefined" ? window : typeof global != "undefined" ? global : typeof self != "undefined" ? self : this;
// Generated by Haxe 3.4.2 (git build master @ 890f8c7)
var $hxClasses = {}, $estr = function () { return js_Boot.__string_rec(this, ''); };
function $extend(from, fields) {
    function Inherit() { }
    Inherit.prototype = from;
    var proto = new Inherit();
    for (var name in fields)
        proto[name] = fields[name];
    if (fields.toString !== Object.prototype.toString)
        proto.toString = fields.toString;
    return proto;
}
var EReg = function (r, opt) {
    this.r = new RegExp(r, opt.split("u").join(""));
};
$hxClasses["EReg"] = EReg;
EReg.__name__ = ["EReg"];
EReg.prototype = {
    r: null,
    match: function (s) {
        if (this.r.global) {
            this.r.lastIndex = 0;
        }
        this.r.m = this.r.exec(s);
        this.r.s = s;
        return this.r.m != null;
    },
    matched: function (n) {
        if (this.r.m != null && n >= 0 && n < this.r.m.length) {
            return this.r.m[n];
        }
        else {
            throw new js__$Boot_HaxeError("EReg::matched");
        }
    },
    matchedLeft: function () {
        if (this.r.m == null) {
            throw new js__$Boot_HaxeError("No string matched");
        }
        return HxOverrides.substr(this.r.s, 0, this.r.m.index);
    },
    matchedRight: function () {
        if (this.r.m == null) {
            throw new js__$Boot_HaxeError("No string matched");
        }
        var sz = this.r.m.index + this.r.m[0].length;
        return HxOverrides.substr(this.r.s, sz, this.r.s.length - sz);
    },
    matchedPos: function () {
        if (this.r.m == null) {
            throw new js__$Boot_HaxeError("No string matched");
        }
        return { pos: this.r.m.index, len: this.r.m[0].length };
    },
    matchSub: function (s, pos, len) {
        if (len == null) {
            len = -1;
        }
        if (this.r.global) {
            this.r.lastIndex = pos;
            var tmp = this.r;
            var tmp1 = len < 0 ? s : HxOverrides.substr(s, 0, pos + len);
            this.r.m = tmp.exec(tmp1);
            var b = this.r.m != null;
            if (b) {
                this.r.s = s;
            }
            return b;
        }
        else {
            var b1 = this.match(len < 0 ? HxOverrides.substr(s, pos, null) : HxOverrides.substr(s, pos, len));
            if (b1) {
                this.r.s = s;
                this.r.m.index += pos;
            }
            return b1;
        }
    },
    split: function (s) {
        var d = "#__delim__#";
        return s.replace(this.r, d).split(d);
    },
    replace: function (s, by) {
        return s.replace(this.r, by);
    },
    map: function (s, f) {
        var offset = 0;
        var buf_b = "";
        while (true) {
            if (offset >= s.length) {
                break;
            }
            else if (!this.matchSub(s, offset)) {
                buf_b += Std.string(HxOverrides.substr(s, offset, null));
                break;
            }
            var p = this.matchedPos();
            buf_b += Std.string(HxOverrides.substr(s, offset, p.pos - offset));
            buf_b += Std.string(f(this));
            if (p.len == 0) {
                buf_b += Std.string(HxOverrides.substr(s, p.pos, 1));
                offset = p.pos + 1;
            }
            else {
                offset = p.pos + p.len;
            }
            if (!this.r.global) {
                break;
            }
        }
        if (!this.r.global && offset > 0 && offset < s.length) {
            buf_b += Std.string(HxOverrides.substr(s, offset, null));
        }
        return buf_b;
    },
    __class__: EReg
};
var Exception = function (message, pos) {
    this.message = message;
    this.pos = pos;
    this.stack = this.buildStack(haxe_CallStack.callStack());
};
$hxClasses["Exception"] = Exception;
Exception.__name__ = ["Exception"];
Exception.wrap = function (e, pos) {
    if (js_Boot.__instanceof(e, Exception)) {
        return e;
    }
    var exceptionStack = haxe_CallStack.exceptionStack();
    var exception = new Exception(Std.string(e), pos);
    if (exceptionStack.length > 0) {
        exception.stack = exceptionStack;
    }
    return exception;
};
Exception.processCallStackOnCreation = function (stack) {
    return stack;
};
Exception.prototype = {
    message: null,
    pos: null,
    stack: null,
    truncateStack: function (pos, count) {
        if (count == null) {
            count = 0;
        }
        if (pos != null) {
            this.stack = exception_StackTools.jsTruncate(this.stack, pos, false);
        }
        if (count > 0) {
            this.stack = this.stack.slice(count);
        }
    },
    stringStack: function () {
        return haxe_CallStack.toString(this.stack);
    },
    toString: function () {
        var className = Type.getClassName(js_Boot.getClass(this));
        var position = this.pos == null ? "unknown position" : this.pos.fileName + ":" + this.pos.lineNumber;
        var msg = "" + className + ": " + this.message + "\n\tCreated at " + position;
        msg += StringTools.replace(haxe_CallStack.toString(this.stack), "\n", "\n\t");
        return msg;
    },
    buildStack: function (stack) {
        var stack1 = exception_StackTools.jsTruncate(stack, this.pos, false);
        return Exception.processCallStackOnCreation(stack1);
    },
    __class__: Exception
};
var HxOverrides = function () { };
$hxClasses["HxOverrides"] = HxOverrides;
HxOverrides.__name__ = ["HxOverrides"];
HxOverrides.dateStr = function (date) {
    var m = date.getMonth() + 1;
    var d = date.getDate();
    var h = date.getHours();
    var mi = date.getMinutes();
    var s = date.getSeconds();
    return date.getFullYear() + "-" + (m < 10 ? "0" + m : "" + m) + "-" + (d < 10 ? "0" + d : "" + d) + " " + (h < 10 ? "0" + h : "" + h) + ":" + (mi < 10 ? "0" + mi : "" + mi) + ":" + (s < 10 ? "0" + s : "" + s);
};
HxOverrides.strDate = function (s) {
    var _g = s.length;
    switch (_g) {
        case 8:
            var k = s.split(":");
            var d = new Date();
            d["setTime"](0);
            d["setUTCHours"](k[0]);
            d["setUTCMinutes"](k[1]);
            d["setUTCSeconds"](k[2]);
            return d;
        case 10:
            var k1 = s.split("-");
            return new Date(k1[0], k1[1] - 1, k1[2], 0, 0, 0);
        case 19:
            var k2 = s.split(" ");
            var y = k2[0].split("-");
            var t = k2[1].split(":");
            return new Date(y[0], y[1] - 1, y[2], t[0], t[1], t[2]);
        default:
            throw new js__$Boot_HaxeError("Invalid date format : " + s);
    }
};
HxOverrides.cca = function (s, index) {
    var x = s.charCodeAt(index);
    if (x != x) {
        return undefined;
    }
    return x;
};
HxOverrides.substr = function (s, pos, len) {
    if (len == null) {
        len = s.length;
    }
    else if (len < 0) {
        if (pos == 0) {
            len = s.length + len;
        }
        else {
            return "";
        }
    }
    return s.substr(pos, len);
};
HxOverrides.indexOf = function (a, obj, i) {
    var len = a.length;
    if (i < 0) {
        i += len;
        if (i < 0) {
            i = 0;
        }
    }
    while (i < len) {
        if (a[i] === obj) {
            return i;
        }
        ++i;
    }
    return -1;
};
HxOverrides.lastIndexOf = function (a, obj, i) {
    var len = a.length;
    if (i >= len) {
        i = len - 1;
    }
    else if (i < 0) {
        i += len;
    }
    while (i >= 0) {
        if (a[i] === obj) {
            return i;
        }
        --i;
    }
    return -1;
};
HxOverrides.remove = function (a, obj) {
    var i = a.indexOf(obj);
    if (i == -1) {
        return false;
    }
    a.splice(i, 1);
    return true;
};
HxOverrides.iter = function (a) {
    return { cur: 0, arr: a, hasNext: function () {
            return this.cur < this.arr.length;
        }, next: function () {
            return this.arr[this.cur++];
        } };
};
var IntIterator = function (min, max) {
    this.min = min;
    this.max = max;
};
$hxClasses["IntIterator"] = IntIterator;
IntIterator.__name__ = ["IntIterator"];
IntIterator.prototype = {
    min: null,
    max: null,
    hasNext: function () {
        return this.min < this.max;
    },
    next: function () {
        return this.min++;
    },
    __class__: IntIterator
};
var List = function () {
    this.length = 0;
};
$hxClasses["List"] = List;
List.__name__ = ["List"];
List.prototype = {
    h: null,
    q: null,
    length: null,
    add: function (item) {
        var x = new _$List_ListNode(item, null);
        if (this.h == null) {
            this.h = x;
        }
        else {
            this.q.next = x;
        }
        this.q = x;
        this.length++;
    },
    push: function (item) {
        var x = new _$List_ListNode(item, this.h);
        this.h = x;
        if (this.q == null) {
            this.q = x;
        }
        this.length++;
    },
    first: function () {
        if (this.h == null) {
            return null;
        }
        else {
            return this.h.item;
        }
    },
    last: function () {
        if (this.q == null) {
            return null;
        }
        else {
            return this.q.item;
        }
    },
    pop: function () {
        if (this.h == null) {
            return null;
        }
        var x = this.h.item;
        this.h = this.h.next;
        if (this.h == null) {
            this.q = null;
        }
        this.length--;
        return x;
    },
    isEmpty: function () {
        return this.h == null;
    },
    clear: function () {
        this.h = null;
        this.q = null;
        this.length = 0;
    },
    remove: function (v) {
        var prev = null;
        var l = this.h;
        while (l != null) {
            if (l.item == v) {
                if (prev == null) {
                    this.h = l.next;
                }
                else {
                    prev.next = l.next;
                }
                if (this.q == l) {
                    this.q = prev;
                }
                this.length--;
                return true;
            }
            prev = l;
            l = l.next;
        }
        return false;
    },
    iterator: function () {
        return new _$List_ListIterator(this.h);
    },
    toString: function () {
        var s_b = "";
        var first = true;
        var l = this.h;
        s_b += "{";
        while (l != null) {
            if (first) {
                first = false;
            }
            else {
                s_b += ", ";
            }
            s_b += Std.string(Std.string(l.item));
            l = l.next;
        }
        s_b += "}";
        return s_b;
    },
    join: function (sep) {
        var s_b = "";
        var first = true;
        var l = this.h;
        while (l != null) {
            if (first) {
                first = false;
            }
            else {
                s_b += sep == null ? "null" : "" + sep;
            }
            s_b += Std.string(l.item);
            l = l.next;
        }
        return s_b;
    },
    filter: function (f) {
        var l2 = new List();
        var l = this.h;
        while (l != null) {
            var v = l.item;
            l = l.next;
            if (f(v)) {
                l2.add(v);
            }
        }
        return l2;
    },
    map: function (f) {
        var b = new List();
        var l = this.h;
        while (l != null) {
            var v = l.item;
            l = l.next;
            b.add(f(v));
        }
        return b;
    },
    __class__: List
};
var _$List_ListNode = function (item, next) {
    this.item = item;
    this.next = next;
};
$hxClasses["_List.ListNode"] = _$List_ListNode;
_$List_ListNode.__name__ = ["_List", "ListNode"];
_$List_ListNode.prototype = {
    item: null,
    next: null,
    __class__: _$List_ListNode
};
var _$List_ListIterator = function (head) {
    this.head = head;
};
$hxClasses["_List.ListIterator"] = _$List_ListIterator;
_$List_ListIterator.__name__ = ["_List", "ListIterator"];
_$List_ListIterator.prototype = {
    head: null,
    hasNext: function () {
        return this.head != null;
    },
    next: function () {
        var val = this.head.item;
        this.head = this.head.next;
        return val;
    },
    __class__: _$List_ListIterator
};
var _$Map_Map_$Impl_$ = {};
$hxClasses["_Map.Map_Impl_"] = _$Map_Map_$Impl_$;
_$Map_Map_$Impl_$.__name__ = ["_Map", "Map_Impl_"];
_$Map_Map_$Impl_$.set = function (this1, key, value) {
    this1.set(key, value);
};
_$Map_Map_$Impl_$.get = function (this1, key) {
    return this1.get(key);
};
_$Map_Map_$Impl_$.exists = function (this1, key) {
    return this1.exists(key);
};
_$Map_Map_$Impl_$.remove = function (this1, key) {
    return this1.remove(key);
};
_$Map_Map_$Impl_$.keys = function (this1) {
    return this1.keys();
};
_$Map_Map_$Impl_$.iterator = function (this1) {
    return this1.iterator();
};
_$Map_Map_$Impl_$.toString = function (this1) {
    return this1.toString();
};
_$Map_Map_$Impl_$.arrayWrite = function (this1, k, v) {
    this1.set(k, v);
    return v;
};
_$Map_Map_$Impl_$.toStringMap = function (t) {
    return new haxe_ds_StringMap();
};
_$Map_Map_$Impl_$.toIntMap = function (t) {
    return new haxe_ds_IntMap();
};
_$Map_Map_$Impl_$.toEnumValueMapMap = function (t) {
    return new haxe_ds_EnumValueMap();
};
_$Map_Map_$Impl_$.toObjectMap = function (t) {
    return new haxe_ds_ObjectMap();
};
_$Map_Map_$Impl_$.fromStringMap = function (map) {
    return map;
};
_$Map_Map_$Impl_$.fromIntMap = function (map) {
    return map;
};
_$Map_Map_$Impl_$.fromObjectMap = function (map) {
    return map;
};
Math.__name__ = ["Math"];
var Reflect = function () { };
$hxClasses["Reflect"] = Reflect;
Reflect.__name__ = ["Reflect"];
Reflect.hasField = function (o, field) {
    return Object.prototype.hasOwnProperty.call(o, field);
};
Reflect.field = function (o, field) {
    try {
        return o[field];
    }
    catch (e) {
        haxe_CallStack.lastException = e;
        return null;
    }
};
Reflect.setField = function (o, field, value) {
    o[field] = value;
};
Reflect.getProperty = function (o, field) {
    var tmp;
    if (o == null) {
        return null;
    }
    else {
        var tmp1;
        if (o.__properties__) {
            tmp = o.__properties__["get_" + field];
            tmp1 = tmp;
        }
        else {
            tmp1 = false;
        }
        if (tmp1) {
            return o[tmp]();
        }
        else {
            return o[field];
        }
    }
};
Reflect.setProperty = function (o, field, value) {
    var tmp;
    var tmp1;
    if (o.__properties__) {
        tmp = o.__properties__["set_" + field];
        tmp1 = tmp;
    }
    else {
        tmp1 = false;
    }
    if (tmp1) {
        o[tmp](value);
    }
    else {
        o[field] = value;
    }
};
Reflect.callMethod = function (o, func, args) {
    return func.apply(o, args);
};
Reflect.fields = function (o) {
    var a = [];
    if (o != null) {
        var hasOwnProperty = Object.prototype.hasOwnProperty;
        for (var f in o) {
            if (f != "__id__" && f != "hx__closures__" && hasOwnProperty.call(o, f)) {
                a.push(f);
            }
        }
    }
    return a;
};
Reflect.isFunction = function (f) {
    if (typeof (f) == "function") {
        return !(f.__name__ || f.__ename__);
    }
    else {
        return false;
    }
};
Reflect.compare = function (a, b) {
    if (a == b) {
        return 0;
    }
    else if (a > b) {
        return 1;
    }
    else {
        return -1;
    }
};
Reflect.compareMethods = function (f1, f2) {
    if (f1 == f2) {
        return true;
    }
    if (!Reflect.isFunction(f1) || !Reflect.isFunction(f2)) {
        return false;
    }
    if (f1.scope == f2.scope && f1.method == f2.method) {
        return f1.method != null;
    }
    else {
        return false;
    }
};
Reflect.isObject = function (v) {
    if (v == null) {
        return false;
    }
    var t = typeof (v);
    if (!(t == "string" || t == "object" && v.__enum__ == null)) {
        if (t == "function") {
            return (v.__name__ || v.__ename__) != null;
        }
        else {
            return false;
        }
    }
    else {
        return true;
    }
};
Reflect.isEnumValue = function (v) {
    if (v != null) {
        return v.__enum__ != null;
    }
    else {
        return false;
    }
};
Reflect.deleteField = function (o, field) {
    if (!Object.prototype.hasOwnProperty.call(o, field)) {
        return false;
    }
    delete (o[field]);
    return true;
};
Reflect.copy = function (o) {
    var o2 = {};
    var _g = 0;
    var _g1 = Reflect.fields(o);
    while (_g < _g1.length) {
        var f = _g1[_g];
        ++_g;
        o2[f] = Reflect.field(o, f);
    }
    return o2;
};
Reflect.makeVarArgs = function (f) {
    return function () {
        var a = Array.prototype.slice.call(arguments);
        return f(a);
    };
};
var Std = function () { };
$hxClasses["Std"] = Std;
Std.__name__ = ["Std"];
Std["is"] = function (v, t) {
    return js_Boot.__instanceof(v, t);
};
Std.instance = function (value, c) {
    if ((value instanceof c)) {
        return value;
    }
    else {
        return null;
    }
};
Std.string = function (s) {
    return js_Boot.__string_rec(s, "");
};
Std["int"] = function (x) {
    return x | 0;
};
Std.parseInt = function (x) {
    var v = parseInt(x, 10);
    if (v == 0 && (HxOverrides.cca(x, 1) == 120 || HxOverrides.cca(x, 1) == 88)) {
        v = parseInt(x);
    }
    if (isNaN(v)) {
        return null;
    }
    return v;
};
Std.parseFloat = function (x) {
    return parseFloat(x);
};
Std.random = function (x) {
    if (x <= 0) {
        return 0;
    }
    else {
        return Math.floor(Math.random() * x);
    }
};
var StringBuf = function () {
    this.b = "";
};
$hxClasses["StringBuf"] = StringBuf;
StringBuf.__name__ = ["StringBuf"];
StringBuf.prototype = {
    b: null,
    get_length: function () {
        return this.b.length;
    },
    add: function (x) {
        this.b += Std.string(x);
    },
    addChar: function (c) {
        this.b += String.fromCharCode(c);
    },
    addSub: function (s, pos, len) {
        this.b += len == null ? HxOverrides.substr(s, pos, null) : HxOverrides.substr(s, pos, len);
    },
    toString: function () {
        return this.b;
    },
    __class__: StringBuf,
    __properties__: { get_length: "get_length" }
};
var StringTools = function () { };
$hxClasses["StringTools"] = StringTools;
StringTools.__name__ = ["StringTools"];
StringTools.urlEncode = function (s) {
    return encodeURIComponent(s);
};
StringTools.urlDecode = function (s) {
    return decodeURIComponent(s.split("+").join(" "));
};
StringTools.htmlEscape = function (s, quotes) {
    s = s.split("&").join("&amp;").split("<").join("&lt;").split(">").join("&gt;");
    if (quotes) {
        return s.split("\"").join("&quot;").split("'").join("&#039;");
    }
    else {
        return s;
    }
};
StringTools.htmlUnescape = function (s) {
    return s.split("&gt;").join(">").split("&lt;").join("<").split("&quot;").join("\"").split("&#039;").join("'").split("&amp;").join("&");
};
StringTools.startsWith = function (s, start) {
    if (s.length >= start.length) {
        return HxOverrides.substr(s, 0, start.length) == start;
    }
    else {
        return false;
    }
};
StringTools.endsWith = function (s, end) {
    var elen = end.length;
    var slen = s.length;
    if (slen >= elen) {
        return HxOverrides.substr(s, slen - elen, elen) == end;
    }
    else {
        return false;
    }
};
StringTools.isSpace = function (s, pos) {
    var c = HxOverrides.cca(s, pos);
    if (!(c > 8 && c < 14)) {
        return c == 32;
    }
    else {
        return true;
    }
};
StringTools.ltrim = function (s) {
    var l = s.length;
    var r = 0;
    while (r < l && StringTools.isSpace(s, r))
        ++r;
    if (r > 0) {
        return HxOverrides.substr(s, r, l - r);
    }
    else {
        return s;
    }
};
StringTools.rtrim = function (s) {
    var l = s.length;
    var r = 0;
    while (r < l && StringTools.isSpace(s, l - r - 1))
        ++r;
    if (r > 0) {
        return HxOverrides.substr(s, 0, l - r);
    }
    else {
        return s;
    }
};
StringTools.trim = function (s) {
    return StringTools.ltrim(StringTools.rtrim(s));
};
StringTools.lpad = function (s, c, l) {
    if (c.length <= 0) {
        return s;
    }
    while (s.length < l)
        s = c + s;
    return s;
};
StringTools.rpad = function (s, c, l) {
    if (c.length <= 0) {
        return s;
    }
    while (s.length < l)
        s += c;
    return s;
};
StringTools.replace = function (s, sub, by) {
    return s.split(sub).join(by);
};
StringTools.hex = function (n, digits) {
    var s = "";
    var hexChars = "0123456789ABCDEF";
    while (true) {
        s = hexChars.charAt(n & 15) + s;
        n >>>= 4;
        if (!(n > 0)) {
            break;
        }
    }
    if (digits != null) {
        while (s.length < digits)
            s = "0" + s;
    }
    return s;
};
StringTools.fastCodeAt = function (s, index) {
    return s.charCodeAt(index);
};
StringTools.isEof = function (c) {
    return c != c;
};
StringTools.quoteUnixArg = function (argument) {
    if (argument == "") {
        return "''";
    }
    if (!new EReg("[^a-zA-Z0-9_@%+=:,./-]", "").match(argument)) {
        return argument;
    }
    return "'" + StringTools.replace(argument, "'", "'\"'\"'") + "'";
};
StringTools.quoteWinArg = function (argument, escapeMetaCharacters) {
    if (!new EReg("^[^ \t\\\\\"]+$", "").match(argument)) {
        var result_b = "";
        var needquote = argument.indexOf(" ") != -1 || argument.indexOf("\t") != -1 || argument == "";
        if (needquote) {
            result_b += "\"";
        }
        var bs_buf = new StringBuf();
        var _g1 = 0;
        var _g = argument.length;
        while (_g1 < _g) {
            var i = _g1++;
            var _g2 = HxOverrides.cca(argument, i);
            if (_g2 == null) {
                var c = _g2;
                if (bs_buf.b.length > 0) {
                    result_b += Std.string(bs_buf.b);
                    bs_buf = new StringBuf();
                }
                result_b += String.fromCharCode(c);
            }
            else {
                switch (_g2) {
                    case 34:
                        var bs = bs_buf.b;
                        result_b += bs == null ? "null" : "" + bs;
                        result_b += bs == null ? "null" : "" + bs;
                        bs_buf = new StringBuf();
                        result_b += "\\\"";
                        break;
                    case 92:
                        bs_buf.b += "\\";
                        break;
                    default:
                        var c1 = _g2;
                        if (bs_buf.b.length > 0) {
                            result_b += Std.string(bs_buf.b);
                            bs_buf = new StringBuf();
                        }
                        result_b += String.fromCharCode(c1);
                }
            }
        }
        result_b += Std.string(bs_buf.b);
        if (needquote) {
            result_b += Std.string(bs_buf.b);
            result_b += "\"";
        }
        argument = result_b;
    }
    if (escapeMetaCharacters) {
        var result_b1 = "";
        var _g11 = 0;
        var _g3 = argument.length;
        while (_g11 < _g3) {
            var i1 = _g11++;
            var c2 = HxOverrides.cca(argument, i1);
            if (StringTools.winMetaCharacters.indexOf(c2) >= 0) {
                result_b1 += "^";
            }
            result_b1 += String.fromCharCode(c2);
        }
        return result_b1;
    }
    else {
        return argument;
    }
};
var ValueType = $hxClasses["ValueType"] = { __ename__: ["ValueType"], __constructs__: ["TNull", "TInt", "TFloat", "TBool", "TObject", "TFunction", "TClass", "TEnum", "TUnknown"] };
ValueType.TNull = ["TNull", 0];
ValueType.TNull.toString = $estr;
ValueType.TNull.__enum__ = ValueType;
ValueType.TInt = ["TInt", 1];
ValueType.TInt.toString = $estr;
ValueType.TInt.__enum__ = ValueType;
ValueType.TFloat = ["TFloat", 2];
ValueType.TFloat.toString = $estr;
ValueType.TFloat.__enum__ = ValueType;
ValueType.TBool = ["TBool", 3];
ValueType.TBool.toString = $estr;
ValueType.TBool.__enum__ = ValueType;
ValueType.TObject = ["TObject", 4];
ValueType.TObject.toString = $estr;
ValueType.TObject.__enum__ = ValueType;
ValueType.TFunction = ["TFunction", 5];
ValueType.TFunction.toString = $estr;
ValueType.TFunction.__enum__ = ValueType;
ValueType.TClass = function (c) { var $x = ["TClass", 6, c]; $x.__enum__ = ValueType; $x.toString = $estr; return $x; };
ValueType.TEnum = function (e) { var $x = ["TEnum", 7, e]; $x.__enum__ = ValueType; $x.toString = $estr; return $x; };
ValueType.TUnknown = ["TUnknown", 8];
ValueType.TUnknown.toString = $estr;
ValueType.TUnknown.__enum__ = ValueType;
ValueType.__empty_constructs__ = [ValueType.TNull, ValueType.TInt, ValueType.TFloat, ValueType.TBool, ValueType.TObject, ValueType.TFunction, ValueType.TUnknown];
var Type = function () { };
$hxClasses["Type"] = Type;
Type.__name__ = ["Type"];
Type.getClass = function (o) {
    if (o == null) {
        return null;
    }
    else {
        return js_Boot.getClass(o);
    }
};
Type.getEnum = function (o) {
    if (o == null) {
        return null;
    }
    return o.__enum__;
};
Type.getSuperClass = function (c) {
    return c.__super__;
};
Type.getClassName = function (c) {
    var a = c.__name__;
    if (a == null) {
        return null;
    }
    return a.join(".");
};
Type.getEnumName = function (e) {
    var a = e.__ename__;
    return a.join(".");
};
Type.resolveClass = function (name) {
    var cl = $hxClasses[name];
    if (cl == null || !cl.__name__) {
        return null;
    }
    return cl;
};
Type.resolveEnum = function (name) {
    var e = $hxClasses[name];
    if (e == null || !e.__ename__) {
        return null;
    }
    return e;
};
Type.createInstance = function (cl, args) {
    var _g = args.length;
    switch (_g) {
        case 0:
            return new cl();
        case 1:
            return new cl(args[0]);
        case 2:
            return new cl(args[0], args[1]);
        case 3:
            return new cl(args[0], args[1], args[2]);
        case 4:
            return new cl(args[0], args[1], args[2], args[3]);
        case 5:
            return new cl(args[0], args[1], args[2], args[3], args[4]);
        case 6:
            return new cl(args[0], args[1], args[2], args[3], args[4], args[5]);
        case 7:
            return new cl(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);
        case 8:
            return new cl(args[0], args[1], args[2], args[3], args[4], args[5], args[6], args[7]);
        case 9:
            return new cl(args[0], args[1], args[2], args[3], args[4], args[5], args[6], args[7], args[8]);
        case 10:
            return new cl(args[0], args[1], args[2], args[3], args[4], args[5], args[6], args[7], args[8], args[9]);
        case 11:
            return new cl(args[0], args[1], args[2], args[3], args[4], args[5], args[6], args[7], args[8], args[9], args[10]);
        case 12:
            return new cl(args[0], args[1], args[2], args[3], args[4], args[5], args[6], args[7], args[8], args[9], args[10], args[11]);
        case 13:
            return new cl(args[0], args[1], args[2], args[3], args[4], args[5], args[6], args[7], args[8], args[9], args[10], args[11], args[12]);
        case 14:
            return new cl(args[0], args[1], args[2], args[3], args[4], args[5], args[6], args[7], args[8], args[9], args[10], args[11], args[12], args[13]);
        default:
            throw new js__$Boot_HaxeError("Too many arguments");
    }
};
Type.createEmptyInstance = function (cl) {
    function empty() { }
    ;
    empty.prototype = cl.prototype;
    return new empty();
};
Type.createEnum = function (e, constr, params) {
    var f = Reflect.field(e, constr);
    if (f == null) {
        throw new js__$Boot_HaxeError("No such constructor " + constr);
    }
    if (Reflect.isFunction(f)) {
        if (params == null) {
            throw new js__$Boot_HaxeError("Constructor " + constr + " need parameters");
        }
        return f.apply(e, params);
    }
    if (params != null && params.length != 0) {
        throw new js__$Boot_HaxeError("Constructor " + constr + " does not need parameters");
    }
    return f;
};
Type.createEnumIndex = function (e, index, params) {
    var c = e.__constructs__[index];
    if (c == null) {
        throw new js__$Boot_HaxeError(index + " is not a valid enum constructor index");
    }
    return Type.createEnum(e, c, params);
};
Type.getInstanceFields = function (c) {
    var a = [];
    for (var i in c.prototype)
        a.push(i);
    HxOverrides.remove(a, "__class__");
    HxOverrides.remove(a, "__properties__");
    return a;
};
Type.getClassFields = function (c) {
    var a = Reflect.fields(c);
    HxOverrides.remove(a, "__name__");
    HxOverrides.remove(a, "__interfaces__");
    HxOverrides.remove(a, "__properties__");
    HxOverrides.remove(a, "__super__");
    HxOverrides.remove(a, "__meta__");
    HxOverrides.remove(a, "prototype");
    return a;
};
Type.getEnumConstructs = function (e) {
    return e.__constructs__.slice();
};
Type["typeof"] = function (v) {
    var _g = typeof (v);
    switch (_g) {
        case "boolean":
            return ValueType.TBool;
        case "function":
            if (v.__name__ || v.__ename__) {
                return ValueType.TObject;
            }
            return ValueType.TFunction;
        case "number":
            if (Math.ceil(v) == v % 2147483648.0) {
                return ValueType.TInt;
            }
            return ValueType.TFloat;
        case "object":
            if (v == null) {
                return ValueType.TNull;
            }
            var e = v.__enum__;
            if (e != null) {
                return ValueType.TEnum(e);
            }
            var c = js_Boot.getClass(v);
            if (c != null) {
                return ValueType.TClass(c);
            }
            return ValueType.TObject;
        case "string":
            return ValueType.TClass(String);
        case "undefined":
            return ValueType.TNull;
        default:
            return ValueType.TUnknown;
    }
};
Type.enumEq = function (a, b) {
    if (a == b) {
        return true;
    }
    try {
        if (a[0] != b[0]) {
            return false;
        }
        var _g1 = 2;
        var _g = a.length;
        while (_g1 < _g) {
            var i = _g1++;
            if (!Type.enumEq(a[i], b[i])) {
                return false;
            }
        }
        var e = a.__enum__;
        if (e != b.__enum__ || e == null) {
            return false;
        }
    }
    catch (e1) {
        haxe_CallStack.lastException = e1;
        return false;
    }
    return true;
};
Type.enumConstructor = function (e) {
    return e[0];
};
Type.enumParameters = function (e) {
    return e.slice(2);
};
Type.enumIndex = function (e) {
    return e[1];
};
Type.allEnums = function (e) {
    return e.__empty_constructs__;
};
var cornerstone_integrator_Integrator = function () { };
$hxClasses["cornerstone.integrator.Integrator"] = cornerstone_integrator_Integrator;
cornerstone_integrator_Integrator.__name__ = ["cornerstone", "integrator", "Integrator"];
cornerstone_integrator_Integrator.Init = function () {
    if (cornerstone_integrator_configuration_Configuration.Data == null) {
        cornerstone_integrator_configuration_Configuration.Data = new cornerstone_integrator_configuration_ConfigurationData();
        cornerstone_integrator_configuration_Configuration.Data.set_LogFolder("D:\\Workspace\\Cornerstone\\log\\");
        cornerstone_integrator_configuration_Configuration.Data.set_CurrentDeployEnvironment(cornerstone_integrator_configuration_DeployEnvironmentEnum.DEVELOPMENT);
        cornerstone_integrator_configuration_Configuration.Data.set_DatabaseConnections([]);
        var dcd = new cornerstone_integrator_configuration_DatabaseConnectionData();
        dcd.set_DeploEnvironment(cornerstone_integrator_configuration_DeployEnvironmentEnum.DEVELOPMENT);
        cornerstone_integrator_configuration_Configuration.Data.get_DatabaseConnections().push(dcd);
    }
};
cornerstone_integrator_Integrator.Process = function (PostData) {
    var DecryptedString = "";
    var req = null;
    var LogicModule = "";
    var LogicClass = "";
    var LogicMethod = "";
    var Name = "";
    try {
        if (cornerstone_integrator_configuration_Configuration.Data == null) {
            cornerstone_integrator_Integrator.Init();
        }
        var unserializer = new haxe_Unserializer(PostData);
        req = unserializer.unserialize();
        var res = new cornerstone_integrator_transport_ResponseMessage();
        var Results = [];
        var _g = 0;
        var _g1 = req.get_Calls();
        while (_g < _g1.length) {
            var mc = _g1[_g];
            ++_g;
            LogicModule = mc.get_LogicModule();
            LogicClass = mc.get_LogicClass();
            LogicMethod = mc.get_LogicMethod();
            Name = mc.get_Name();
            var cl = Type.resolveClass(mc.get_LogicClass());
            if (cl == null) {
                cornerstone_integrator_exceptions_ExceptionManager.LogicException(1, "Clase no encontrada. Revise actualización de módulos");
            }
            var obj = Type.createInstance(cl, []);
            var mt = Reflect.field(obj, mc.get_LogicMethod());
            if (mt == null) {
                cornerstone_integrator_exceptions_ExceptionManager.LogicException(2, "Método no encontrado. Revise actualización de módulos");
            }
            var args = mc.get_LogicParams();
            var ret = mt.apply(obj, args);
            var mr = new cornerstone_integrator_transport_MethodResult();
            mr.set_Name(mc.get_Name());
            mr.set_ReturnObject(ret);
            Results.push(mr);
            obj.Dispose();
        }
        LogicModule = "";
        LogicClass = "";
        LogicMethod = "";
        Name = "OK";
        res.set_RequestSeq(req.get_RequestSeq());
        res.set_Results(Results);
        var serializer = new haxe_Serializer();
        serializer.serialize(res);
        var ResponseString = serializer.toString();
        return ResponseString;
    }
    catch ($e0) {
        haxe_CallStack.lastException = $e0;
        if ($e0 instanceof js__$Boot_HaxeError)
            $e0 = $e0.val;
        if (js_Boot.__instanceof($e0, cornerstone_integrator_exceptions_LogicException)) {
            var ex = $e0;
            return cornerstone_integrator_exceptions_ExceptionManager.HandleException(ex);
        }
        else if (js_Boot.__instanceof($e0, cornerstone_integrator_exceptions_SecurityException)) {
            var ex1 = $e0;
            return cornerstone_integrator_exceptions_ExceptionManager.HandleException(ex1);
        }
        else if (js_Boot.__instanceof($e0, Exception)) {
            var ex2 = $e0;
            return cornerstone_integrator_exceptions_ExceptionManager.HandleException(ex2, DecryptedString, req, LogicModule, LogicClass, LogicMethod, Name);
        }
        else {
            var ex3 = $e0;
            return cornerstone_integrator_exceptions_ExceptionManager.HandleException(Exception.wrap(ex3, { fileName: "Integrator.hx", lineNumber: 125, className: "cornerstone.integrator.Integrator", methodName: "Process" }), DecryptedString, req, LogicModule, LogicClass, LogicMethod, Name);
        }
    }
};
cornerstone_integrator_Integrator.main = function () {
    var o = cornerstone_integrator_LibReference;
    if (o != null) {
        js_Boot.getClass(o);
    }
};
var cornerstone_integrator_LibReference = function () {
};
$hxClasses["cornerstone.integrator.LibReference"] = cornerstone_integrator_LibReference;
cornerstone_integrator_LibReference.__name__ = ["cornerstone", "integrator", "LibReference"];
cornerstone_integrator_LibReference.prototype = {
    Dummy: function (String1, Int2, Float3, Bool4, Byte5, DateTime6, Enum7, Long8, Dictionary9, Uuid11) {
        var data = "";
        var o = cornerstone_integrator_helpers_Int64_$Helper;
        if (o != null) {
            js_Boot.getClass(o);
        }
        var o1 = cornerstone_integrator_datatypes_UUID;
        if (o1 != null) {
            js_Boot.getClass(o1);
        }
        haxe_Log.trace("test", null);
        return null;
    },
    __class__: cornerstone_integrator_LibReference
};
var cornerstone_integrator_configuration_Configuration = function () { };
$hxClasses["cornerstone.integrator.configuration.Configuration"] = cornerstone_integrator_configuration_Configuration;
cornerstone_integrator_configuration_Configuration.__name__ = ["cornerstone", "integrator", "configuration", "Configuration"];
cornerstone_integrator_configuration_Configuration.Data = null;
var cornerstone_integrator_configuration_ConfigurationData = function () {
};
$hxClasses["cornerstone.integrator.configuration.ConfigurationData"] = cornerstone_integrator_configuration_ConfigurationData;
cornerstone_integrator_configuration_ConfigurationData.__name__ = ["cornerstone", "integrator", "configuration", "ConfigurationData"];
cornerstone_integrator_configuration_ConfigurationData.prototype = {
    LogFolder: null,
    CurrentDeployEnvironment: null,
    DatabaseConnections: null,
    get_LogFolder: function () {
        return this.LogFolder;
    },
    set_LogFolder: function (value) {
        return this.LogFolder = value;
    },
    get_CurrentDeployEnvironment: function () {
        return this.CurrentDeployEnvironment;
    },
    set_CurrentDeployEnvironment: function (value) {
        return this.CurrentDeployEnvironment = value;
    },
    set_DatabaseConnections: function (value) {
        return this.DatabaseConnections = value;
    },
    get_DatabaseConnections: function () {
        return this.DatabaseConnections;
    },
    get_CurrentDatabaseConnection: function () {
        var _gthis = this;
        var res = this.get_DatabaseConnections().filter(function (d) {
            return d.get_DeploEnvironment() == _gthis.get_CurrentDeployEnvironment();
        });
        if (res.length == 0) {
            cornerstone_integrator_exceptions_ExceptionManager.LogicException(100, "No hay configuración de conexión a la base de datos en el ambiente deploy actual");
        }
        return res[0];
    },
    __class__: cornerstone_integrator_configuration_ConfigurationData,
    __properties__: { set_DatabaseConnections: "set_DatabaseConnections", get_DatabaseConnections: "get_DatabaseConnections", set_CurrentDeployEnvironment: "set_CurrentDeployEnvironment", get_CurrentDeployEnvironment: "get_CurrentDeployEnvironment", set_LogFolder: "set_LogFolder", get_LogFolder: "get_LogFolder" }
};
var cornerstone_integrator_configuration_DatabaseConnectionData = function () {
};
$hxClasses["cornerstone.integrator.configuration.DatabaseConnectionData"] = cornerstone_integrator_configuration_DatabaseConnectionData;
cornerstone_integrator_configuration_DatabaseConnectionData.__name__ = ["cornerstone", "integrator", "configuration", "DatabaseConnectionData"];
cornerstone_integrator_configuration_DatabaseConnectionData.prototype = {
    DatabaseEngine: null,
    DeploEnvironment: null,
    ConnectionString: null,
    DataSource: null,
    ServiceName: null,
    SID: null,
    UserID: null,
    Password: null,
    Database: null,
    OtherParameters: null,
    get_DatabaseEngine: function () {
        return this.DatabaseEngine;
    },
    set_DatabaseEngine: function (value) {
        return this.DatabaseEngine = value;
    },
    get_DeploEnvironment: function () {
        return this.DeploEnvironment;
    },
    set_DeploEnvironment: function (value) {
        return this.DeploEnvironment = value;
    },
    get_ConnectionString: function () {
        return this.ConnectionString;
    },
    set_ConnectionString: function (value) {
        return this.ConnectionString = value;
    },
    set_DataSource: function (value) {
        return this.DataSource = value;
    },
    get_DataSource: function () {
        return this.DataSource;
    },
    set_ServiceName: function (value) {
        return this.ServiceName = value;
    },
    get_ServiceName: function () {
        return this.ServiceName;
    },
    set_SID: function (value) {
        return this.SID = value;
    },
    get_SID: function () {
        return this.SID;
    },
    set_UserID: function (value) {
        return this.UserID = value;
    },
    get_UserID: function () {
        return this.UserID;
    },
    get_Password: function () {
        return this.Password;
    },
    set_Password: function (value) {
        return this.Password = value;
    },
    get_Database: function () {
        return this.Database;
    },
    set_Database: function (value) {
        return this.Database = value;
    },
    set_OtherParameters: function (value) {
        return this.OtherParameters = value;
    },
    get_OtherParameters: function () {
        return this.OtherParameters;
    },
    __class__: cornerstone_integrator_configuration_DatabaseConnectionData,
    __properties__: { set_OtherParameters: "set_OtherParameters", get_OtherParameters: "get_OtherParameters", set_Database: "set_Database", get_Database: "get_Database", set_Password: "set_Password", get_Password: "get_Password", set_UserID: "set_UserID", get_UserID: "get_UserID", set_SID: "set_SID", get_SID: "get_SID", set_ServiceName: "set_ServiceName", get_ServiceName: "get_ServiceName", set_DataSource: "set_DataSource", get_DataSource: "get_DataSource", set_ConnectionString: "set_ConnectionString", get_ConnectionString: "get_ConnectionString", set_DeploEnvironment: "set_DeploEnvironment", get_DeploEnvironment: "get_DeploEnvironment", set_DatabaseEngine: "set_DatabaseEngine", get_DatabaseEngine: "get_DatabaseEngine" }
};
var cornerstone_integrator_configuration_DatabaseEngineEnum = $hxClasses["cornerstone.integrator.configuration.DatabaseEngineEnum"] = { __ename__: ["cornerstone", "integrator", "configuration", "DatabaseEngineEnum"], __constructs__: ["SQLSERVER", "ORACLE", "MYSQL", "POSTGRESQL", "GENERIC"] };
cornerstone_integrator_configuration_DatabaseEngineEnum.SQLSERVER = ["SQLSERVER", 0];
cornerstone_integrator_configuration_DatabaseEngineEnum.SQLSERVER.toString = $estr;
cornerstone_integrator_configuration_DatabaseEngineEnum.SQLSERVER.__enum__ = cornerstone_integrator_configuration_DatabaseEngineEnum;
cornerstone_integrator_configuration_DatabaseEngineEnum.ORACLE = ["ORACLE", 1];
cornerstone_integrator_configuration_DatabaseEngineEnum.ORACLE.toString = $estr;
cornerstone_integrator_configuration_DatabaseEngineEnum.ORACLE.__enum__ = cornerstone_integrator_configuration_DatabaseEngineEnum;
cornerstone_integrator_configuration_DatabaseEngineEnum.MYSQL = ["MYSQL", 2];
cornerstone_integrator_configuration_DatabaseEngineEnum.MYSQL.toString = $estr;
cornerstone_integrator_configuration_DatabaseEngineEnum.MYSQL.__enum__ = cornerstone_integrator_configuration_DatabaseEngineEnum;
cornerstone_integrator_configuration_DatabaseEngineEnum.POSTGRESQL = ["POSTGRESQL", 3];
cornerstone_integrator_configuration_DatabaseEngineEnum.POSTGRESQL.toString = $estr;
cornerstone_integrator_configuration_DatabaseEngineEnum.POSTGRESQL.__enum__ = cornerstone_integrator_configuration_DatabaseEngineEnum;
cornerstone_integrator_configuration_DatabaseEngineEnum.GENERIC = ["GENERIC", 4];
cornerstone_integrator_configuration_DatabaseEngineEnum.GENERIC.toString = $estr;
cornerstone_integrator_configuration_DatabaseEngineEnum.GENERIC.__enum__ = cornerstone_integrator_configuration_DatabaseEngineEnum;
cornerstone_integrator_configuration_DatabaseEngineEnum.__empty_constructs__ = [cornerstone_integrator_configuration_DatabaseEngineEnum.SQLSERVER, cornerstone_integrator_configuration_DatabaseEngineEnum.ORACLE, cornerstone_integrator_configuration_DatabaseEngineEnum.MYSQL, cornerstone_integrator_configuration_DatabaseEngineEnum.POSTGRESQL, cornerstone_integrator_configuration_DatabaseEngineEnum.GENERIC];
var cornerstone_integrator_configuration_DeployEnvironmentEnum = $hxClasses["cornerstone.integrator.configuration.DeployEnvironmentEnum"] = { __ename__: ["cornerstone", "integrator", "configuration", "DeployEnvironmentEnum"], __constructs__: ["DEVELOPMENT", "TEST", "PRODUCTION"] };
cornerstone_integrator_configuration_DeployEnvironmentEnum.DEVELOPMENT = ["DEVELOPMENT", 0];
cornerstone_integrator_configuration_DeployEnvironmentEnum.DEVELOPMENT.toString = $estr;
cornerstone_integrator_configuration_DeployEnvironmentEnum.DEVELOPMENT.__enum__ = cornerstone_integrator_configuration_DeployEnvironmentEnum;
cornerstone_integrator_configuration_DeployEnvironmentEnum.TEST = ["TEST", 1];
cornerstone_integrator_configuration_DeployEnvironmentEnum.TEST.toString = $estr;
cornerstone_integrator_configuration_DeployEnvironmentEnum.TEST.__enum__ = cornerstone_integrator_configuration_DeployEnvironmentEnum;
cornerstone_integrator_configuration_DeployEnvironmentEnum.PRODUCTION = ["PRODUCTION", 2];
cornerstone_integrator_configuration_DeployEnvironmentEnum.PRODUCTION.toString = $estr;
cornerstone_integrator_configuration_DeployEnvironmentEnum.PRODUCTION.__enum__ = cornerstone_integrator_configuration_DeployEnvironmentEnum;
cornerstone_integrator_configuration_DeployEnvironmentEnum.__empty_constructs__ = [cornerstone_integrator_configuration_DeployEnvironmentEnum.DEVELOPMENT, cornerstone_integrator_configuration_DeployEnvironmentEnum.TEST, cornerstone_integrator_configuration_DeployEnvironmentEnum.PRODUCTION];
var cornerstone_integrator_datatypes_UUID = function () {
    this.UUIDValue = "00000000-0000-0000-0000-000000000000";
};
$hxClasses["cornerstone.integrator.datatypes.UUID"] = cornerstone_integrator_datatypes_UUID;
cornerstone_integrator_datatypes_UUID.__name__ = ["cornerstone", "integrator", "datatypes", "UUID"];
cornerstone_integrator_datatypes_UUID.newUUID = function () {
    var seed = cornerstone_integrator_datatypes_UUID.makeRandomSeed();
    var chars = cornerstone_integrator_datatypes_UUID.CHARS;
    var uuid = [];
    var rnd = 0;
    var r;
    var _g = 0;
    while (_g < 36) {
        var i = _g++;
        if (i == 8 || i == 13 || i == 18 || i == 23) {
            uuid[i] = "-";
        }
        else if (i == 14) {
            uuid[i] = "4";
        }
        else {
            if (rnd <= 2) {
                seed = cornerstone_integrator_datatypes_UUID.nextParkMiller(seed);
                rnd = 33554432 + (js_Boot.__cast(seed, Float) * 16777216 | 0) | 0;
            }
            r = rnd & 15;
            rnd >>= 4;
            uuid[i] = chars[i == 19 ? r & 3 | 8 : r];
        }
    }
    return new cornerstone_integrator_datatypes_UUID().set_Value(uuid.join(""));
};
cornerstone_integrator_datatypes_UUID.makeRandomSeed = function () {
    return Math.floor(Math.random() * 2147483647.0);
};
cornerstone_integrator_datatypes_UUID.nextParkMiller = function (seed) {
    return seed * 16807.0 % 2147483647.0 | 0;
};
cornerstone_integrator_datatypes_UUID.FromBytes = function (UUIDBytes) {
    var ReadedUUID = "";
    var HexLetters = "0123456789ABCDEF";
    var LetterCounter = 0;
    var _g1 = 0;
    var _g = UUIDBytes.length;
    while (_g1 < _g) {
        var i = _g1++;
        var Readed = UUIDBytes.b[i];
        var First = Readed << 4;
        var Second = Readed >> 4;
        ReadedUUID += HexLetters.charAt(First);
        ReadedUUID += HexLetters.charAt(Second);
        ++LetterCounter;
        if (LetterCounter == 9 || LetterCounter == 14 || LetterCounter == 19 || LetterCounter == 24) {
            ReadedUUID += "-";
            ++LetterCounter;
        }
    }
    return new cornerstone_integrator_datatypes_UUID().set_Value(ReadedUUID);
};
cornerstone_integrator_datatypes_UUID.prototype = {
    UUIDValue: null,
    set_Value: function (UUIDString) {
        this.UUIDValue = UUIDString;
        return this;
    },
    toBytes: function () {
        var GeneratedUUID = new haxe_io_Bytes(new ArrayBuffer(16));
        var SimpleUUID = StringTools.replace(this.UUIDValue, "-", "");
        var counter = 0;
        var lastvalue = 0;
        var bytespos = 0;
        var _g1 = 0;
        var _g = SimpleUUID.length;
        while (_g1 < _g) {
            var i = _g1++;
            var HexLetter = SimpleUUID.charAt(i);
            var value = 0;
            switch (HexLetter) {
                case "1":
                    value = 1;
                    break;
                case "2":
                    value = 2;
                    break;
                case "3":
                    value = 3;
                    break;
                case "4":
                    value = 4;
                    break;
                case "5":
                    value = 5;
                    break;
                case "6":
                    value = 6;
                    break;
                case "7":
                    value = 7;
                    break;
                case "8":
                    value = 8;
                    break;
                case "9":
                    value = 9;
                    break;
                case "A":
                    value = 10;
                    break;
                case "B":
                    value = 11;
                    break;
                case "C":
                    value = 12;
                    break;
                case "D":
                    value = 13;
                    break;
                case "E":
                    value = 14;
                    break;
                case "F":
                    value = 15;
                    break;
            }
            ++counter;
            if (counter == 2) {
                counter = 0;
                GeneratedUUID.b[bytespos] = (lastvalue | value >> 4) & 255;
                ++bytespos;
                lastvalue = 0;
            }
            else {
                lastvalue = value;
            }
        }
        return GeneratedUUID;
    },
    __class__: cornerstone_integrator_datatypes_UUID
};
var cornerstone_integrator_exceptions_ExceptionManager = function () { };
$hxClasses["cornerstone.integrator.exceptions.ExceptionManager"] = cornerstone_integrator_exceptions_ExceptionManager;
cornerstone_integrator_exceptions_ExceptionManager.__name__ = ["cornerstone", "integrator", "exceptions", "ExceptionManager"];
cornerstone_integrator_exceptions_ExceptionManager.HandleException = function (ex, DecryptedString, req, LogicModule, LogicClass, LogicMethod, Name) {
    var res = new cornerstone_integrator_transport_ResponseMessage();
    var cc = Type.getClassName(ex == null ? null : js_Boot.getClass(ex));
    if (cc == "cornerstone.integrator.exceptions.LogicException") {
        var le = js_Boot.__cast(ex, cornerstone_integrator_exceptions_LogicException);
        res.set_AttentionCode("" + le.get_Code());
        res.set_Message(le.message);
        res.set_RequestSeq(-1);
        res.set_Results(null);
    }
    else if (cc == "cornerstone.integrator.exceptions.SecurityException") {
        var le1 = js_Boot.__cast(ex, cornerstone_integrator_exceptions_SecurityException);
        res.set_AttentionCode("" + le1.get_Code());
        res.set_Message(le1.message);
        res.set_RequestSeq(-2);
        res.set_Results(null);
    }
    var serializer = new haxe_Serializer();
    serializer.serialize(res);
    var ResponseString = serializer.toString();
    return ResponseString;
};
cornerstone_integrator_exceptions_ExceptionManager.LogicException = function (Code, Msg) {
    try {
        throw new js__$Boot_HaxeError(new cornerstone_integrator_exceptions_LogicException(Code, Msg));
    }
    catch (e) {
        haxe_CallStack.lastException = e;
        if (e instanceof js__$Boot_HaxeError)
            e = e.val;
        throw js__$Boot_HaxeError.wrap(e);
    }
};
cornerstone_integrator_exceptions_ExceptionManager.SecurityException = function (Code, Msg) {
    try {
        throw new js__$Boot_HaxeError(new cornerstone_integrator_exceptions_SecurityException(Code, Msg));
    }
    catch (e) {
        haxe_CallStack.lastException = e;
        if (e instanceof js__$Boot_HaxeError)
            e = e.val;
        throw js__$Boot_HaxeError.wrap(e);
    }
};
var cornerstone_integrator_exceptions_LogicException = function (Code, Msg) {
    this.set_Code(Code);
    Exception.call(this, Msg, { fileName: "LogicException.hx", lineNumber: 7, className: "cornerstone.integrator.exceptions.LogicException", methodName: "new" });
};
$hxClasses["cornerstone.integrator.exceptions.LogicException"] = cornerstone_integrator_exceptions_LogicException;
cornerstone_integrator_exceptions_LogicException.__name__ = ["cornerstone", "integrator", "exceptions", "LogicException"];
cornerstone_integrator_exceptions_LogicException.__super__ = Exception;
cornerstone_integrator_exceptions_LogicException.prototype = $extend(Exception.prototype, {
    Code: null,
    set_Code: function (value) {
        return this.Code = value;
    },
    get_Code: function () {
        return this.Code;
    },
    __class__: cornerstone_integrator_exceptions_LogicException,
    __properties__: { set_Code: "set_Code", get_Code: "get_Code" }
});
var cornerstone_integrator_exceptions_SecurityException = function (Code, Msg) {
    this.set_Code(Code);
    Exception.call(this, Msg, { fileName: "SecurityException.hx", lineNumber: 7, className: "cornerstone.integrator.exceptions.SecurityException", methodName: "new" });
};
$hxClasses["cornerstone.integrator.exceptions.SecurityException"] = cornerstone_integrator_exceptions_SecurityException;
cornerstone_integrator_exceptions_SecurityException.__name__ = ["cornerstone", "integrator", "exceptions", "SecurityException"];
cornerstone_integrator_exceptions_SecurityException.__super__ = Exception;
cornerstone_integrator_exceptions_SecurityException.prototype = $extend(Exception.prototype, {
    Code: null,
    set_Code: function (value) {
        return this.Code = value;
    },
    get_Code: function () {
        return this.Code;
    },
    __class__: cornerstone_integrator_exceptions_SecurityException,
    __properties__: { set_Code: "set_Code", get_Code: "get_Code" }
});
var cornerstone_integrator_helpers_Int64_$Helper = function () { };
$hxClasses["cornerstone.integrator.helpers.Int64_Helper"] = cornerstone_integrator_helpers_Int64_$Helper;
cornerstone_integrator_helpers_Int64_$Helper.__name__ = ["cornerstone", "integrator", "helpers", "Int64_Helper"];
cornerstone_integrator_helpers_Int64_$Helper.fromFloat = function (f) {
    var h = f / 4294967296.0 | 0;
    var l = f | 0;
    var this1 = new haxe__$Int64__$_$_$Int64(h, l);
    return this1;
};
cornerstone_integrator_helpers_Int64_$Helper.toFloat = function (i) {
    var f = i.low;
    if (f < 0) {
        f += 4294967296.0;
    }
    return i.high * 4294967296.0 + f;
};
var cornerstone_integrator_interfaces_IDisposable = function () { };
$hxClasses["cornerstone.integrator.interfaces.IDisposable"] = cornerstone_integrator_interfaces_IDisposable;
cornerstone_integrator_interfaces_IDisposable.__name__ = ["cornerstone", "integrator", "interfaces", "IDisposable"];
cornerstone_integrator_interfaces_IDisposable.prototype = {
    Dispose: null,
    __class__: cornerstone_integrator_interfaces_IDisposable
};
var cornerstone_integrator_transport_MethodCall = function () {
};
$hxClasses["cornerstone.integrator.transport.MethodCall"] = cornerstone_integrator_transport_MethodCall;
cornerstone_integrator_transport_MethodCall.__name__ = ["cornerstone", "integrator", "transport", "MethodCall"];
cornerstone_integrator_transport_MethodCall.prototype = {
    LogicModule: null,
    LogicClass: null,
    LogicMethod: null,
    LogicParams: null,
    Name: null,
    set_LogicModule: function (value) {
        return this.LogicModule = value;
    },
    get_LogicModule: function () {
        return this.LogicModule;
    },
    set_LogicClass: function (value) {
        return this.LogicClass = value;
    },
    get_LogicClass: function () {
        return this.LogicClass;
    },
    set_LogicMethod: function (value) {
        return this.LogicMethod = value;
    },
    get_LogicMethod: function () {
        return this.LogicMethod;
    },
    set_LogicParams: function (value) {
        return this.LogicParams = value;
    },
    get_LogicParams: function () {
        return this.LogicParams;
    },
    get_Name: function () {
        return this.Name;
    },
    set_Name: function (value) {
        return this.Name = value;
    },
    __class__: cornerstone_integrator_transport_MethodCall,
    __properties__: { set_Name: "set_Name", get_Name: "get_Name", set_LogicParams: "set_LogicParams", get_LogicParams: "get_LogicParams", set_LogicMethod: "set_LogicMethod", get_LogicMethod: "get_LogicMethod", set_LogicClass: "set_LogicClass", get_LogicClass: "get_LogicClass", set_LogicModule: "set_LogicModule", get_LogicModule: "get_LogicModule" }
};
var cornerstone_integrator_transport_MethodResult = function () {
};
$hxClasses["cornerstone.integrator.transport.MethodResult"] = cornerstone_integrator_transport_MethodResult;
cornerstone_integrator_transport_MethodResult.__name__ = ["cornerstone", "integrator", "transport", "MethodResult"];
cornerstone_integrator_transport_MethodResult.prototype = {
    ReturnObject: null,
    Name: null,
    get_ReturnObject: function () {
        return this.ReturnObject;
    },
    set_ReturnObject: function (value) {
        return this.ReturnObject = value;
    },
    get_Name: function () {
        return this.Name;
    },
    set_Name: function (value) {
        return this.Name = value;
    },
    __class__: cornerstone_integrator_transport_MethodResult,
    __properties__: { set_Name: "set_Name", get_Name: "get_Name", set_ReturnObject: "set_ReturnObject", get_ReturnObject: "get_ReturnObject" }
};
var cornerstone_integrator_transport_RequestMessage = function () {
};
$hxClasses["cornerstone.integrator.transport.RequestMessage"] = cornerstone_integrator_transport_RequestMessage;
cornerstone_integrator_transport_RequestMessage.__name__ = ["cornerstone", "integrator", "transport", "RequestMessage"];
cornerstone_integrator_transport_RequestMessage.prototype = {
    RequestSeq: null,
    SessionID: null,
    Calls: null,
    set_RequestSeq: function (value) {
        return this.RequestSeq = value;
    },
    get_RequestSeq: function () {
        return this.RequestSeq;
    },
    get_SessionID: function () {
        return this.SessionID;
    },
    set_SessionID: function (value) {
        return this.SessionID = value;
    },
    get_Calls: function () {
        return this.Calls;
    },
    set_Calls: function (value) {
        return this.Calls = value;
    },
    __class__: cornerstone_integrator_transport_RequestMessage,
    __properties__: { set_Calls: "set_Calls", get_Calls: "get_Calls", set_SessionID: "set_SessionID", get_SessionID: "get_SessionID", set_RequestSeq: "set_RequestSeq", get_RequestSeq: "get_RequestSeq" }
};
var cornerstone_integrator_transport_ResponseMessage = function () {
};
$hxClasses["cornerstone.integrator.transport.ResponseMessage"] = cornerstone_integrator_transport_ResponseMessage;
cornerstone_integrator_transport_ResponseMessage.__name__ = ["cornerstone", "integrator", "transport", "ResponseMessage"];
cornerstone_integrator_transport_ResponseMessage.prototype = {
    Results: null,
    RequestSeq: null,
    Message: null,
    AttentionCode: null,
    set_Results: function (value) {
        return this.Results = value;
    },
    get_Results: function () {
        return this.Results;
    },
    set_RequestSeq: function (value) {
        return this.RequestSeq = value;
    },
    get_RequestSeq: function () {
        return this.RequestSeq;
    },
    set_Message: function (value) {
        return this.Message = value;
    },
    get_Message: function () {
        return this.Message;
    },
    get_AttentionCode: function () {
        return this.AttentionCode;
    },
    set_AttentionCode: function (value) {
        return this.AttentionCode = value;
    },
    __class__: cornerstone_integrator_transport_ResponseMessage,
    __properties__: { set_AttentionCode: "set_AttentionCode", get_AttentionCode: "get_AttentionCode", set_Message: "set_Message", get_Message: "get_Message", set_RequestSeq: "set_RequestSeq", get_RequestSeq: "get_RequestSeq", set_Results: "set_Results", get_Results: "get_Results" }
};
var exception_StackTools = function () { };
$hxClasses["exception.StackTools"] = exception_StackTools;
exception_StackTools.__name__ = ["exception", "StackTools"];
exception_StackTools.truncate = function (stack, pos, fromTop) {
    if (fromTop == null) {
        fromTop = false;
    }
    return exception_StackTools.jsTruncate(stack, pos, fromTop);
};
exception_StackTools.jsTruncate = function (stack, pos, fromTop) {
    if (fromTop == null) {
        fromTop = false;
    }
    var posIndex = 0;
    var posClass = StringTools.replace(pos.className, ".", "_");
    var _g1 = 0;
    var _g = stack.length;
    while (_g1 < _g) {
        var i = _g1++;
        var _g2 = stack[i];
        if (_g2[1] == 2) {
            if (_g2[2] != null) {
                if (_g2[2][1] == 3) {
                    var line = _g2[4];
                    var file = _g2[3];
                    var methodName = _g2[2][3];
                    var className = _g2[2][2];
                    if (className == posClass && methodName == pos.methodName) {
                        posIndex = i;
                        break;
                    }
                }
            }
        }
    }
    if (fromTop) {
        return stack.slice(0, posIndex + 1);
    }
    else {
        return stack.slice(posIndex);
    }
};
var exception__$StackTools_IntIterator = function (from, till) {
    this.till = 0;
    this.current = 0;
    this.current = from;
    this.till = till;
};
$hxClasses["exception._StackTools.IntIterator"] = exception__$StackTools_IntIterator;
exception__$StackTools_IntIterator.__name__ = ["exception", "_StackTools", "IntIterator"];
exception__$StackTools_IntIterator.prototype = {
    current: null,
    till: null,
    hasNext: function () {
        return this.current != this.till;
    },
    next: function () {
        if (this.current < this.till) {
            return this.current++;
        }
        else {
            return this.current--;
        }
    },
    __class__: exception__$StackTools_IntIterator
};
var haxe_StackItem = $hxClasses["haxe.StackItem"] = { __ename__: ["haxe", "StackItem"], __constructs__: ["CFunction", "Module", "FilePos", "Method", "LocalFunction"] };
haxe_StackItem.CFunction = ["CFunction", 0];
haxe_StackItem.CFunction.toString = $estr;
haxe_StackItem.CFunction.__enum__ = haxe_StackItem;
haxe_StackItem.Module = function (m) { var $x = ["Module", 1, m]; $x.__enum__ = haxe_StackItem; $x.toString = $estr; return $x; };
haxe_StackItem.FilePos = function (s, file, line) { var $x = ["FilePos", 2, s, file, line]; $x.__enum__ = haxe_StackItem; $x.toString = $estr; return $x; };
haxe_StackItem.Method = function (classname, method) { var $x = ["Method", 3, classname, method]; $x.__enum__ = haxe_StackItem; $x.toString = $estr; return $x; };
haxe_StackItem.LocalFunction = function (v) { var $x = ["LocalFunction", 4, v]; $x.__enum__ = haxe_StackItem; $x.toString = $estr; return $x; };
haxe_StackItem.__empty_constructs__ = [haxe_StackItem.CFunction];
var haxe_CallStack = function () { };
$hxClasses["haxe.CallStack"] = haxe_CallStack;
haxe_CallStack.__name__ = ["haxe", "CallStack"];
haxe_CallStack.lastException = null;
haxe_CallStack.getStack = function (e) {
    if (e == null) {
        return [];
    }
    var oldValue = Error.prepareStackTrace;
    Error.prepareStackTrace = function (error, callsites) {
        var stack = [];
        var _g = 0;
        while (_g < callsites.length) {
            var site = callsites[_g];
            ++_g;
            if (haxe_CallStack.wrapCallSite != null) {
                site = haxe_CallStack.wrapCallSite(site);
            }
            var method = null;
            var fullName = site.getFunctionName();
            if (fullName != null) {
                var idx = fullName.lastIndexOf(".");
                if (idx >= 0) {
                    var className = HxOverrides.substr(fullName, 0, idx);
                    var methodName = HxOverrides.substr(fullName, idx + 1, null);
                    method = haxe_StackItem.Method(className, methodName);
                }
            }
            stack.push(haxe_StackItem.FilePos(method, site.getFileName(), site.getLineNumber()));
        }
        return stack;
    };
    var a = haxe_CallStack.makeStack(e.stack);
    Error.prepareStackTrace = oldValue;
    return a;
};
haxe_CallStack.wrapCallSite = null;
haxe_CallStack.callStack = function () {
    try {
        throw new Error();
    }
    catch (e) {
        haxe_CallStack.lastException = e;
        if (e instanceof js__$Boot_HaxeError)
            e = e.val;
        var a = haxe_CallStack.getStack(e);
        a.shift();
        return a;
    }
};
haxe_CallStack.exceptionStack = function () {
    return haxe_CallStack.getStack(haxe_CallStack.lastException);
};
haxe_CallStack.toString = function (stack) {
    var b = new StringBuf();
    var _g = 0;
    while (_g < stack.length) {
        var s = stack[_g];
        ++_g;
        b.b += "\nCalled from ";
        haxe_CallStack.itemToString(b, s);
    }
    return b.b;
};
haxe_CallStack.itemToString = function (b, s) {
    switch (s[1]) {
        case 0:
            b.b += "a C function";
            break;
        case 1:
            var m = s[2];
            b.b += "module ";
            b.b += m == null ? "null" : "" + m;
            break;
        case 2:
            var line = s[4];
            var file = s[3];
            var s1 = s[2];
            if (s1 != null) {
                haxe_CallStack.itemToString(b, s1);
                b.b += " (";
            }
            b.b += file == null ? "null" : "" + file;
            b.b += " line ";
            b.b += line == null ? "null" : "" + line;
            if (s1 != null) {
                b.b += ")";
            }
            break;
        case 3:
            var meth = s[3];
            var cname = s[2];
            b.b += cname == null ? "null" : "" + cname;
            b.b += ".";
            b.b += meth == null ? "null" : "" + meth;
            break;
        case 4:
            var n = s[2];
            b.b += "local function #";
            b.b += n == null ? "null" : "" + n;
            break;
    }
};
haxe_CallStack.makeStack = function (s) {
    if (s == null) {
        return [];
    }
    else if (typeof (s) == "string") {
        var stack = s.split("\n");
        if (stack[0] == "Error") {
            stack.shift();
        }
        var m = [];
        var rie10 = new EReg("^   at ([A-Za-z0-9_. ]+) \\(([^)]+):([0-9]+):([0-9]+)\\)$", "");
        var _g = 0;
        while (_g < stack.length) {
            var line = stack[_g];
            ++_g;
            if (rie10.match(line)) {
                var path = rie10.matched(1).split(".");
                var meth = path.pop();
                var file = rie10.matched(2);
                var line1 = Std.parseInt(rie10.matched(3));
                m.push(haxe_StackItem.FilePos(meth == "Anonymous function" ? haxe_StackItem.LocalFunction() : meth == "Global code" ? null : haxe_StackItem.Method(path.join("."), meth), file, line1));
            }
            else {
                m.push(haxe_StackItem.Module(StringTools.trim(line)));
            }
        }
        return m;
    }
    else {
        return s;
    }
};
var haxe_IMap = function () { };
$hxClasses["haxe.IMap"] = haxe_IMap;
haxe_IMap.__name__ = ["haxe", "IMap"];
haxe_IMap.prototype = {
    get: null,
    set: null,
    exists: null,
    remove: null,
    keys: null,
    iterator: null,
    toString: null,
    __class__: haxe_IMap
};
var haxe__$Int32_Int32_$Impl_$ = {};
$hxClasses["haxe._Int32.Int32_Impl_"] = haxe__$Int32_Int32_$Impl_$;
haxe__$Int32_Int32_$Impl_$.__name__ = ["haxe", "_Int32", "Int32_Impl_"];
haxe__$Int32_Int32_$Impl_$.preIncrement = function (this1) {
    this1 = ++this1 | 0;
    return this1;
};
haxe__$Int32_Int32_$Impl_$.postIncrement = function (this1) {
    var ret = this1++;
    this1 |= 0;
    return ret;
};
haxe__$Int32_Int32_$Impl_$.preDecrement = function (this1) {
    this1 = --this1 | 0;
    return this1;
};
haxe__$Int32_Int32_$Impl_$.postDecrement = function (this1) {
    var ret = this1--;
    this1 |= 0;
    return ret;
};
haxe__$Int32_Int32_$Impl_$.add = function (a, b) {
    return a + b | 0;
};
haxe__$Int32_Int32_$Impl_$.addInt = function (a, b) {
    return a + b | 0;
};
haxe__$Int32_Int32_$Impl_$.sub = function (a, b) {
    return a - b | 0;
};
haxe__$Int32_Int32_$Impl_$.subInt = function (a, b) {
    return a - b | 0;
};
haxe__$Int32_Int32_$Impl_$.intSub = function (a, b) {
    return a - b | 0;
};
haxe__$Int32_Int32_$Impl_$.mul = function (a, b) {
    return haxe__$Int32_Int32_$Impl_$._mul(a, b);
};
haxe__$Int32_Int32_$Impl_$.mulInt = function (a, b) {
    return haxe__$Int32_Int32_$Impl_$._mul(a, b);
};
haxe__$Int32_Int32_$Impl_$.toFloat = function (this1) {
    return this1;
};
haxe__$Int32_Int32_$Impl_$.ucompare = function (a, b) {
    if (a < 0) {
        if (b < 0) {
            return ~b - ~a | 0;
        }
        else {
            return 1;
        }
    }
    if (b < 0) {
        return -1;
    }
    else {
        return a - b | 0;
    }
};
haxe__$Int32_Int32_$Impl_$.clamp = function (x) {
    return x | 0;
};
var haxe__$Int64_Int64_$Impl_$ = {};
$hxClasses["haxe._Int64.Int64_Impl_"] = haxe__$Int64_Int64_$Impl_$;
haxe__$Int64_Int64_$Impl_$.__name__ = ["haxe", "_Int64", "Int64_Impl_"];
haxe__$Int64_Int64_$Impl_$.__properties__ = { get_low: "get_low", get_high: "get_high" };
haxe__$Int64_Int64_$Impl_$._new = function (x) {
    var this1 = x;
    return this1;
};
haxe__$Int64_Int64_$Impl_$.copy = function (this1) {
    var this2 = new haxe__$Int64__$_$_$Int64(this1.high, this1.low);
    return this2;
};
haxe__$Int64_Int64_$Impl_$.make = function (high, low) {
    var this1 = new haxe__$Int64__$_$_$Int64(high, low);
    return this1;
};
haxe__$Int64_Int64_$Impl_$.ofInt = function (x) {
    var this1 = new haxe__$Int64__$_$_$Int64(x >> 31, x);
    return this1;
};
haxe__$Int64_Int64_$Impl_$.toInt = function (x) {
    if (x.high != x.low >> 31) {
        throw new js__$Boot_HaxeError("Overflow");
    }
    return x.low;
};
haxe__$Int64_Int64_$Impl_$["is"] = function (val) {
    return js_Boot.__instanceof(val, haxe__$Int64__$_$_$Int64);
};
haxe__$Int64_Int64_$Impl_$.getHigh = function (x) {
    return x.high;
};
haxe__$Int64_Int64_$Impl_$.getLow = function (x) {
    return x.low;
};
haxe__$Int64_Int64_$Impl_$.isNeg = function (x) {
    return x.high < 0;
};
haxe__$Int64_Int64_$Impl_$.isZero = function (x) {
    var this1 = new haxe__$Int64__$_$_$Int64(0, 0);
    var b = this1;
    if (x.high == b.high) {
        return x.low == b.low;
    }
    else {
        return false;
    }
};
haxe__$Int64_Int64_$Impl_$.compare = function (a, b) {
    var v = a.high - b.high | 0;
    if (v != 0) {
        v = v;
    }
    else {
        v = haxe__$Int32_Int32_$Impl_$.ucompare(a.low, b.low);
    }
    if (a.high < 0) {
        if (b.high < 0) {
            return v;
        }
        else {
            return -1;
        }
    }
    else if (b.high >= 0) {
        return v;
    }
    else {
        return 1;
    }
};
haxe__$Int64_Int64_$Impl_$.ucompare = function (a, b) {
    var v = haxe__$Int32_Int32_$Impl_$.ucompare(a.high, b.high);
    if (v != 0) {
        return v;
    }
    else {
        return haxe__$Int32_Int32_$Impl_$.ucompare(a.low, b.low);
    }
};
haxe__$Int64_Int64_$Impl_$.toStr = function (x) {
    return haxe__$Int64_Int64_$Impl_$.toString(x);
};
haxe__$Int64_Int64_$Impl_$.toString = function (this1) {
    var i = this1;
    var this2 = new haxe__$Int64__$_$_$Int64(0, 0);
    var b = this2;
    if (i.high == b.high && i.low == b.low) {
        return "0";
    }
    var str = "";
    var neg = false;
    if (i.high < 0) {
        neg = true;
    }
    var this3 = new haxe__$Int64__$_$_$Int64(0, 10);
    var ten = this3;
    while (true) {
        var this4 = new haxe__$Int64__$_$_$Int64(0, 0);
        var b1 = this4;
        if (!(i.high != b1.high || i.low != b1.low)) {
            break;
        }
        var r = haxe__$Int64_Int64_$Impl_$.divMod(i, ten);
        if (r.modulus.high < 0) {
            var x = r.modulus;
            var high = ~x.high;
            var low = -x.low;
            if (low == 0) {
                var ret = high++;
                high = high | 0;
            }
            var this5 = new haxe__$Int64__$_$_$Int64(high, low);
            str = this5.low + str;
            var x1 = r.quotient;
            var high1 = ~x1.high;
            var low1 = -x1.low;
            if (low1 == 0) {
                var ret1 = high1++;
                high1 = high1 | 0;
            }
            var this6 = new haxe__$Int64__$_$_$Int64(high1, low1);
            i = this6;
        }
        else {
            str = r.modulus.low + str;
            i = r.quotient;
        }
    }
    if (neg) {
        str = "-" + str;
    }
    return str;
};
haxe__$Int64_Int64_$Impl_$.parseString = function (sParam) {
    return haxe_Int64Helper.parseString(sParam);
};
haxe__$Int64_Int64_$Impl_$.fromFloat = function (f) {
    return haxe_Int64Helper.fromFloat(f);
};
haxe__$Int64_Int64_$Impl_$.divMod = function (dividend, divisor) {
    if (divisor.high == 0) {
        var _g = divisor.low;
        switch (_g) {
            case 0:
                throw new js__$Boot_HaxeError("divide by zero");
                break;
            case 1:
                var this1 = new haxe__$Int64__$_$_$Int64(dividend.high, dividend.low);
                var this2 = new haxe__$Int64__$_$_$Int64(0, 0);
                return { quotient: this1, modulus: this2 };
        }
    }
    var divSign = dividend.high < 0 != divisor.high < 0;
    var modulus;
    if (dividend.high < 0) {
        var high = ~dividend.high;
        var low = -dividend.low;
        if (low == 0) {
            var ret = high++;
            high = high | 0;
        }
        var this3 = new haxe__$Int64__$_$_$Int64(high, low);
        modulus = this3;
    }
    else {
        var this4 = new haxe__$Int64__$_$_$Int64(dividend.high, dividend.low);
        modulus = this4;
    }
    if (divisor.high < 0) {
        var high1 = ~divisor.high;
        var low1 = -divisor.low;
        if (low1 == 0) {
            var ret1 = high1++;
            high1 = high1 | 0;
        }
        var this5 = new haxe__$Int64__$_$_$Int64(high1, low1);
        divisor = this5;
    }
    else {
        divisor = divisor;
    }
    var this6 = new haxe__$Int64__$_$_$Int64(0, 0);
    var quotient = this6;
    var this7 = new haxe__$Int64__$_$_$Int64(0, 1);
    var mask = this7;
    while (!(divisor.high < 0)) {
        var v = haxe__$Int32_Int32_$Impl_$.ucompare(divisor.high, modulus.high);
        var cmp = v != 0 ? v : haxe__$Int32_Int32_$Impl_$.ucompare(divisor.low, modulus.low);
        var b = 1;
        b &= 63;
        if (b == 0) {
            var this8 = new haxe__$Int64__$_$_$Int64(divisor.high, divisor.low);
            divisor = this8;
        }
        else if (b < 32) {
            var this9 = new haxe__$Int64__$_$_$Int64(divisor.high << b | divisor.low >>> 32 - b, divisor.low << b);
            divisor = this9;
        }
        else {
            var this10 = new haxe__$Int64__$_$_$Int64(divisor.low << b - 32, 0);
            divisor = this10;
        }
        var b1 = 1;
        b1 &= 63;
        if (b1 == 0) {
            var this11 = new haxe__$Int64__$_$_$Int64(mask.high, mask.low);
            mask = this11;
        }
        else if (b1 < 32) {
            var this12 = new haxe__$Int64__$_$_$Int64(mask.high << b1 | mask.low >>> 32 - b1, mask.low << b1);
            mask = this12;
        }
        else {
            var this13 = new haxe__$Int64__$_$_$Int64(mask.low << b1 - 32, 0);
            mask = this13;
        }
        if (cmp >= 0) {
            break;
        }
    }
    while (true) {
        var this14 = new haxe__$Int64__$_$_$Int64(0, 0);
        var b2 = this14;
        if (!(mask.high != b2.high || mask.low != b2.low)) {
            break;
        }
        var v1 = haxe__$Int32_Int32_$Impl_$.ucompare(modulus.high, divisor.high);
        if ((v1 != 0 ? v1 : haxe__$Int32_Int32_$Impl_$.ucompare(modulus.low, divisor.low)) >= 0) {
            var this15 = new haxe__$Int64__$_$_$Int64(quotient.high | mask.high, quotient.low | mask.low);
            quotient = this15;
            var high2 = modulus.high - divisor.high | 0;
            var low2 = modulus.low - divisor.low | 0;
            if (haxe__$Int32_Int32_$Impl_$.ucompare(modulus.low, divisor.low) < 0) {
                var ret2 = high2--;
                high2 = high2 | 0;
            }
            var this16 = new haxe__$Int64__$_$_$Int64(high2, low2);
            modulus = this16;
        }
        var b3 = 1;
        b3 &= 63;
        if (b3 == 0) {
            var this17 = new haxe__$Int64__$_$_$Int64(mask.high, mask.low);
            mask = this17;
        }
        else if (b3 < 32) {
            var this18 = new haxe__$Int64__$_$_$Int64(mask.high >>> b3, mask.high << 32 - b3 | mask.low >>> b3);
            mask = this18;
        }
        else {
            var this19 = new haxe__$Int64__$_$_$Int64(0, mask.high >>> b3 - 32);
            mask = this19;
        }
        var b4 = 1;
        b4 &= 63;
        if (b4 == 0) {
            var this20 = new haxe__$Int64__$_$_$Int64(divisor.high, divisor.low);
            divisor = this20;
        }
        else if (b4 < 32) {
            var this21 = new haxe__$Int64__$_$_$Int64(divisor.high >>> b4, divisor.high << 32 - b4 | divisor.low >>> b4);
            divisor = this21;
        }
        else {
            var this22 = new haxe__$Int64__$_$_$Int64(0, divisor.high >>> b4 - 32);
            divisor = this22;
        }
    }
    if (divSign) {
        var high3 = ~quotient.high;
        var low3 = -quotient.low;
        if (low3 == 0) {
            var ret3 = high3++;
            high3 = high3 | 0;
        }
        var this23 = new haxe__$Int64__$_$_$Int64(high3, low3);
        quotient = this23;
    }
    if (dividend.high < 0) {
        var high4 = ~modulus.high;
        var low4 = -modulus.low;
        if (low4 == 0) {
            var ret4 = high4++;
            high4 = high4 | 0;
        }
        var this24 = new haxe__$Int64__$_$_$Int64(high4, low4);
        modulus = this24;
    }
    return { quotient: quotient, modulus: modulus };
};
haxe__$Int64_Int64_$Impl_$.neg = function (x) {
    var high = ~x.high;
    var low = -x.low;
    if (low == 0) {
        var ret = high++;
        high = high | 0;
    }
    var this1 = new haxe__$Int64__$_$_$Int64(high, low);
    return this1;
};
haxe__$Int64_Int64_$Impl_$.preIncrement = function (this1) {
    var this2 = new haxe__$Int64__$_$_$Int64(this1.high, this1.low);
    this1 = this2;
    var ret = this1.low++;
    this1.low = this1.low | 0;
    if (this1.low == 0) {
        var ret1 = this1.high++;
        this1.high = this1.high | 0;
    }
    return this1;
};
haxe__$Int64_Int64_$Impl_$.postIncrement = function (this1) {
    var ret = this1;
    var this2 = new haxe__$Int64__$_$_$Int64(this1.high, this1.low);
    this1 = this2;
    var ret1 = this1.low++;
    this1.low = this1.low | 0;
    if (this1.low == 0) {
        var ret2 = this1.high++;
        this1.high = this1.high | 0;
    }
    return ret;
};
haxe__$Int64_Int64_$Impl_$.preDecrement = function (this1) {
    var this2 = new haxe__$Int64__$_$_$Int64(this1.high, this1.low);
    this1 = this2;
    if (this1.low == 0) {
        var ret = this1.high--;
        this1.high = this1.high | 0;
    }
    var ret1 = this1.low--;
    this1.low = this1.low | 0;
    return this1;
};
haxe__$Int64_Int64_$Impl_$.postDecrement = function (this1) {
    var ret = this1;
    var this2 = new haxe__$Int64__$_$_$Int64(this1.high, this1.low);
    this1 = this2;
    if (this1.low == 0) {
        var ret1 = this1.high--;
        this1.high = this1.high | 0;
    }
    var ret2 = this1.low--;
    this1.low = this1.low | 0;
    return ret;
};
haxe__$Int64_Int64_$Impl_$.add = function (a, b) {
    var high = a.high + b.high | 0;
    var low = a.low + b.low | 0;
    if (haxe__$Int32_Int32_$Impl_$.ucompare(low, a.low) < 0) {
        var ret = high++;
        high = high | 0;
    }
    var this1 = new haxe__$Int64__$_$_$Int64(high, low);
    return this1;
};
haxe__$Int64_Int64_$Impl_$.addInt = function (a, b) {
    var this1 = new haxe__$Int64__$_$_$Int64(b >> 31, b);
    var b1 = this1;
    var high = a.high + b1.high | 0;
    var low = a.low + b1.low | 0;
    if (haxe__$Int32_Int32_$Impl_$.ucompare(low, a.low) < 0) {
        var ret = high++;
        high = high | 0;
    }
    var this2 = new haxe__$Int64__$_$_$Int64(high, low);
    return this2;
};
haxe__$Int64_Int64_$Impl_$.sub = function (a, b) {
    var high = a.high - b.high | 0;
    var low = a.low - b.low | 0;
    if (haxe__$Int32_Int32_$Impl_$.ucompare(a.low, b.low) < 0) {
        var ret = high--;
        high = high | 0;
    }
    var this1 = new haxe__$Int64__$_$_$Int64(high, low);
    return this1;
};
haxe__$Int64_Int64_$Impl_$.subInt = function (a, b) {
    var this1 = new haxe__$Int64__$_$_$Int64(b >> 31, b);
    var b1 = this1;
    var high = a.high - b1.high | 0;
    var low = a.low - b1.low | 0;
    if (haxe__$Int32_Int32_$Impl_$.ucompare(a.low, b1.low) < 0) {
        var ret = high--;
        high = high | 0;
    }
    var this2 = new haxe__$Int64__$_$_$Int64(high, low);
    return this2;
};
haxe__$Int64_Int64_$Impl_$.intSub = function (a, b) {
    var this1 = new haxe__$Int64__$_$_$Int64(a >> 31, a);
    var a1 = this1;
    var high = a1.high - b.high | 0;
    var low = a1.low - b.low | 0;
    if (haxe__$Int32_Int32_$Impl_$.ucompare(a1.low, b.low) < 0) {
        var ret = high--;
        high = high | 0;
    }
    var this2 = new haxe__$Int64__$_$_$Int64(high, low);
    return this2;
};
haxe__$Int64_Int64_$Impl_$.mul = function (a, b) {
    var mask = 65535;
    var al = a.low & mask;
    var ah = a.low >>> 16;
    var bl = b.low & mask;
    var bh = b.low >>> 16;
    var p00 = haxe__$Int32_Int32_$Impl_$._mul(al, bl);
    var p10 = haxe__$Int32_Int32_$Impl_$._mul(ah, bl);
    var p01 = haxe__$Int32_Int32_$Impl_$._mul(al, bh);
    var p11 = haxe__$Int32_Int32_$Impl_$._mul(ah, bh);
    var low = p00;
    var high = (p11 + (p01 >>> 16) | 0) + (p10 >>> 16) | 0;
    p01 = p01 << 16;
    low = low + p01 | 0;
    if (haxe__$Int32_Int32_$Impl_$.ucompare(low, p01) < 0) {
        var ret = high++;
        high = high | 0;
    }
    p10 = p10 << 16;
    low = low + p10 | 0;
    if (haxe__$Int32_Int32_$Impl_$.ucompare(low, p10) < 0) {
        var ret1 = high++;
        high = high | 0;
    }
    high = high + (haxe__$Int32_Int32_$Impl_$._mul(a.low, b.high) + haxe__$Int32_Int32_$Impl_$._mul(a.high, b.low) | 0) | 0;
    var this1 = new haxe__$Int64__$_$_$Int64(high, low);
    return this1;
};
haxe__$Int64_Int64_$Impl_$.mulInt = function (a, b) {
    var this1 = new haxe__$Int64__$_$_$Int64(b >> 31, b);
    var b1 = this1;
    var mask = 65535;
    var al = a.low & mask;
    var ah = a.low >>> 16;
    var bl = b1.low & mask;
    var bh = b1.low >>> 16;
    var p00 = haxe__$Int32_Int32_$Impl_$._mul(al, bl);
    var p10 = haxe__$Int32_Int32_$Impl_$._mul(ah, bl);
    var p01 = haxe__$Int32_Int32_$Impl_$._mul(al, bh);
    var p11 = haxe__$Int32_Int32_$Impl_$._mul(ah, bh);
    var low = p00;
    var high = (p11 + (p01 >>> 16) | 0) + (p10 >>> 16) | 0;
    p01 = p01 << 16;
    low = low + p01 | 0;
    if (haxe__$Int32_Int32_$Impl_$.ucompare(low, p01) < 0) {
        var ret = high++;
        high = high | 0;
    }
    p10 = p10 << 16;
    low = low + p10 | 0;
    if (haxe__$Int32_Int32_$Impl_$.ucompare(low, p10) < 0) {
        var ret1 = high++;
        high = high | 0;
    }
    high = high + (haxe__$Int32_Int32_$Impl_$._mul(a.low, b1.high) + haxe__$Int32_Int32_$Impl_$._mul(a.high, b1.low) | 0) | 0;
    var this2 = new haxe__$Int64__$_$_$Int64(high, low);
    return this2;
};
haxe__$Int64_Int64_$Impl_$.div = function (a, b) {
    return haxe__$Int64_Int64_$Impl_$.divMod(a, b).quotient;
};
haxe__$Int64_Int64_$Impl_$.divInt = function (a, b) {
    var this1 = new haxe__$Int64__$_$_$Int64(b >> 31, b);
    return haxe__$Int64_Int64_$Impl_$.divMod(a, this1).quotient;
};
haxe__$Int64_Int64_$Impl_$.intDiv = function (a, b) {
    var this1 = new haxe__$Int64__$_$_$Int64(a >> 31, a);
    var x = haxe__$Int64_Int64_$Impl_$.divMod(this1, b).quotient;
    if (x.high != x.low >> 31) {
        throw new js__$Boot_HaxeError("Overflow");
    }
    var x1 = x.low;
    var this2 = new haxe__$Int64__$_$_$Int64(x1 >> 31, x1);
    return this2;
};
haxe__$Int64_Int64_$Impl_$.mod = function (a, b) {
    return haxe__$Int64_Int64_$Impl_$.divMod(a, b).modulus;
};
haxe__$Int64_Int64_$Impl_$.modInt = function (a, b) {
    var this1 = new haxe__$Int64__$_$_$Int64(b >> 31, b);
    var x = haxe__$Int64_Int64_$Impl_$.divMod(a, this1).modulus;
    if (x.high != x.low >> 31) {
        throw new js__$Boot_HaxeError("Overflow");
    }
    var x1 = x.low;
    var this2 = new haxe__$Int64__$_$_$Int64(x1 >> 31, x1);
    return this2;
};
haxe__$Int64_Int64_$Impl_$.intMod = function (a, b) {
    var this1 = new haxe__$Int64__$_$_$Int64(a >> 31, a);
    var x = haxe__$Int64_Int64_$Impl_$.divMod(this1, b).modulus;
    if (x.high != x.low >> 31) {
        throw new js__$Boot_HaxeError("Overflow");
    }
    var x1 = x.low;
    var this2 = new haxe__$Int64__$_$_$Int64(x1 >> 31, x1);
    return this2;
};
haxe__$Int64_Int64_$Impl_$.eq = function (a, b) {
    if (a.high == b.high) {
        return a.low == b.low;
    }
    else {
        return false;
    }
};
haxe__$Int64_Int64_$Impl_$.eqInt = function (a, b) {
    var this1 = new haxe__$Int64__$_$_$Int64(b >> 31, b);
    var b1 = this1;
    if (a.high == b1.high) {
        return a.low == b1.low;
    }
    else {
        return false;
    }
};
haxe__$Int64_Int64_$Impl_$.neq = function (a, b) {
    if (!(a.high != b.high)) {
        return a.low != b.low;
    }
    else {
        return true;
    }
};
haxe__$Int64_Int64_$Impl_$.neqInt = function (a, b) {
    var this1 = new haxe__$Int64__$_$_$Int64(b >> 31, b);
    var b1 = this1;
    if (!(a.high != b1.high)) {
        return a.low != b1.low;
    }
    else {
        return true;
    }
};
haxe__$Int64_Int64_$Impl_$.lt = function (a, b) {
    var v = a.high - b.high | 0;
    if (v != 0) {
        v = v;
    }
    else {
        v = haxe__$Int32_Int32_$Impl_$.ucompare(a.low, b.low);
    }
    return (a.high < 0 ? b.high < 0 ? v : -1 : b.high >= 0 ? v : 1) < 0;
};
haxe__$Int64_Int64_$Impl_$.ltInt = function (a, b) {
    var this1 = new haxe__$Int64__$_$_$Int64(b >> 31, b);
    var b1 = this1;
    var v = a.high - b1.high | 0;
    if (v != 0) {
        v = v;
    }
    else {
        v = haxe__$Int32_Int32_$Impl_$.ucompare(a.low, b1.low);
    }
    return (a.high < 0 ? b1.high < 0 ? v : -1 : b1.high >= 0 ? v : 1) < 0;
};
haxe__$Int64_Int64_$Impl_$.intLt = function (a, b) {
    var this1 = new haxe__$Int64__$_$_$Int64(a >> 31, a);
    var a1 = this1;
    var v = a1.high - b.high | 0;
    if (v != 0) {
        v = v;
    }
    else {
        v = haxe__$Int32_Int32_$Impl_$.ucompare(a1.low, b.low);
    }
    return (a1.high < 0 ? b.high < 0 ? v : -1 : b.high >= 0 ? v : 1) < 0;
};
haxe__$Int64_Int64_$Impl_$.lte = function (a, b) {
    var v = a.high - b.high | 0;
    if (v != 0) {
        v = v;
    }
    else {
        v = haxe__$Int32_Int32_$Impl_$.ucompare(a.low, b.low);
    }
    return (a.high < 0 ? b.high < 0 ? v : -1 : b.high >= 0 ? v : 1) <= 0;
};
haxe__$Int64_Int64_$Impl_$.lteInt = function (a, b) {
    var this1 = new haxe__$Int64__$_$_$Int64(b >> 31, b);
    var b1 = this1;
    var v = a.high - b1.high | 0;
    if (v != 0) {
        v = v;
    }
    else {
        v = haxe__$Int32_Int32_$Impl_$.ucompare(a.low, b1.low);
    }
    return (a.high < 0 ? b1.high < 0 ? v : -1 : b1.high >= 0 ? v : 1) <= 0;
};
haxe__$Int64_Int64_$Impl_$.intLte = function (a, b) {
    var this1 = new haxe__$Int64__$_$_$Int64(a >> 31, a);
    var a1 = this1;
    var v = a1.high - b.high | 0;
    if (v != 0) {
        v = v;
    }
    else {
        v = haxe__$Int32_Int32_$Impl_$.ucompare(a1.low, b.low);
    }
    return (a1.high < 0 ? b.high < 0 ? v : -1 : b.high >= 0 ? v : 1) <= 0;
};
haxe__$Int64_Int64_$Impl_$.gt = function (a, b) {
    var v = a.high - b.high | 0;
    if (v != 0) {
        v = v;
    }
    else {
        v = haxe__$Int32_Int32_$Impl_$.ucompare(a.low, b.low);
    }
    return (a.high < 0 ? b.high < 0 ? v : -1 : b.high >= 0 ? v : 1) > 0;
};
haxe__$Int64_Int64_$Impl_$.gtInt = function (a, b) {
    var this1 = new haxe__$Int64__$_$_$Int64(b >> 31, b);
    var b1 = this1;
    var v = a.high - b1.high | 0;
    if (v != 0) {
        v = v;
    }
    else {
        v = haxe__$Int32_Int32_$Impl_$.ucompare(a.low, b1.low);
    }
    return (a.high < 0 ? b1.high < 0 ? v : -1 : b1.high >= 0 ? v : 1) > 0;
};
haxe__$Int64_Int64_$Impl_$.intGt = function (a, b) {
    var this1 = new haxe__$Int64__$_$_$Int64(a >> 31, a);
    var a1 = this1;
    var v = a1.high - b.high | 0;
    if (v != 0) {
        v = v;
    }
    else {
        v = haxe__$Int32_Int32_$Impl_$.ucompare(a1.low, b.low);
    }
    return (a1.high < 0 ? b.high < 0 ? v : -1 : b.high >= 0 ? v : 1) > 0;
};
haxe__$Int64_Int64_$Impl_$.gte = function (a, b) {
    var v = a.high - b.high | 0;
    if (v != 0) {
        v = v;
    }
    else {
        v = haxe__$Int32_Int32_$Impl_$.ucompare(a.low, b.low);
    }
    return (a.high < 0 ? b.high < 0 ? v : -1 : b.high >= 0 ? v : 1) >= 0;
};
haxe__$Int64_Int64_$Impl_$.gteInt = function (a, b) {
    var this1 = new haxe__$Int64__$_$_$Int64(b >> 31, b);
    var b1 = this1;
    var v = a.high - b1.high | 0;
    if (v != 0) {
        v = v;
    }
    else {
        v = haxe__$Int32_Int32_$Impl_$.ucompare(a.low, b1.low);
    }
    return (a.high < 0 ? b1.high < 0 ? v : -1 : b1.high >= 0 ? v : 1) >= 0;
};
haxe__$Int64_Int64_$Impl_$.intGte = function (a, b) {
    var this1 = new haxe__$Int64__$_$_$Int64(a >> 31, a);
    var a1 = this1;
    var v = a1.high - b.high | 0;
    if (v != 0) {
        v = v;
    }
    else {
        v = haxe__$Int32_Int32_$Impl_$.ucompare(a1.low, b.low);
    }
    return (a1.high < 0 ? b.high < 0 ? v : -1 : b.high >= 0 ? v : 1) >= 0;
};
haxe__$Int64_Int64_$Impl_$.complement = function (a) {
    var this1 = new haxe__$Int64__$_$_$Int64(~a.high, ~a.low);
    return this1;
};
haxe__$Int64_Int64_$Impl_$.and = function (a, b) {
    var this1 = new haxe__$Int64__$_$_$Int64(a.high & b.high, a.low & b.low);
    return this1;
};
haxe__$Int64_Int64_$Impl_$.or = function (a, b) {
    var this1 = new haxe__$Int64__$_$_$Int64(a.high | b.high, a.low | b.low);
    return this1;
};
haxe__$Int64_Int64_$Impl_$.xor = function (a, b) {
    var this1 = new haxe__$Int64__$_$_$Int64(a.high ^ b.high, a.low ^ b.low);
    return this1;
};
haxe__$Int64_Int64_$Impl_$.shl = function (a, b) {
    b &= 63;
    if (b == 0) {
        var this1 = new haxe__$Int64__$_$_$Int64(a.high, a.low);
        return this1;
    }
    else if (b < 32) {
        var this2 = new haxe__$Int64__$_$_$Int64(a.high << b | a.low >>> 32 - b, a.low << b);
        return this2;
    }
    else {
        var this3 = new haxe__$Int64__$_$_$Int64(a.low << b - 32, 0);
        return this3;
    }
};
haxe__$Int64_Int64_$Impl_$.shr = function (a, b) {
    b &= 63;
    if (b == 0) {
        var this1 = new haxe__$Int64__$_$_$Int64(a.high, a.low);
        return this1;
    }
    else if (b < 32) {
        var this2 = new haxe__$Int64__$_$_$Int64(a.high >> b, a.high << 32 - b | a.low >>> b);
        return this2;
    }
    else {
        var this3 = new haxe__$Int64__$_$_$Int64(a.high >> 31, a.high >> b - 32);
        return this3;
    }
};
haxe__$Int64_Int64_$Impl_$.ushr = function (a, b) {
    b &= 63;
    if (b == 0) {
        var this1 = new haxe__$Int64__$_$_$Int64(a.high, a.low);
        return this1;
    }
    else if (b < 32) {
        var this2 = new haxe__$Int64__$_$_$Int64(a.high >>> b, a.high << 32 - b | a.low >>> b);
        return this2;
    }
    else {
        var this3 = new haxe__$Int64__$_$_$Int64(0, a.high >>> b - 32);
        return this3;
    }
};
haxe__$Int64_Int64_$Impl_$.get_high = function (this1) {
    return this1.high;
};
haxe__$Int64_Int64_$Impl_$.set_high = function (this1, x) {
    return this1.high = x;
};
haxe__$Int64_Int64_$Impl_$.get_low = function (this1) {
    return this1.low;
};
haxe__$Int64_Int64_$Impl_$.set_low = function (this1, x) {
    return this1.low = x;
};
var haxe__$Int64__$_$_$Int64 = function (high, low) {
    this.high = high;
    this.low = low;
};
$hxClasses["haxe._Int64.___Int64"] = haxe__$Int64__$_$_$Int64;
haxe__$Int64__$_$_$Int64.__name__ = ["haxe", "_Int64", "___Int64"];
haxe__$Int64__$_$_$Int64.prototype = {
    high: null,
    low: null,
    toString: function () {
        return haxe__$Int64_Int64_$Impl_$.toString(this);
    },
    __class__: haxe__$Int64__$_$_$Int64
};
var haxe_Int64Helper = function () { };
$hxClasses["haxe.Int64Helper"] = haxe_Int64Helper;
haxe_Int64Helper.__name__ = ["haxe", "Int64Helper"];
haxe_Int64Helper.parseString = function (sParam) {
    var this1 = new haxe__$Int64__$_$_$Int64(0, 10);
    var base = this1;
    var this2 = new haxe__$Int64__$_$_$Int64(0, 0);
    var current = this2;
    var this3 = new haxe__$Int64__$_$_$Int64(0, 1);
    var multiplier = this3;
    var sIsNegative = false;
    var s = StringTools.trim(sParam);
    if (s.charAt(0) == "-") {
        sIsNegative = true;
        s = s.substring(1, s.length);
    }
    var len = s.length;
    var _g1 = 0;
    var _g = len;
    while (_g1 < _g) {
        var i = _g1++;
        var digitInt = HxOverrides.cca(s, len - 1 - i) - 48;
        if (digitInt < 0 || digitInt > 9) {
            throw new js__$Boot_HaxeError("NumberFormatError");
        }
        var this4 = new haxe__$Int64__$_$_$Int64(digitInt >> 31, digitInt);
        var digit = this4;
        if (sIsNegative) {
            var mask = 65535;
            var al = multiplier.low & mask;
            var ah = multiplier.low >>> 16;
            var bl = digit.low & mask;
            var bh = digit.low >>> 16;
            var p00 = haxe__$Int32_Int32_$Impl_$._mul(al, bl);
            var p10 = haxe__$Int32_Int32_$Impl_$._mul(ah, bl);
            var p01 = haxe__$Int32_Int32_$Impl_$._mul(al, bh);
            var p11 = haxe__$Int32_Int32_$Impl_$._mul(ah, bh);
            var low = p00;
            var high = (p11 + (p01 >>> 16) | 0) + (p10 >>> 16) | 0;
            p01 = p01 << 16;
            low = low + p01 | 0;
            if (haxe__$Int32_Int32_$Impl_$.ucompare(low, p01) < 0) {
                var ret = high++;
                high = high | 0;
            }
            p10 = p10 << 16;
            low = low + p10 | 0;
            if (haxe__$Int32_Int32_$Impl_$.ucompare(low, p10) < 0) {
                var ret1 = high++;
                high = high | 0;
            }
            high = high + (haxe__$Int32_Int32_$Impl_$._mul(multiplier.low, digit.high) + haxe__$Int32_Int32_$Impl_$._mul(multiplier.high, digit.low) | 0) | 0;
            var this5 = new haxe__$Int64__$_$_$Int64(high, low);
            var b = this5;
            var high1 = current.high - b.high | 0;
            var low1 = current.low - b.low | 0;
            if (haxe__$Int32_Int32_$Impl_$.ucompare(current.low, b.low) < 0) {
                var ret2 = high1--;
                high1 = high1 | 0;
            }
            var this6 = new haxe__$Int64__$_$_$Int64(high1, low1);
            current = this6;
            if (!(current.high < 0)) {
                throw new js__$Boot_HaxeError("NumberFormatError: Underflow");
            }
        }
        else {
            var mask1 = 65535;
            var al1 = multiplier.low & mask1;
            var ah1 = multiplier.low >>> 16;
            var bl1 = digit.low & mask1;
            var bh1 = digit.low >>> 16;
            var p001 = haxe__$Int32_Int32_$Impl_$._mul(al1, bl1);
            var p101 = haxe__$Int32_Int32_$Impl_$._mul(ah1, bl1);
            var p011 = haxe__$Int32_Int32_$Impl_$._mul(al1, bh1);
            var p111 = haxe__$Int32_Int32_$Impl_$._mul(ah1, bh1);
            var low2 = p001;
            var high2 = (p111 + (p011 >>> 16) | 0) + (p101 >>> 16) | 0;
            p011 = p011 << 16;
            low2 = low2 + p011 | 0;
            if (haxe__$Int32_Int32_$Impl_$.ucompare(low2, p011) < 0) {
                var ret3 = high2++;
                high2 = high2 | 0;
            }
            p101 = p101 << 16;
            low2 = low2 + p101 | 0;
            if (haxe__$Int32_Int32_$Impl_$.ucompare(low2, p101) < 0) {
                var ret4 = high2++;
                high2 = high2 | 0;
            }
            high2 = high2 + (haxe__$Int32_Int32_$Impl_$._mul(multiplier.low, digit.high) + haxe__$Int32_Int32_$Impl_$._mul(multiplier.high, digit.low) | 0) | 0;
            var this7 = new haxe__$Int64__$_$_$Int64(high2, low2);
            var b1 = this7;
            var high3 = current.high + b1.high | 0;
            var low3 = current.low + b1.low | 0;
            if (haxe__$Int32_Int32_$Impl_$.ucompare(low3, current.low) < 0) {
                var ret5 = high3++;
                high3 = high3 | 0;
            }
            var this8 = new haxe__$Int64__$_$_$Int64(high3, low3);
            current = this8;
            if (current.high < 0) {
                throw new js__$Boot_HaxeError("NumberFormatError: Overflow");
            }
        }
        var mask2 = 65535;
        var al2 = multiplier.low & mask2;
        var ah2 = multiplier.low >>> 16;
        var bl2 = base.low & mask2;
        var bh2 = base.low >>> 16;
        var p002 = haxe__$Int32_Int32_$Impl_$._mul(al2, bl2);
        var p102 = haxe__$Int32_Int32_$Impl_$._mul(ah2, bl2);
        var p012 = haxe__$Int32_Int32_$Impl_$._mul(al2, bh2);
        var p112 = haxe__$Int32_Int32_$Impl_$._mul(ah2, bh2);
        var low4 = p002;
        var high4 = (p112 + (p012 >>> 16) | 0) + (p102 >>> 16) | 0;
        p012 = p012 << 16;
        low4 = low4 + p012 | 0;
        if (haxe__$Int32_Int32_$Impl_$.ucompare(low4, p012) < 0) {
            var ret6 = high4++;
            high4 = high4 | 0;
        }
        p102 = p102 << 16;
        low4 = low4 + p102 | 0;
        if (haxe__$Int32_Int32_$Impl_$.ucompare(low4, p102) < 0) {
            var ret7 = high4++;
            high4 = high4 | 0;
        }
        high4 = high4 + (haxe__$Int32_Int32_$Impl_$._mul(multiplier.low, base.high) + haxe__$Int32_Int32_$Impl_$._mul(multiplier.high, base.low) | 0) | 0;
        var this9 = new haxe__$Int64__$_$_$Int64(high4, low4);
        multiplier = this9;
    }
    return current;
};
haxe_Int64Helper.fromFloat = function (f) {
    if (isNaN(f) || !isFinite(f)) {
        throw new js__$Boot_HaxeError("Number is NaN or Infinite");
    }
    var noFractions = f - f % 1;
    if (noFractions > 9007199254740991) {
        throw new js__$Boot_HaxeError("Conversion overflow");
    }
    if (noFractions < -9007199254740991) {
        throw new js__$Boot_HaxeError("Conversion underflow");
    }
    var this1 = new haxe__$Int64__$_$_$Int64(0, 0);
    var result = this1;
    var neg = noFractions < 0;
    var rest = neg ? -noFractions : noFractions;
    var i = 0;
    while (rest >= 1) {
        var curr = rest % 2;
        rest /= 2;
        if (curr >= 1) {
            var this2 = new haxe__$Int64__$_$_$Int64(0, 1);
            var a = this2;
            var b = i;
            b &= 63;
            var b1;
            if (b == 0) {
                var this3 = new haxe__$Int64__$_$_$Int64(a.high, a.low);
                b1 = this3;
            }
            else if (b < 32) {
                var this4 = new haxe__$Int64__$_$_$Int64(a.high << b | a.low >>> 32 - b, a.low << b);
                b1 = this4;
            }
            else {
                var this5 = new haxe__$Int64__$_$_$Int64(a.low << b - 32, 0);
                b1 = this5;
            }
            var high = result.high + b1.high | 0;
            var low = result.low + b1.low | 0;
            if (haxe__$Int32_Int32_$Impl_$.ucompare(low, result.low) < 0) {
                var ret = high++;
                high = high | 0;
            }
            var this6 = new haxe__$Int64__$_$_$Int64(high, low);
            result = this6;
        }
        ++i;
    }
    if (neg) {
        var high1 = ~result.high;
        var low1 = -result.low;
        if (low1 == 0) {
            var ret1 = high1++;
            high1 = high1 | 0;
        }
        var this7 = new haxe__$Int64__$_$_$Int64(high1, low1);
        result = this7;
    }
    return result;
};
var haxe_Log = function () { };
$hxClasses["haxe.Log"] = haxe_Log;
haxe_Log.__name__ = ["haxe", "Log"];
haxe_Log.trace = function (v, infos) {
    js_Boot.__trace(v, infos);
};
haxe_Log.clear = function () {
    js_Boot.__clear_trace();
};
var haxe_Serializer = function () {
    this.buf = new StringBuf();
    this.cache = [];
    this.useCache = haxe_Serializer.USE_CACHE;
    this.useEnumIndex = haxe_Serializer.USE_ENUM_INDEX;
    this.shash = new haxe_ds_StringMap();
    this.scount = 0;
};
$hxClasses["haxe.Serializer"] = haxe_Serializer;
haxe_Serializer.__name__ = ["haxe", "Serializer"];
haxe_Serializer.run = function (v) {
    var s = new haxe_Serializer();
    s.serialize(v);
    return s.toString();
};
haxe_Serializer.prototype = {
    buf: null,
    cache: null,
    shash: null,
    scount: null,
    useCache: null,
    useEnumIndex: null,
    toString: function () {
        return this.buf.b;
    },
    serializeString: function (s) {
        var _this = this.shash;
        var x = __map_reserved[s] != null ? _this.getReserved(s) : _this.h[s];
        if (x != null) {
            this.buf.b += "R";
            this.buf.b += x == null ? "null" : "" + x;
            return;
        }
        var _this1 = this.shash;
        var value = this.scount++;
        if (__map_reserved[s] != null) {
            _this1.setReserved(s, value);
        }
        else {
            _this1.h[s] = value;
        }
        this.buf.b += "y";
        s = encodeURIComponent(s);
        this.buf.b += Std.string(s.length);
        this.buf.b += ":";
        this.buf.b += s == null ? "null" : "" + s;
    },
    serializeRef: function (v) {
        var vt = typeof (v);
        var _g1 = 0;
        var _g = this.cache.length;
        while (_g1 < _g) {
            var i = _g1++;
            var ci = this.cache[i];
            if (typeof (ci) == vt && ci == v) {
                this.buf.b += "r";
                this.buf.b += i == null ? "null" : "" + i;
                return true;
            }
        }
        this.cache.push(v);
        return false;
    },
    serializeFields: function (v) {
        var _g = 0;
        var _g1 = Reflect.fields(v);
        while (_g < _g1.length) {
            var f = _g1[_g];
            ++_g;
            this.serializeString(f);
            this.serialize(Reflect.field(v, f));
        }
        this.buf.b += "g";
    },
    serialize: function (v) {
        var _g = Type["typeof"](v);
        switch (_g[1]) {
            case 0:
                this.buf.b += "n";
                break;
            case 1:
                var v1 = v;
                if (v1 == 0) {
                    this.buf.b += "z";
                    return;
                }
                this.buf.b += "i";
                this.buf.b += v1 == null ? "null" : "" + v1;
                break;
            case 2:
                var v2 = v;
                if (isNaN(v2)) {
                    this.buf.b += "k";
                }
                else if (!isFinite(v2)) {
                    this.buf.b += v2 < 0 ? "m" : "p";
                }
                else {
                    this.buf.b += "d";
                    this.buf.b += v2 == null ? "null" : "" + v2;
                }
                break;
            case 3:
                this.buf.b += v ? "t" : "f";
                break;
            case 4:
                if (js_Boot.__instanceof(v, Class)) {
                    var className = Type.getClassName(v);
                    this.buf.b += "A";
                    this.serializeString(className);
                }
                else if (js_Boot.__instanceof(v, Enum)) {
                    this.buf.b += "B";
                    this.serializeString(Type.getEnumName(v));
                }
                else {
                    if (this.useCache && this.serializeRef(v)) {
                        return;
                    }
                    this.buf.b += "o";
                    this.serializeFields(v);
                }
                break;
            case 5:
                throw new js__$Boot_HaxeError("Cannot serialize function");
                break;
            case 6:
                var c = _g[2];
                if (c == String) {
                    this.serializeString(v);
                    return;
                }
                if (this.useCache && this.serializeRef(v)) {
                    return;
                }
                switch (c) {
                    case Array:
                        var ucount = 0;
                        this.buf.b += "a";
                        var l = v["length"];
                        var _g1 = 0;
                        var _g2 = l;
                        while (_g1 < _g2) {
                            var i = _g1++;
                            if (v[i] == null) {
                                ++ucount;
                            }
                            else {
                                if (ucount > 0) {
                                    if (ucount == 1) {
                                        this.buf.b += "n";
                                    }
                                    else {
                                        this.buf.b += "u";
                                        this.buf.b += ucount == null ? "null" : "" + ucount;
                                    }
                                    ucount = 0;
                                }
                                this.serialize(v[i]);
                            }
                        }
                        if (ucount > 0) {
                            if (ucount == 1) {
                                this.buf.b += "n";
                            }
                            else {
                                this.buf.b += "u";
                                this.buf.b += ucount == null ? "null" : "" + ucount;
                            }
                        }
                        this.buf.b += "h";
                        break;
                    case Date:
                        var d = v;
                        this.buf.b += "v";
                        this.buf.b += Std.string(d.getTime());
                        break;
                    case List:
                        this.buf.b += "l";
                        var v3 = v;
                        var _g_head = v3.h;
                        while (_g_head != null) {
                            var val = _g_head.item;
                            _g_head = _g_head.next;
                            var i1 = val;
                            this.serialize(i1);
                        }
                        this.buf.b += "h";
                        break;
                    case haxe_ds_IntMap:
                        this.buf.b += "q";
                        var v4 = v;
                        var k = v4.keys();
                        while (k.hasNext()) {
                            var k1 = k.next();
                            this.buf.b += ":";
                            this.buf.b += k1 == null ? "null" : "" + k1;
                            this.serialize(v4.h[k1]);
                        }
                        this.buf.b += "h";
                        break;
                    case haxe_ds_ObjectMap:
                        this.buf.b += "M";
                        var v5 = v;
                        var k2 = v5.keys();
                        while (k2.hasNext()) {
                            var k3 = k2.next();
                            var id = Reflect.field(k3, "__id__");
                            Reflect.deleteField(k3, "__id__");
                            this.serialize(k3);
                            k3["__id__"] = id;
                            this.serialize(v5.h[k3.__id__]);
                        }
                        this.buf.b += "h";
                        break;
                    case haxe_ds_StringMap:
                        this.buf.b += "b";
                        var v6 = v;
                        var k4 = v6.keys();
                        while (k4.hasNext()) {
                            var k5 = k4.next();
                            this.serializeString(k5);
                            this.serialize(__map_reserved[k5] != null ? v6.getReserved(k5) : v6.h[k5]);
                        }
                        this.buf.b += "h";
                        break;
                    case haxe_io_Bytes:
                        var v7 = v;
                        this.buf.b += "s";
                        this.buf.b += Std.string(Math.ceil(v7.length * 8 / 6));
                        this.buf.b += ":";
                        var i2 = 0;
                        var max = v7.length - 2;
                        var b64 = haxe_Serializer.BASE64_CODES;
                        if (b64 == null) {
                            var length = haxe_Serializer.BASE64.length;
                            var this1 = new Array(length);
                            b64 = this1;
                            var _g11 = 0;
                            var _g3 = haxe_Serializer.BASE64.length;
                            while (_g11 < _g3) {
                                var i3 = _g11++;
                                b64[i3] = HxOverrides.cca(haxe_Serializer.BASE64, i3);
                            }
                            haxe_Serializer.BASE64_CODES = b64;
                        }
                        while (i2 < max) {
                            var b1 = v7.b[i2++];
                            var b2 = v7.b[i2++];
                            var b3 = v7.b[i2++];
                            this.buf.b += String.fromCharCode(b64[b1 >> 2]);
                            this.buf.b += String.fromCharCode(b64[(b1 << 4 | b2 >> 4) & 63]);
                            this.buf.b += String.fromCharCode(b64[(b2 << 2 | b3 >> 6) & 63]);
                            this.buf.b += String.fromCharCode(b64[b3 & 63]);
                        }
                        if (i2 == max) {
                            var b11 = v7.b[i2++];
                            var b21 = v7.b[i2++];
                            this.buf.b += String.fromCharCode(b64[b11 >> 2]);
                            this.buf.b += String.fromCharCode(b64[(b11 << 4 | b21 >> 4) & 63]);
                            this.buf.b += String.fromCharCode(b64[b21 << 2 & 63]);
                        }
                        else if (i2 == max + 1) {
                            var b12 = v7.b[i2++];
                            this.buf.b += String.fromCharCode(b64[b12 >> 2]);
                            this.buf.b += String.fromCharCode(b64[b12 << 4 & 63]);
                        }
                        break;
                    default:
                        if (this.useCache) {
                            this.cache.pop();
                        }
                        if (v.hxSerialize != null) {
                            this.buf.b += "C";
                            this.serializeString(Type.getClassName(c));
                            if (this.useCache) {
                                this.cache.push(v);
                            }
                            v.hxSerialize(this);
                            this.buf.b += "g";
                        }
                        else {
                            this.buf.b += "c";
                            this.serializeString(Type.getClassName(c));
                            if (this.useCache) {
                                this.cache.push(v);
                            }
                            this.serializeFields(v);
                        }
                }
                break;
            case 7:
                var e = _g[2];
                if (this.useCache) {
                    if (this.serializeRef(v)) {
                        return;
                    }
                    this.cache.pop();
                }
                this.buf.b += Std.string(this.useEnumIndex ? "j" : "w");
                this.serializeString(Type.getEnumName(e));
                if (this.useEnumIndex) {
                    this.buf.b += ":";
                    this.buf.b += Std.string(v[1]);
                }
                else {
                    this.serializeString(v[0]);
                }
                this.buf.b += ":";
                var l1 = v["length"];
                this.buf.b += Std.string(l1 - 2);
                var _g12 = 2;
                var _g4 = l1;
                while (_g12 < _g4) {
                    var i4 = _g12++;
                    this.serialize(v[i4]);
                }
                if (this.useCache) {
                    this.cache.push(v);
                }
                break;
            default:
                throw new js__$Boot_HaxeError("Cannot serialize " + Std.string(v));
        }
    },
    serializeException: function (e) {
        this.buf.b += "x";
        this.serialize(e);
    },
    __class__: haxe_Serializer
};
var haxe__$Unserializer_DefaultResolver = function () {
};
$hxClasses["haxe._Unserializer.DefaultResolver"] = haxe__$Unserializer_DefaultResolver;
haxe__$Unserializer_DefaultResolver.__name__ = ["haxe", "_Unserializer", "DefaultResolver"];
haxe__$Unserializer_DefaultResolver.prototype = {
    resolveClass: function (name) {
        return Type.resolveClass(name);
    },
    resolveEnum: function (name) {
        return Type.resolveEnum(name);
    },
    __class__: haxe__$Unserializer_DefaultResolver
};
var haxe_Unserializer = function (buf) {
    this.buf = buf;
    this.length = buf.length;
    this.pos = 0;
    this.scache = [];
    this.cache = [];
    var r = haxe_Unserializer.DEFAULT_RESOLVER;
    if (r == null) {
        r = new haxe__$Unserializer_DefaultResolver();
        haxe_Unserializer.DEFAULT_RESOLVER = r;
    }
    this.resolver = r;
};
$hxClasses["haxe.Unserializer"] = haxe_Unserializer;
haxe_Unserializer.__name__ = ["haxe", "Unserializer"];
haxe_Unserializer.initCodes = function () {
    var codes = [];
    var _g1 = 0;
    var _g = haxe_Unserializer.BASE64.length;
    while (_g1 < _g) {
        var i = _g1++;
        codes[haxe_Unserializer.BASE64.charCodeAt(i)] = i;
    }
    return codes;
};
haxe_Unserializer.run = function (v) {
    return new haxe_Unserializer(v).unserialize();
};
haxe_Unserializer.prototype = {
    buf: null,
    pos: null,
    length: null,
    cache: null,
    scache: null,
    resolver: null,
    setResolver: function (r) {
        if (r == null) {
            if (haxe__$Unserializer_NullResolver.instance == null) {
                haxe__$Unserializer_NullResolver.instance = new haxe__$Unserializer_NullResolver();
            }
            this.resolver = haxe__$Unserializer_NullResolver.instance;
        }
        else {
            this.resolver = r;
        }
    },
    getResolver: function () {
        return this.resolver;
    },
    get: function (p) {
        return this.buf.charCodeAt(p);
    },
    readDigits: function () {
        var k = 0;
        var s = false;
        var fpos = this.pos;
        while (true) {
            var c = this.buf.charCodeAt(this.pos);
            if (c != c) {
                break;
            }
            if (c == 45) {
                if (this.pos != fpos) {
                    break;
                }
                s = true;
                this.pos++;
                continue;
            }
            if (c < 48 || c > 57) {
                break;
            }
            k = k * 10 + (c - 48);
            this.pos++;
        }
        if (s) {
            k *= -1;
        }
        return k;
    },
    readFloat: function () {
        var p1 = this.pos;
        while (true) {
            var c = this.buf.charCodeAt(this.pos);
            if (c != c) {
                break;
            }
            if (c >= 43 && c < 58 || c == 101 || c == 69) {
                this.pos++;
            }
            else {
                break;
            }
        }
        return parseFloat(HxOverrides.substr(this.buf, p1, this.pos - p1));
    },
    unserializeObject: function (o) {
        while (true) {
            if (this.pos >= this.length) {
                throw new js__$Boot_HaxeError("Invalid object");
            }
            if (this.buf.charCodeAt(this.pos) == 103) {
                break;
            }
            var k = this.unserialize();
            if (typeof (k) != "string") {
                throw new js__$Boot_HaxeError("Invalid object key");
            }
            var v = this.unserialize();
            o[k] = v;
        }
        this.pos++;
    },
    unserializeEnum: function (edecl, tag) {
        if (this.buf.charCodeAt(this.pos++) != 58) {
            throw new js__$Boot_HaxeError("Invalid enum format");
        }
        var nargs = this.readDigits();
        if (nargs == 0) {
            return Type.createEnum(edecl, tag);
        }
        var args = [];
        while (nargs-- > 0)
            args.push(this.unserialize());
        return Type.createEnum(edecl, tag, args);
    },
    unserialize: function () {
        var _g = this.buf.charCodeAt(this.pos++);
        switch (_g) {
            case 65:
                var name = this.unserialize();
                var cl = this.resolver.resolveClass(name);
                if (cl == null) {
                    throw new js__$Boot_HaxeError("Class not found " + name);
                }
                return cl;
            case 66:
                var name1 = this.unserialize();
                var e = this.resolver.resolveEnum(name1);
                if (e == null) {
                    throw new js__$Boot_HaxeError("Enum not found " + name1);
                }
                return e;
            case 67:
                var name2 = this.unserialize();
                var cl1 = this.resolver.resolveClass(name2);
                if (cl1 == null) {
                    throw new js__$Boot_HaxeError("Class not found " + name2);
                }
                var o = Type.createEmptyInstance(cl1);
                this.cache.push(o);
                o.hxUnserialize(this);
                if (this.buf.charCodeAt(this.pos++) != 103) {
                    throw new js__$Boot_HaxeError("Invalid custom data");
                }
                return o;
            case 77:
                var h = new haxe_ds_ObjectMap();
                this.cache.push(h);
                var buf = this.buf;
                while (this.buf.charCodeAt(this.pos) != 104) {
                    var s = this.unserialize();
                    h.set(s, this.unserialize());
                }
                this.pos++;
                return h;
            case 82:
                var n = this.readDigits();
                if (n < 0 || n >= this.scache.length) {
                    throw new js__$Boot_HaxeError("Invalid string reference");
                }
                return this.scache[n];
            case 97:
                var buf1 = this.buf;
                var a = [];
                this.cache.push(a);
                while (true) {
                    var c = this.buf.charCodeAt(this.pos);
                    if (c == 104) {
                        this.pos++;
                        break;
                    }
                    if (c == 117) {
                        this.pos++;
                        var n1 = this.readDigits();
                        a[a.length + n1 - 1] = null;
                    }
                    else {
                        a.push(this.unserialize());
                    }
                }
                return a;
            case 98:
                var h1 = new haxe_ds_StringMap();
                this.cache.push(h1);
                var buf2 = this.buf;
                while (this.buf.charCodeAt(this.pos) != 104) {
                    var s1 = this.unserialize();
                    var value = this.unserialize();
                    if (__map_reserved[s1] != null) {
                        h1.setReserved(s1, value);
                    }
                    else {
                        h1.h[s1] = value;
                    }
                }
                this.pos++;
                return h1;
            case 99:
                var name3 = this.unserialize();
                var cl2 = this.resolver.resolveClass(name3);
                if (cl2 == null) {
                    throw new js__$Boot_HaxeError("Class not found " + name3);
                }
                var o1 = Type.createEmptyInstance(cl2);
                this.cache.push(o1);
                this.unserializeObject(o1);
                return o1;
            case 100:
                return this.readFloat();
            case 102:
                return false;
            case 105:
                return this.readDigits();
            case 106:
                var name4 = this.unserialize();
                var edecl = this.resolver.resolveEnum(name4);
                if (edecl == null) {
                    throw new js__$Boot_HaxeError("Enum not found " + name4);
                }
                this.pos++;
                var index = this.readDigits();
                var tag = edecl.__constructs__.slice()[index];
                if (tag == null) {
                    throw new js__$Boot_HaxeError("Unknown enum index " + name4 + "@" + index);
                }
                var e1 = this.unserializeEnum(edecl, tag);
                this.cache.push(e1);
                return e1;
            case 107:
                return NaN;
            case 108:
                var l = new List();
                this.cache.push(l);
                var buf3 = this.buf;
                while (this.buf.charCodeAt(this.pos) != 104)
                    l.add(this.unserialize());
                this.pos++;
                return l;
            case 109:
                return -Infinity;
            case 110:
                return null;
            case 111:
                var o2 = {};
                this.cache.push(o2);
                this.unserializeObject(o2);
                return o2;
            case 112:
                return Infinity;
            case 113:
                var h2 = new haxe_ds_IntMap();
                this.cache.push(h2);
                var buf4 = this.buf;
                var c1 = this.buf.charCodeAt(this.pos++);
                while (c1 == 58) {
                    var i = this.readDigits();
                    var value1 = this.unserialize();
                    h2.h[i] = value1;
                    c1 = this.buf.charCodeAt(this.pos++);
                }
                if (c1 != 104) {
                    throw new js__$Boot_HaxeError("Invalid IntMap format");
                }
                return h2;
            case 114:
                var n2 = this.readDigits();
                if (n2 < 0 || n2 >= this.cache.length) {
                    throw new js__$Boot_HaxeError("Invalid reference");
                }
                return this.cache[n2];
            case 115:
                var len = this.readDigits();
                var buf5 = this.buf;
                if (this.buf.charCodeAt(this.pos++) != 58 || this.length - this.pos < len) {
                    throw new js__$Boot_HaxeError("Invalid bytes length");
                }
                var codes = haxe_Unserializer.CODES;
                if (codes == null) {
                    codes = haxe_Unserializer.initCodes();
                    haxe_Unserializer.CODES = codes;
                }
                var i1 = this.pos;
                var rest = len & 3;
                var size = (len >> 2) * 3 + (rest >= 2 ? rest - 1 : 0);
                var max = i1 + (len - rest);
                var bytes = new haxe_io_Bytes(new ArrayBuffer(size));
                var bpos = 0;
                while (i1 < max) {
                    var c11 = codes[buf5.charCodeAt(i1++)];
                    var c2 = codes[buf5.charCodeAt(i1++)];
                    bytes.b[bpos++] = (c11 << 2 | c2 >> 4) & 255;
                    var c3 = codes[buf5.charCodeAt(i1++)];
                    bytes.b[bpos++] = (c2 << 4 | c3 >> 2) & 255;
                    var c4 = codes[buf5.charCodeAt(i1++)];
                    bytes.b[bpos++] = (c3 << 6 | c4) & 255;
                }
                if (rest >= 2) {
                    var c12 = codes[buf5.charCodeAt(i1++)];
                    var c21 = codes[buf5.charCodeAt(i1++)];
                    bytes.b[bpos++] = (c12 << 2 | c21 >> 4) & 255;
                    if (rest == 3) {
                        var c31 = codes[buf5.charCodeAt(i1++)];
                        bytes.b[bpos++] = (c21 << 4 | c31 >> 2) & 255;
                    }
                }
                this.pos += len;
                this.cache.push(bytes);
                return bytes;
            case 116:
                return true;
            case 118:
                var d;
                if (this.buf.charCodeAt(this.pos) >= 48 && this.buf.charCodeAt(this.pos) <= 57 && this.buf.charCodeAt(this.pos + 1) >= 48 && this.buf.charCodeAt(this.pos + 1) <= 57 && this.buf.charCodeAt(this.pos + 2) >= 48 && this.buf.charCodeAt(this.pos + 2) <= 57 && this.buf.charCodeAt(this.pos + 3) >= 48 && this.buf.charCodeAt(this.pos + 3) <= 57 && this.buf.charCodeAt(this.pos + 4) == 45) {
                    d = HxOverrides.strDate(HxOverrides.substr(this.buf, this.pos, 19));
                    this.pos += 19;
                }
                else {
                    var t = this.readFloat();
                    d = new Date(t);
                }
                this.cache.push(d);
                return d;
            case 119:
                var name5 = this.unserialize();
                var edecl1 = this.resolver.resolveEnum(name5);
                if (edecl1 == null) {
                    throw new js__$Boot_HaxeError("Enum not found " + name5);
                }
                var e2 = this.unserializeEnum(edecl1, this.unserialize());
                this.cache.push(e2);
                return e2;
            case 120:
                throw js__$Boot_HaxeError.wrap(this.unserialize());
                break;
            case 121:
                var len1 = this.readDigits();
                if (this.buf.charCodeAt(this.pos++) != 58 || this.length - this.pos < len1) {
                    throw new js__$Boot_HaxeError("Invalid string length");
                }
                var s2 = HxOverrides.substr(this.buf, this.pos, len1);
                this.pos += len1;
                s2 = decodeURIComponent(s2.split("+").join(" "));
                this.scache.push(s2);
                return s2;
            case 122:
                return 0;
            default:
        }
        this.pos--;
        throw new js__$Boot_HaxeError("Invalid char " + this.buf.charAt(this.pos) + " at position " + this.pos);
    },
    __class__: haxe_Unserializer
};
var haxe__$Unserializer_NullResolver = function () {
};
$hxClasses["haxe._Unserializer.NullResolver"] = haxe__$Unserializer_NullResolver;
haxe__$Unserializer_NullResolver.__name__ = ["haxe", "_Unserializer", "NullResolver"];
haxe__$Unserializer_NullResolver.__properties__ = { get_instance: "get_instance" };
haxe__$Unserializer_NullResolver.instance = null;
haxe__$Unserializer_NullResolver.get_instance = function () {
    if (haxe__$Unserializer_NullResolver.instance == null) {
        haxe__$Unserializer_NullResolver.instance = new haxe__$Unserializer_NullResolver();
    }
    return haxe__$Unserializer_NullResolver.instance;
};
haxe__$Unserializer_NullResolver.prototype = {
    resolveClass: function (name) {
        return null;
    },
    resolveEnum: function (name) {
        return null;
    },
    __class__: haxe__$Unserializer_NullResolver
};
var haxe_ds_BalancedTree = function () {
};
$hxClasses["haxe.ds.BalancedTree"] = haxe_ds_BalancedTree;
haxe_ds_BalancedTree.__name__ = ["haxe", "ds", "BalancedTree"];
haxe_ds_BalancedTree.prototype = {
    root: null,
    set: function (key, value) {
        this.root = this.setLoop(key, value, this.root);
    },
    get: function (key) {
        var node = this.root;
        while (node != null) {
            var c = this.compare(key, node.key);
            if (c == 0) {
                return node.value;
            }
            if (c < 0) {
                node = node.left;
            }
            else {
                node = node.right;
            }
        }
        return null;
    },
    remove: function (key) {
        try {
            this.root = this.removeLoop(key, this.root);
            return true;
        }
        catch (e) {
            haxe_CallStack.lastException = e;
            if (e instanceof js__$Boot_HaxeError)
                e = e.val;
            if (js_Boot.__instanceof(e, String)) {
                return false;
            }
            else
                throw (e);
        }
    },
    exists: function (key) {
        var node = this.root;
        while (node != null) {
            var c = this.compare(key, node.key);
            if (c == 0) {
                return true;
            }
            else if (c < 0) {
                node = node.left;
            }
            else {
                node = node.right;
            }
        }
        return false;
    },
    iterator: function () {
        var ret = [];
        this.iteratorLoop(this.root, ret);
        return HxOverrides.iter(ret);
    },
    keys: function () {
        var ret = [];
        this.keysLoop(this.root, ret);
        return HxOverrides.iter(ret);
    },
    setLoop: function (k, v, node) {
        if (node == null) {
            return new haxe_ds_TreeNode(null, k, v, null);
        }
        var c = this.compare(k, node.key);
        if (c == 0) {
            return new haxe_ds_TreeNode(node.left, k, v, node.right, node == null ? 0 : node._height);
        }
        else if (c < 0) {
            var nl = this.setLoop(k, v, node.left);
            return this.balance(nl, node.key, node.value, node.right);
        }
        else {
            var nr = this.setLoop(k, v, node.right);
            return this.balance(node.left, node.key, node.value, nr);
        }
    },
    removeLoop: function (k, node) {
        if (node == null) {
            throw new js__$Boot_HaxeError("Not_found");
        }
        var c = this.compare(k, node.key);
        if (c == 0) {
            return this.merge(node.left, node.right);
        }
        else if (c < 0) {
            return this.balance(this.removeLoop(k, node.left), node.key, node.value, node.right);
        }
        else {
            return this.balance(node.left, node.key, node.value, this.removeLoop(k, node.right));
        }
    },
    iteratorLoop: function (node, acc) {
        if (node != null) {
            this.iteratorLoop(node.left, acc);
            acc.push(node.value);
            this.iteratorLoop(node.right, acc);
        }
    },
    keysLoop: function (node, acc) {
        if (node != null) {
            this.keysLoop(node.left, acc);
            acc.push(node.key);
            this.keysLoop(node.right, acc);
        }
    },
    merge: function (t1, t2) {
        if (t1 == null) {
            return t2;
        }
        if (t2 == null) {
            return t1;
        }
        var t = this.minBinding(t2);
        return this.balance(t1, t.key, t.value, this.removeMinBinding(t2));
    },
    minBinding: function (t) {
        if (t == null) {
            throw new js__$Boot_HaxeError("Not_found");
        }
        else if (t.left == null) {
            return t;
        }
        else {
            return this.minBinding(t.left);
        }
    },
    removeMinBinding: function (t) {
        if (t.left == null) {
            return t.right;
        }
        else {
            return this.balance(this.removeMinBinding(t.left), t.key, t.value, t.right);
        }
    },
    balance: function (l, k, v, r) {
        var hl = l == null ? 0 : l._height;
        var hr = r == null ? 0 : r._height;
        if (hl > hr + 2) {
            var _this = l.left;
            var _this1 = l.right;
            if ((_this == null ? 0 : _this._height) >= (_this1 == null ? 0 : _this1._height)) {
                return new haxe_ds_TreeNode(l.left, l.key, l.value, new haxe_ds_TreeNode(l.right, k, v, r));
            }
            else {
                return new haxe_ds_TreeNode(new haxe_ds_TreeNode(l.left, l.key, l.value, l.right.left), l.right.key, l.right.value, new haxe_ds_TreeNode(l.right.right, k, v, r));
            }
        }
        else if (hr > hl + 2) {
            var _this2 = r.right;
            var _this3 = r.left;
            if ((_this2 == null ? 0 : _this2._height) > (_this3 == null ? 0 : _this3._height)) {
                return new haxe_ds_TreeNode(new haxe_ds_TreeNode(l, k, v, r.left), r.key, r.value, r.right);
            }
            else {
                return new haxe_ds_TreeNode(new haxe_ds_TreeNode(l, k, v, r.left.left), r.left.key, r.left.value, new haxe_ds_TreeNode(r.left.right, r.key, r.value, r.right));
            }
        }
        else {
            return new haxe_ds_TreeNode(l, k, v, r, (hl > hr ? hl : hr) + 1);
        }
    },
    compare: function (k1, k2) {
        return Reflect.compare(k1, k2);
    },
    toString: function () {
        if (this.root == null) {
            return "{}";
        }
        else {
            return "{" + this.root.toString() + "}";
        }
    },
    __class__: haxe_ds_BalancedTree
};
var haxe_ds_TreeNode = function (l, k, v, r, h) {
    if (h == null) {
        h = -1;
    }
    this.left = l;
    this.key = k;
    this.value = v;
    this.right = r;
    if (h == -1) {
        var tmp;
        var _this = this.left;
        var _this1 = this.right;
        if ((_this == null ? 0 : _this._height) > (_this1 == null ? 0 : _this1._height)) {
            var _this2 = this.left;
            if (_this2 == null) {
                tmp = 0;
            }
            else {
                tmp = _this2._height;
            }
        }
        else {
            var _this3 = this.right;
            if (_this3 == null) {
                tmp = 0;
            }
            else {
                tmp = _this3._height;
            }
        }
        this._height = tmp + 1;
    }
    else {
        this._height = h;
    }
};
$hxClasses["haxe.ds.TreeNode"] = haxe_ds_TreeNode;
haxe_ds_TreeNode.__name__ = ["haxe", "ds", "TreeNode"];
haxe_ds_TreeNode.prototype = {
    left: null,
    right: null,
    key: null,
    value: null,
    _height: null,
    toString: function () {
        return (this.left == null ? "" : this.left.toString() + ", ") + ("" + Std.string(this.key) + "=" + Std.string(this.value)) + (this.right == null ? "" : ", " + this.right.toString());
    },
    __class__: haxe_ds_TreeNode
};
var haxe_ds_EnumValueMap = function () {
    haxe_ds_BalancedTree.call(this);
};
$hxClasses["haxe.ds.EnumValueMap"] = haxe_ds_EnumValueMap;
haxe_ds_EnumValueMap.__name__ = ["haxe", "ds", "EnumValueMap"];
haxe_ds_EnumValueMap.__interfaces__ = [haxe_IMap];
haxe_ds_EnumValueMap.__super__ = haxe_ds_BalancedTree;
haxe_ds_EnumValueMap.prototype = $extend(haxe_ds_BalancedTree.prototype, {
    compare: function (k1, k2) {
        var d = k1[1] - k2[1];
        if (d != 0) {
            return d;
        }
        var p1 = k1.slice(2);
        var p2 = k2.slice(2);
        if (p1.length == 0 && p2.length == 0) {
            return 0;
        }
        return this.compareArgs(p1, p2);
    },
    compareArgs: function (a1, a2) {
        var ld = a1.length - a2.length;
        if (ld != 0) {
            return ld;
        }
        var _g1 = 0;
        var _g = a1.length;
        while (_g1 < _g) {
            var i = _g1++;
            var d = this.compareArg(a1[i], a2[i]);
            if (d != 0) {
                return d;
            }
        }
        return 0;
    },
    compareArg: function (v1, v2) {
        if (Reflect.isEnumValue(v1) && Reflect.isEnumValue(v2)) {
            return this.compare(v1, v2);
        }
        else if ((v1 instanceof Array) && v1.__enum__ == null && ((v2 instanceof Array) && v2.__enum__ == null)) {
            return this.compareArgs(v1, v2);
        }
        else {
            return Reflect.compare(v1, v2);
        }
    },
    __class__: haxe_ds_EnumValueMap
});
var haxe_ds__$HashMap_HashMap_$Impl_$ = {};
$hxClasses["haxe.ds._HashMap.HashMap_Impl_"] = haxe_ds__$HashMap_HashMap_$Impl_$;
haxe_ds__$HashMap_HashMap_$Impl_$.__name__ = ["haxe", "ds", "_HashMap", "HashMap_Impl_"];
haxe_ds__$HashMap_HashMap_$Impl_$._new = function () {
    var this1 = new haxe_ds__$HashMap_HashMapData();
    return this1;
};
haxe_ds__$HashMap_HashMap_$Impl_$.set = function (this1, k, v) {
    var _this = this1.keys;
    var key = k.hashCode();
    _this.h[key] = k;
    var _this1 = this1.values;
    var key1 = k.hashCode();
    _this1.h[key1] = v;
};
haxe_ds__$HashMap_HashMap_$Impl_$.get = function (this1, k) {
    var _this = this1.values;
    var key = k.hashCode();
    return _this.h[key];
};
haxe_ds__$HashMap_HashMap_$Impl_$.exists = function (this1, k) {
    var _this = this1.values;
    var key = k.hashCode();
    return _this.h.hasOwnProperty(key);
};
haxe_ds__$HashMap_HashMap_$Impl_$.remove = function (this1, k) {
    this1.values.remove(k.hashCode());
    return this1.keys.remove(k.hashCode());
};
haxe_ds__$HashMap_HashMap_$Impl_$.keys = function (this1) {
    return this1.keys.iterator();
};
haxe_ds__$HashMap_HashMap_$Impl_$.iterator = function (this1) {
    return this1.values.iterator();
};
var haxe_ds__$HashMap_HashMapData = function () {
    this.keys = new haxe_ds_IntMap();
    this.values = new haxe_ds_IntMap();
};
$hxClasses["haxe.ds._HashMap.HashMapData"] = haxe_ds__$HashMap_HashMapData;
haxe_ds__$HashMap_HashMapData.__name__ = ["haxe", "ds", "_HashMap", "HashMapData"];
haxe_ds__$HashMap_HashMapData.prototype = {
    keys: null,
    values: null,
    __class__: haxe_ds__$HashMap_HashMapData
};
var haxe_ds_IntMap = function () {
    this.h = {};
};
$hxClasses["haxe.ds.IntMap"] = haxe_ds_IntMap;
haxe_ds_IntMap.__name__ = ["haxe", "ds", "IntMap"];
haxe_ds_IntMap.__interfaces__ = [haxe_IMap];
haxe_ds_IntMap.prototype = {
    h: null,
    set: function (key, value) {
        this.h[key] = value;
    },
    get: function (key) {
        return this.h[key];
    },
    exists: function (key) {
        return this.h.hasOwnProperty(key);
    },
    remove: function (key) {
        if (!this.h.hasOwnProperty(key)) {
            return false;
        }
        delete (this.h[key]);
        return true;
    },
    keys: function () {
        var a = [];
        for (var key in this.h)
            if (this.h.hasOwnProperty(key)) {
                a.push(key | 0);
            }
        return HxOverrides.iter(a);
    },
    iterator: function () {
        return { ref: this.h, it: this.keys(), hasNext: function () {
                return this.it.hasNext();
            }, next: function () {
                var i = this.it.next();
                return this.ref[i];
            } };
    },
    toString: function () {
        var s_b = "";
        s_b += "{";
        var it = this.keys();
        var i = it;
        while (i.hasNext()) {
            var i1 = i.next();
            s_b += i1 == null ? "null" : "" + i1;
            s_b += " => ";
            s_b += Std.string(Std.string(this.h[i1]));
            if (it.hasNext()) {
                s_b += ", ";
            }
        }
        s_b += "}";
        return s_b;
    },
    __class__: haxe_ds_IntMap
};
var haxe_ds_ObjectMap = function () {
    this.h = { __keys__: {} };
};
$hxClasses["haxe.ds.ObjectMap"] = haxe_ds_ObjectMap;
haxe_ds_ObjectMap.__name__ = ["haxe", "ds", "ObjectMap"];
haxe_ds_ObjectMap.__interfaces__ = [haxe_IMap];
haxe_ds_ObjectMap.assignId = function (obj) {
    return obj.__id__ = ++haxe_ds_ObjectMap.count;
};
haxe_ds_ObjectMap.getId = function (obj) {
    return obj.__id__;
};
haxe_ds_ObjectMap.prototype = {
    h: null,
    set: function (key, value) {
        var id = key.__id__ || (key.__id__ = ++haxe_ds_ObjectMap.count);
        this.h[id] = value;
        this.h.__keys__[id] = key;
    },
    get: function (key) {
        return this.h[key.__id__];
    },
    exists: function (key) {
        return this.h.__keys__[key.__id__] != null;
    },
    remove: function (key) {
        var id = key.__id__;
        if (this.h.__keys__[id] == null) {
            return false;
        }
        delete (this.h[id]);
        delete (this.h.__keys__[id]);
        return true;
    },
    keys: function () {
        var a = [];
        for (var key in this.h.__keys__) {
            if (this.h.hasOwnProperty(key)) {
                a.push(this.h.__keys__[key]);
            }
        }
        return HxOverrides.iter(a);
    },
    iterator: function () {
        return { ref: this.h, it: this.keys(), hasNext: function () {
                return this.it.hasNext();
            }, next: function () {
                var i = this.it.next();
                return this.ref[i.__id__];
            } };
    },
    toString: function () {
        var s_b = "";
        s_b += "{";
        var it = this.keys();
        var i = it;
        while (i.hasNext()) {
            var i1 = i.next();
            s_b += Std.string(Std.string(i1));
            s_b += " => ";
            s_b += Std.string(Std.string(this.h[i1.__id__]));
            if (it.hasNext()) {
                s_b += ", ";
            }
        }
        s_b += "}";
        return s_b;
    },
    __class__: haxe_ds_ObjectMap
};
var haxe_ds__$StringMap_StringMapIterator = function (map, keys) {
    this.map = map;
    this.keys = keys;
    this.index = 0;
    this.count = keys.length;
};
$hxClasses["haxe.ds._StringMap.StringMapIterator"] = haxe_ds__$StringMap_StringMapIterator;
haxe_ds__$StringMap_StringMapIterator.__name__ = ["haxe", "ds", "_StringMap", "StringMapIterator"];
haxe_ds__$StringMap_StringMapIterator.prototype = {
    map: null,
    keys: null,
    index: null,
    count: null,
    hasNext: function () {
        return this.index < this.count;
    },
    next: function () {
        var _this = this.map;
        var key = this.keys[this.index++];
        if (__map_reserved[key] != null) {
            return _this.getReserved(key);
        }
        else {
            return _this.h[key];
        }
    },
    __class__: haxe_ds__$StringMap_StringMapIterator
};
var haxe_ds_StringMap = function () {
    this.h = {};
};
$hxClasses["haxe.ds.StringMap"] = haxe_ds_StringMap;
haxe_ds_StringMap.__name__ = ["haxe", "ds", "StringMap"];
haxe_ds_StringMap.__interfaces__ = [haxe_IMap];
haxe_ds_StringMap.prototype = {
    h: null,
    rh: null,
    isReserved: function (key) {
        return __map_reserved[key] != null;
    },
    set: function (key, value) {
        if (__map_reserved[key] != null) {
            this.setReserved(key, value);
        }
        else {
            this.h[key] = value;
        }
    },
    get: function (key) {
        if (__map_reserved[key] != null) {
            return this.getReserved(key);
        }
        return this.h[key];
    },
    exists: function (key) {
        if (__map_reserved[key] != null) {
            return this.existsReserved(key);
        }
        return this.h.hasOwnProperty(key);
    },
    setReserved: function (key, value) {
        if (this.rh == null) {
            this.rh = {};
        }
        this.rh["$" + key] = value;
    },
    getReserved: function (key) {
        if (this.rh == null) {
            return null;
        }
        else {
            return this.rh["$" + key];
        }
    },
    existsReserved: function (key) {
        if (this.rh == null) {
            return false;
        }
        return this.rh.hasOwnProperty("$" + key);
    },
    remove: function (key) {
        if (__map_reserved[key] != null) {
            key = "$" + key;
            if (this.rh == null || !this.rh.hasOwnProperty(key)) {
                return false;
            }
            delete (this.rh[key]);
            return true;
        }
        else {
            if (!this.h.hasOwnProperty(key)) {
                return false;
            }
            delete (this.h[key]);
            return true;
        }
    },
    keys: function () {
        return HxOverrides.iter(this.arrayKeys());
    },
    arrayKeys: function () {
        var out = [];
        for (var key in this.h) {
            if (this.h.hasOwnProperty(key)) {
                out.push(key);
            }
        }
        if (this.rh != null) {
            for (var key in this.rh) {
                if (key.charCodeAt(0) == 36) {
                    out.push(key.substr(1));
                }
            }
        }
        return out;
    },
    iterator: function () {
        return new haxe_ds__$StringMap_StringMapIterator(this, this.arrayKeys());
    },
    toString: function () {
        var s_b = "";
        s_b += "{";
        var keys = this.arrayKeys();
        var _g1 = 0;
        var _g = keys.length;
        while (_g1 < _g) {
            var i = _g1++;
            var k = keys[i];
            s_b += k == null ? "null" : "" + k;
            s_b += " => ";
            s_b += Std.string(Std.string(__map_reserved[k] != null ? this.getReserved(k) : this.h[k]));
            if (i < keys.length - 1) {
                s_b += ", ";
            }
        }
        s_b += "}";
        return s_b;
    },
    __class__: haxe_ds_StringMap
};
var haxe_ds__$Vector_Vector_$Impl_$ = {};
$hxClasses["haxe.ds._Vector.Vector_Impl_"] = haxe_ds__$Vector_Vector_$Impl_$;
haxe_ds__$Vector_Vector_$Impl_$.__name__ = ["haxe", "ds", "_Vector", "Vector_Impl_"];
haxe_ds__$Vector_Vector_$Impl_$.__properties__ = { get_length: "get_length" };
haxe_ds__$Vector_Vector_$Impl_$._new = function (length) {
    var this1 = new Array(length);
    return this1;
};
haxe_ds__$Vector_Vector_$Impl_$.get = function (this1, index) {
    return this1[index];
};
haxe_ds__$Vector_Vector_$Impl_$.set = function (this1, index, val) {
    return this1[index] = val;
};
haxe_ds__$Vector_Vector_$Impl_$.get_length = function (this1) {
    return this1.length;
};
haxe_ds__$Vector_Vector_$Impl_$.blit = function (src, srcPos, dest, destPos, len) {
    if (src == dest) {
        if (srcPos < destPos) {
            var i = srcPos + len;
            var j = destPos + len;
            var _g1 = 0;
            var _g = len;
            while (_g1 < _g) {
                var k = _g1++;
                --i;
                --j;
                src[j] = src[i];
            }
        }
        else if (srcPos > destPos) {
            var i1 = srcPos;
            var j1 = destPos;
            var _g11 = 0;
            var _g2 = len;
            while (_g11 < _g2) {
                var k1 = _g11++;
                src[j1] = src[i1];
                ++i1;
                ++j1;
            }
        }
    }
    else {
        var _g12 = 0;
        var _g3 = len;
        while (_g12 < _g3) {
            var i2 = _g12++;
            dest[destPos + i2] = src[srcPos + i2];
        }
    }
};
haxe_ds__$Vector_Vector_$Impl_$.toArray = function (this1) {
    return this1.slice(0);
};
haxe_ds__$Vector_Vector_$Impl_$.toData = function (this1) {
    return this1;
};
haxe_ds__$Vector_Vector_$Impl_$.fromData = function (data) {
    return data;
};
haxe_ds__$Vector_Vector_$Impl_$.fromArrayCopy = function (array) {
    return array.slice(0);
};
haxe_ds__$Vector_Vector_$Impl_$.copy = function (this1) {
    var length = this1.length;
    var this2 = new Array(length);
    var r = this2;
    haxe_ds__$Vector_Vector_$Impl_$.blit(this1, 0, r, 0, this1.length);
    return r;
};
haxe_ds__$Vector_Vector_$Impl_$.join = function (this1, sep) {
    var b_b = "";
    var i = 0;
    var len = this1.length;
    var _g1 = 0;
    var _g = len;
    while (_g1 < _g) {
        var i1 = _g1++;
        b_b += Std.string(Std.string(this1[i1]));
        if (i1 < len - 1) {
            b_b += sep == null ? "null" : "" + sep;
        }
    }
    return b_b;
};
haxe_ds__$Vector_Vector_$Impl_$.map = function (this1, f) {
    var length = this1.length;
    var this2 = new Array(length);
    var r = this2;
    var i = 0;
    var len = length;
    var _g1 = 0;
    var _g = len;
    while (_g1 < _g) {
        var i1 = _g1++;
        var v = f(this1[i1]);
        r[i1] = v;
    }
    return r;
};
haxe_ds__$Vector_Vector_$Impl_$.sort = function (this1, f) {
    this1.sort(f);
};
var haxe_ds_WeakMap = function () {
    throw new js__$Boot_HaxeError("Not implemented for this platform");
};
$hxClasses["haxe.ds.WeakMap"] = haxe_ds_WeakMap;
haxe_ds_WeakMap.__name__ = ["haxe", "ds", "WeakMap"];
haxe_ds_WeakMap.__interfaces__ = [haxe_IMap];
haxe_ds_WeakMap.prototype = {
    set: function (key, value) {
    },
    get: function (key) {
        return null;
    },
    exists: function (key) {
        return false;
    },
    remove: function (key) {
        return false;
    },
    keys: function () {
        return null;
    },
    iterator: function () {
        return null;
    },
    toString: function () {
        return null;
    },
    __class__: haxe_ds_WeakMap
};
var haxe_io__$ArrayBufferView_ArrayBufferView_$Impl_$ = {};
$hxClasses["haxe.io._ArrayBufferView.ArrayBufferView_Impl_"] = haxe_io__$ArrayBufferView_ArrayBufferView_$Impl_$;
haxe_io__$ArrayBufferView_ArrayBufferView_$Impl_$.__name__ = ["haxe", "io", "_ArrayBufferView", "ArrayBufferView_Impl_"];
haxe_io__$ArrayBufferView_ArrayBufferView_$Impl_$.__properties__ = { get_byteLength: "get_byteLength", get_byteOffset: "get_byteOffset", get_buffer: "get_buffer", get_EMULATED: "get_EMULATED" };
haxe_io__$ArrayBufferView_ArrayBufferView_$Impl_$.get_EMULATED = function () {
    return ArrayBuffer == js_html_compat_ArrayBuffer;
};
haxe_io__$ArrayBufferView_ArrayBufferView_$Impl_$._new = function (size) {
    var this1 = new Uint8Array(size);
    return this1;
};
haxe_io__$ArrayBufferView_ArrayBufferView_$Impl_$.get_byteOffset = function (this1) {
    return this1.byteOffset;
};
haxe_io__$ArrayBufferView_ArrayBufferView_$Impl_$.get_byteLength = function (this1) {
    return this1.byteLength;
};
haxe_io__$ArrayBufferView_ArrayBufferView_$Impl_$.get_buffer = function (this1) {
    return haxe_io_Bytes.ofData(this1.buffer);
};
haxe_io__$ArrayBufferView_ArrayBufferView_$Impl_$.sub = function (this1, begin, length) {
    return new Uint8Array(this1.buffer.slice(begin, length == null ? null : begin + length));
};
haxe_io__$ArrayBufferView_ArrayBufferView_$Impl_$.getData = function (this1) {
    return this1;
};
haxe_io__$ArrayBufferView_ArrayBufferView_$Impl_$.fromData = function (a) {
    return a;
};
var haxe_io_Bytes = function (data) {
    this.length = data.byteLength;
    this.b = new Uint8Array(data);
    this.b.bufferValue = data;
    data.hxBytes = this;
    data.bytes = this.b;
};
$hxClasses["haxe.io.Bytes"] = haxe_io_Bytes;
haxe_io_Bytes.__name__ = ["haxe", "io", "Bytes"];
haxe_io_Bytes.alloc = function (length) {
    return new haxe_io_Bytes(new ArrayBuffer(length));
};
haxe_io_Bytes.ofString = function (s) {
    var a = [];
    var i = 0;
    while (i < s.length) {
        var c = s.charCodeAt(i++);
        if (55296 <= c && c <= 56319) {
            c = c - 55232 << 10 | s.charCodeAt(i++) & 1023;
        }
        if (c <= 127) {
            a.push(c);
        }
        else if (c <= 2047) {
            a.push(192 | c >> 6);
            a.push(128 | c & 63);
        }
        else if (c <= 65535) {
            a.push(224 | c >> 12);
            a.push(128 | c >> 6 & 63);
            a.push(128 | c & 63);
        }
        else {
            a.push(240 | c >> 18);
            a.push(128 | c >> 12 & 63);
            a.push(128 | c >> 6 & 63);
            a.push(128 | c & 63);
        }
    }
    return new haxe_io_Bytes(new Uint8Array(a).buffer);
};
haxe_io_Bytes.ofData = function (b) {
    var hb = b.hxBytes;
    if (hb != null) {
        return hb;
    }
    return new haxe_io_Bytes(b);
};
haxe_io_Bytes.fastGet = function (b, pos) {
    return b.bytes[pos];
};
haxe_io_Bytes.prototype = {
    length: null,
    b: null,
    data: null,
    get: function (pos) {
        return this.b[pos];
    },
    set: function (pos, v) {
        this.b[pos] = v & 255;
    },
    blit: function (pos, src, srcpos, len) {
        if (pos < 0 || srcpos < 0 || len < 0 || pos + len > this.length || srcpos + len > src.length) {
            throw new js__$Boot_HaxeError(haxe_io_Error.OutsideBounds);
        }
        if (srcpos == 0 && len == src.b.byteLength) {
            this.b.set(src.b, pos);
        }
        else {
            this.b.set(src.b.subarray(srcpos, srcpos + len), pos);
        }
    },
    fill: function (pos, len, value) {
        var _g1 = 0;
        var _g = len;
        while (_g1 < _g) {
            var i = _g1++;
            this.b[pos++] = value & 255;
        }
    },
    sub: function (pos, len) {
        if (pos < 0 || len < 0 || pos + len > this.length) {
            throw new js__$Boot_HaxeError(haxe_io_Error.OutsideBounds);
        }
        return new haxe_io_Bytes(this.b.buffer.slice(pos + this.b.byteOffset, pos + this.b.byteOffset + len));
    },
    compare: function (other) {
        var b1 = this.b;
        var b2 = other.b;
        var len = this.length < other.length ? this.length : other.length;
        var _g1 = 0;
        var _g = len;
        while (_g1 < _g) {
            var i = _g1++;
            if (b1[i] != b2[i]) {
                return b1[i] - b2[i];
            }
        }
        return this.length - other.length;
    },
    initData: function () {
        if (this.data == null) {
            this.data = new DataView(this.b.buffer, this.b.byteOffset, this.b.byteLength);
        }
    },
    getDouble: function (pos) {
        if (this.data == null) {
            this.data = new DataView(this.b.buffer, this.b.byteOffset, this.b.byteLength);
        }
        return this.data.getFloat64(pos, true);
    },
    getFloat: function (pos) {
        if (this.data == null) {
            this.data = new DataView(this.b.buffer, this.b.byteOffset, this.b.byteLength);
        }
        return this.data.getFloat32(pos, true);
    },
    setDouble: function (pos, v) {
        if (this.data == null) {
            this.data = new DataView(this.b.buffer, this.b.byteOffset, this.b.byteLength);
        }
        this.data.setFloat64(pos, v, true);
    },
    setFloat: function (pos, v) {
        if (this.data == null) {
            this.data = new DataView(this.b.buffer, this.b.byteOffset, this.b.byteLength);
        }
        this.data.setFloat32(pos, v, true);
    },
    getUInt16: function (pos) {
        if (this.data == null) {
            this.data = new DataView(this.b.buffer, this.b.byteOffset, this.b.byteLength);
        }
        return this.data.getUint16(pos, true);
    },
    setUInt16: function (pos, v) {
        if (this.data == null) {
            this.data = new DataView(this.b.buffer, this.b.byteOffset, this.b.byteLength);
        }
        this.data.setUint16(pos, v, true);
    },
    getInt32: function (pos) {
        if (this.data == null) {
            this.data = new DataView(this.b.buffer, this.b.byteOffset, this.b.byteLength);
        }
        return this.data.getInt32(pos, true);
    },
    setInt32: function (pos, v) {
        if (this.data == null) {
            this.data = new DataView(this.b.buffer, this.b.byteOffset, this.b.byteLength);
        }
        this.data.setInt32(pos, v, true);
    },
    getInt64: function (pos) {
        var this1 = new haxe__$Int64__$_$_$Int64(this.getInt32(pos + 4), this.getInt32(pos));
        return this1;
    },
    setInt64: function (pos, v) {
        this.setInt32(pos, v.low);
        this.setInt32(pos + 4, v.high);
    },
    getString: function (pos, len) {
        if (pos < 0 || len < 0 || pos + len > this.length) {
            throw new js__$Boot_HaxeError(haxe_io_Error.OutsideBounds);
        }
        var s = "";
        var b = this.b;
        var fcc = String.fromCharCode;
        var i = pos;
        var max = pos + len;
        while (i < max) {
            var c = b[i++];
            if (c < 128) {
                if (c == 0) {
                    break;
                }
                s += fcc(c);
            }
            else if (c < 224) {
                s += fcc((c & 63) << 6 | b[i++] & 127);
            }
            else if (c < 240) {
                var c2 = b[i++];
                s += fcc((c & 31) << 12 | (c2 & 127) << 6 | b[i++] & 127);
            }
            else {
                var c21 = b[i++];
                var c3 = b[i++];
                var u = (c & 15) << 18 | (c21 & 127) << 12 | (c3 & 127) << 6 | b[i++] & 127;
                s += fcc((u >> 10) + 55232);
                s += fcc(u & 1023 | 56320);
            }
        }
        return s;
    },
    readString: function (pos, len) {
        return this.getString(pos, len);
    },
    toString: function () {
        return this.getString(0, this.length);
    },
    toHex: function () {
        var s_b = "";
        var chars = [];
        var str = "0123456789abcdef";
        var _g1 = 0;
        var _g = str.length;
        while (_g1 < _g) {
            var i = _g1++;
            chars.push(HxOverrides.cca(str, i));
        }
        var _g11 = 0;
        var _g2 = this.length;
        while (_g11 < _g2) {
            var i1 = _g11++;
            var c = this.b[i1];
            s_b += String.fromCharCode(chars[c >> 4]);
            s_b += String.fromCharCode(chars[c & 15]);
        }
        return s_b;
    },
    getData: function () {
        return this.b.bufferValue;
    },
    __class__: haxe_io_Bytes
};
var haxe_io_Error = $hxClasses["haxe.io.Error"] = { __ename__: ["haxe", "io", "Error"], __constructs__: ["Blocked", "Overflow", "OutsideBounds", "Custom"] };
haxe_io_Error.Blocked = ["Blocked", 0];
haxe_io_Error.Blocked.toString = $estr;
haxe_io_Error.Blocked.__enum__ = haxe_io_Error;
haxe_io_Error.Overflow = ["Overflow", 1];
haxe_io_Error.Overflow.toString = $estr;
haxe_io_Error.Overflow.__enum__ = haxe_io_Error;
haxe_io_Error.OutsideBounds = ["OutsideBounds", 2];
haxe_io_Error.OutsideBounds.toString = $estr;
haxe_io_Error.OutsideBounds.__enum__ = haxe_io_Error;
haxe_io_Error.Custom = function (e) { var $x = ["Custom", 3, e]; $x.__enum__ = haxe_io_Error; $x.toString = $estr; return $x; };
haxe_io_Error.__empty_constructs__ = [haxe_io_Error.Blocked, haxe_io_Error.Overflow, haxe_io_Error.OutsideBounds];
var haxe_io_FPHelper = function () { };
$hxClasses["haxe.io.FPHelper"] = haxe_io_FPHelper;
haxe_io_FPHelper.__name__ = ["haxe", "io", "FPHelper"];
haxe_io_FPHelper.i32ToFloat = function (i) {
    var sign = 1 - (i >>> 31 << 1);
    var exp = i >>> 23 & 255;
    var sig = i & 8388607;
    if (sig == 0 && exp == 0) {
        return 0.0;
    }
    return sign * (1 + Math.pow(2, -23) * sig) * Math.pow(2, exp - 127);
};
haxe_io_FPHelper.floatToI32 = function (f) {
    if (f == 0) {
        return 0;
    }
    var af = f < 0 ? -f : f;
    var exp = Math.floor(Math.log(af) / 0.6931471805599453);
    if (exp < -127) {
        exp = -127;
    }
    else if (exp > 128) {
        exp = 128;
    }
    var sig = Math.round((af / Math.pow(2, exp) - 1) * 8388608);
    if (sig == 8388608 && exp < 128) {
        sig = 0;
        ++exp;
    }
    return (f < 0 ? -2147483648 : 0) | exp + 127 << 23 | sig;
};
haxe_io_FPHelper.i64ToDouble = function (low, high) {
    var sign = 1 - (high >>> 31 << 1);
    var exp = (high >> 20 & 2047) - 1023;
    var sig = (high & 1048575) * 4294967296. + (low >>> 31) * 2147483648. + (low & 2147483647);
    if (sig == 0 && exp == -1023) {
        return 0.0;
    }
    return sign * (1.0 + Math.pow(2, -52) * sig) * Math.pow(2, exp);
};
haxe_io_FPHelper.doubleToI64 = function (v) {
    var i64 = haxe_io_FPHelper.i64tmp;
    if (v == 0) {
        i64.low = 0;
        i64.high = 0;
    }
    else if (!isFinite(v)) {
        if (v > 0) {
            i64.low = 0;
            i64.high = 2146435072;
        }
        else {
            i64.low = 0;
            i64.high = -1048576;
        }
    }
    else {
        var av = v < 0 ? -v : v;
        var exp = Math.floor(Math.log(av) / 0.6931471805599453);
        var sig = Math.round((av / Math.pow(2, exp) - 1) * 4503599627370496.);
        var sig_l = sig | 0;
        var sig_h = sig / 4294967296.0 | 0;
        i64.low = sig_l;
        i64.high = (v < 0 ? -2147483648 : 0) | exp + 1023 << 20 | sig_h;
    }
    return i64;
};
var haxe_io__$UInt8Array_UInt8Array_$Impl_$ = {};
$hxClasses["haxe.io._UInt8Array.UInt8Array_Impl_"] = haxe_io__$UInt8Array_UInt8Array_$Impl_$;
haxe_io__$UInt8Array_UInt8Array_$Impl_$.__name__ = ["haxe", "io", "_UInt8Array", "UInt8Array_Impl_"];
haxe_io__$UInt8Array_UInt8Array_$Impl_$.__properties__ = { get_view: "get_view", get_length: "get_length" };
haxe_io__$UInt8Array_UInt8Array_$Impl_$._new = function (elements) {
    var this1 = new Uint8Array(elements);
    return this1;
};
haxe_io__$UInt8Array_UInt8Array_$Impl_$.get_length = function (this1) {
    return this1.length;
};
haxe_io__$UInt8Array_UInt8Array_$Impl_$.get_view = function (this1) {
    return this1;
};
haxe_io__$UInt8Array_UInt8Array_$Impl_$.get = function (this1, index) {
    return this1[index];
};
haxe_io__$UInt8Array_UInt8Array_$Impl_$.set = function (this1, index, value) {
    return this1[index] = value & 255;
};
haxe_io__$UInt8Array_UInt8Array_$Impl_$.sub = function (this1, begin, length) {
    return this1.subarray(begin, length == null ? this1.length : begin + length);
};
haxe_io__$UInt8Array_UInt8Array_$Impl_$.subarray = function (this1, begin, end) {
    return this1.subarray(begin, end);
};
haxe_io__$UInt8Array_UInt8Array_$Impl_$.getData = function (this1) {
    return this1;
};
haxe_io__$UInt8Array_UInt8Array_$Impl_$.fromData = function (d) {
    return d;
};
haxe_io__$UInt8Array_UInt8Array_$Impl_$.fromArray = function (a, pos, length) {
    if (pos == null) {
        pos = 0;
    }
    if (length == null) {
        length = a.length - pos;
    }
    if (pos < 0 || length < 0 || pos + length > a.length) {
        throw new js__$Boot_HaxeError(haxe_io_Error.OutsideBounds);
    }
    if (pos == 0 && length == a.length) {
        return new Uint8Array(a);
    }
    var this1 = new Uint8Array(a.length);
    var i = this1;
    var _g1 = 0;
    var _g = length;
    while (_g1 < _g) {
        var idx = _g1++;
        i[idx] = a[idx + pos] & 255;
    }
    return i;
};
haxe_io__$UInt8Array_UInt8Array_$Impl_$.fromBytes = function (bytes, bytePos, length) {
    if (bytePos == null) {
        bytePos = 0;
    }
    if (length == null) {
        length = bytes.length - bytePos;
    }
    return new Uint8Array(bytes.b.bufferValue, bytePos, length);
};
var js__$Boot_HaxeError = function (val) {
    Error.call(this);
    this.val = val;
    this.message = String(val);
    if (Error.captureStackTrace) {
        Error.captureStackTrace(this, js__$Boot_HaxeError);
    }
};
$hxClasses["js._Boot.HaxeError"] = js__$Boot_HaxeError;
js__$Boot_HaxeError.__name__ = ["js", "_Boot", "HaxeError"];
js__$Boot_HaxeError.wrap = function (val) {
    if ((val instanceof Error)) {
        return val;
    }
    else {
        return new js__$Boot_HaxeError(val);
    }
};
js__$Boot_HaxeError.__super__ = Error;
js__$Boot_HaxeError.prototype = $extend(Error.prototype, {
    val: null,
    __class__: js__$Boot_HaxeError
});
var js_Boot = function () { };
$hxClasses["js.Boot"] = js_Boot;
js_Boot.__name__ = ["js", "Boot"];
js_Boot.__unhtml = function (s) {
    return s.split("&").join("&amp;").split("<").join("&lt;").split(">").join("&gt;");
};
js_Boot.__trace = function (v, i) {
    var msg = i != null ? i.fileName + ":" + i.lineNumber + ": " : "";
    msg += js_Boot.__string_rec(v, "");
    if (i != null && i.customParams != null) {
        var _g = 0;
        var _g1 = i.customParams;
        while (_g < _g1.length) {
            var v1 = _g1[_g];
            ++_g;
            msg += "," + js_Boot.__string_rec(v1, "");
        }
    }
    var d;
    var tmp;
    if (typeof (document) != "undefined") {
        d = document.getElementById("haxe:trace");
        tmp = d != null;
    }
    else {
        tmp = false;
    }
    if (tmp) {
        d.innerHTML += js_Boot.__unhtml(msg) + "<br/>";
    }
    else if (typeof console != "undefined" && console.log != null) {
        console.log(msg);
    }
};
js_Boot.__clear_trace = function () {
    var d = document.getElementById("haxe:trace");
    if (d != null) {
        d.innerHTML = "";
    }
};
js_Boot.isClass = function (o) {
    return o.__name__;
};
js_Boot.isEnum = function (e) {
    return e.__ename__;
};
js_Boot.getClass = function (o) {
    if ((o instanceof Array) && o.__enum__ == null) {
        return Array;
    }
    else {
        var cl = o.__class__;
        if (cl != null) {
            return cl;
        }
        var name = js_Boot.__nativeClassName(o);
        if (name != null) {
            return js_Boot.__resolveNativeClass(name);
        }
        return null;
    }
};
js_Boot.__string_rec = function (o, s) {
    if (o == null) {
        return "null";
    }
    if (s.length >= 5) {
        return "<...>";
    }
    var t = typeof (o);
    if (t == "function" && (o.__name__ || o.__ename__)) {
        t = "object";
    }
    switch (t) {
        case "function":
            return "<function>";
        case "object":
            if (o instanceof Array) {
                if (o.__enum__) {
                    if (o.length == 2) {
                        return o[0];
                    }
                    var str = o[0] + "(";
                    s += "\t";
                    var _g1 = 2;
                    var _g = o.length;
                    while (_g1 < _g) {
                        var i = _g1++;
                        if (i != 2) {
                            str += "," + js_Boot.__string_rec(o[i], s);
                        }
                        else {
                            str += js_Boot.__string_rec(o[i], s);
                        }
                    }
                    return str + ")";
                }
                var l = o.length;
                var i1;
                var str1 = "[";
                s += "\t";
                var _g11 = 0;
                var _g2 = l;
                while (_g11 < _g2) {
                    var i2 = _g11++;
                    str1 += (i2 > 0 ? "," : "") + js_Boot.__string_rec(o[i2], s);
                }
                str1 += "]";
                return str1;
            }
            var tostr;
            try {
                tostr = o.toString;
            }
            catch (e) {
                haxe_CallStack.lastException = e;
                return "???";
            }
            if (tostr != null && tostr != Object.toString && typeof (tostr) == "function") {
                var s2 = o.toString();
                if (s2 != "[object Object]") {
                    return s2;
                }
            }
            var k = null;
            var str2 = "{\n";
            s += "\t";
            var hasp = o.hasOwnProperty != null;
            for (var k in o) {
                if (hasp && !o.hasOwnProperty(k)) {
                    continue;
                }
                if (k == "prototype" || k == "__class__" || k == "__super__" || k == "__interfaces__" || k == "__properties__") {
                    continue;
                }
                if (str2.length != 2) {
                    str2 += ", \n";
                }
                str2 += s + k + " : " + js_Boot.__string_rec(o[k], s);
            }
            s = s.substring(1);
            str2 += "\n" + s + "}";
            return str2;
        case "string":
            return o;
        default:
            return String(o);
    }
};
js_Boot.__interfLoop = function (cc, cl) {
    if (cc == null) {
        return false;
    }
    if (cc == cl) {
        return true;
    }
    var intf = cc.__interfaces__;
    if (intf != null) {
        var _g1 = 0;
        var _g = intf.length;
        while (_g1 < _g) {
            var i = _g1++;
            var i1 = intf[i];
            if (i1 == cl || js_Boot.__interfLoop(i1, cl)) {
                return true;
            }
        }
    }
    return js_Boot.__interfLoop(cc.__super__, cl);
};
js_Boot.__instanceof = function (o, cl) {
    if (cl == null) {
        return false;
    }
    switch (cl) {
        case Array:
            if ((o instanceof Array)) {
                return o.__enum__ == null;
            }
            else {
                return false;
            }
            break;
        case Bool:
            return typeof (o) == "boolean";
        case Dynamic:
            return true;
        case Float:
            return typeof (o) == "number";
        case Int:
            if (typeof (o) == "number") {
                return (o | 0) === o;
            }
            else {
                return false;
            }
            break;
        case String:
            return typeof (o) == "string";
        default:
            if (o != null) {
                if (typeof (cl) == "function") {
                    if (o instanceof cl) {
                        return true;
                    }
                    if (js_Boot.__interfLoop(js_Boot.getClass(o), cl)) {
                        return true;
                    }
                }
                else if (typeof (cl) == "object" && js_Boot.__isNativeObj(cl)) {
                    if (o instanceof cl) {
                        return true;
                    }
                }
            }
            else {
                return false;
            }
            if (cl == Class ? o.__name__ != null : false) {
                return true;
            }
            if (cl == Enum ? o.__ename__ != null : false) {
                return true;
            }
            return o.__enum__ == cl;
    }
};
js_Boot.__cast = function (o, t) {
    if (js_Boot.__instanceof(o, t)) {
        return o;
    }
    else {
        throw new js__$Boot_HaxeError("Cannot cast " + Std.string(o) + " to " + Std.string(t));
    }
};
js_Boot.__nativeClassName = function (o) {
    var name = js_Boot.__toStr.call(o).slice(8, -1);
    if (name == "Object" || name == "Function" || name == "Math" || name == "JSON") {
        return null;
    }
    return name;
};
js_Boot.__isNativeObj = function (o) {
    return js_Boot.__nativeClassName(o) != null;
};
js_Boot.__resolveNativeClass = function (name) {
    return $global[name];
};
var js_Lib = function () { };
$hxClasses["js.Lib"] = js_Lib;
js_Lib.__name__ = ["js", "Lib"];
js_Lib.__properties__ = { get_undefined: "get_undefined" };
js_Lib.debug = function () {
    debugger;
};
js_Lib.alert = function (v) {
    alert(js_Boot.__string_rec(v, ""));
};
js_Lib["eval"] = function (code) {
    return eval(code);
};
js_Lib.get_undefined = function () {
    return undefined;
};
var js_html_compat_ArrayBuffer = function (a) {
    if ((a instanceof Array) && a.__enum__ == null) {
        this.a = a;
        this.byteLength = a.length;
    }
    else {
        var len = a;
        this.a = [];
        var _g1 = 0;
        var _g = len;
        while (_g1 < _g) {
            var i = _g1++;
            this.a[i] = 0;
        }
        this.byteLength = len;
    }
};
$hxClasses["js.html.compat.ArrayBuffer"] = js_html_compat_ArrayBuffer;
js_html_compat_ArrayBuffer.__name__ = ["js", "html", "compat", "ArrayBuffer"];
js_html_compat_ArrayBuffer.sliceImpl = function (begin, end) {
    var u = new Uint8Array(this, begin, end == null ? null : end - begin);
    var result = new ArrayBuffer(u.byteLength);
    var resultArray = new Uint8Array(result);
    resultArray.set(u);
    return result;
};
js_html_compat_ArrayBuffer.prototype = {
    byteLength: null,
    a: null,
    slice: function (begin, end) {
        return new js_html_compat_ArrayBuffer(this.a.slice(begin, end));
    },
    __class__: js_html_compat_ArrayBuffer
};
var js_html_compat_DataView = function (buffer, byteOffset, byteLength) {
    this.buf = buffer;
    this.offset = byteOffset == null ? 0 : byteOffset;
    this.length = byteLength == null ? buffer.byteLength - this.offset : byteLength;
    if (this.offset < 0 || this.length < 0 || this.offset + this.length > buffer.byteLength) {
        throw new js__$Boot_HaxeError(haxe_io_Error.OutsideBounds);
    }
    this.byteLength = this.length;
    this.byteOffset = this.offset;
    this.buffer = this.buf;
};
$hxClasses["js.html.compat.DataView"] = js_html_compat_DataView;
js_html_compat_DataView.__name__ = ["js", "html", "compat", "DataView"];
js_html_compat_DataView.prototype = {
    buf: null,
    offset: null,
    length: null,
    byteLength: null,
    byteOffset: null,
    buffer: null,
    getInt8: function (byteOffset) {
        var v = this.buf.a[this.offset + byteOffset];
        if (v >= 128) {
            return v - 256;
        }
        else {
            return v;
        }
    },
    getUint8: function (byteOffset) {
        return this.buf.a[this.offset + byteOffset];
    },
    getInt16: function (byteOffset, littleEndian) {
        var v = this.getUint16(byteOffset, littleEndian);
        if (v >= 32768) {
            return v - 65536;
        }
        else {
            return v;
        }
    },
    getUint16: function (byteOffset, littleEndian) {
        if (littleEndian) {
            return this.buf.a[this.offset + byteOffset] | this.buf.a[this.offset + byteOffset + 1] << 8;
        }
        else {
            return this.buf.a[this.offset + byteOffset] << 8 | this.buf.a[this.offset + byteOffset + 1];
        }
    },
    getInt32: function (byteOffset, littleEndian) {
        var p = this.offset + byteOffset;
        var a = this.buf.a[p++];
        var b = this.buf.a[p++];
        var c = this.buf.a[p++];
        var d = this.buf.a[p++];
        if (littleEndian) {
            return a | b << 8 | c << 16 | d << 24;
        }
        else {
            return d | c << 8 | b << 16 | a << 24;
        }
    },
    getUint32: function (byteOffset, littleEndian) {
        var v = this.getInt32(byteOffset, littleEndian);
        if (v < 0) {
            return v + 4294967296.;
        }
        else {
            return v;
        }
    },
    getFloat32: function (byteOffset, littleEndian) {
        return haxe_io_FPHelper.i32ToFloat(this.getInt32(byteOffset, littleEndian));
    },
    getFloat64: function (byteOffset, littleEndian) {
        var a = this.getInt32(byteOffset, littleEndian);
        var b = this.getInt32(byteOffset + 4, littleEndian);
        return haxe_io_FPHelper.i64ToDouble(littleEndian ? a : b, littleEndian ? b : a);
    },
    setInt8: function (byteOffset, value) {
        this.buf.a[byteOffset + this.offset] = value < 0 ? value + 128 & 255 : value & 255;
    },
    setUint8: function (byteOffset, value) {
        this.buf.a[byteOffset + this.offset] = value & 255;
    },
    setInt16: function (byteOffset, value, littleEndian) {
        this.setUint16(byteOffset, value < 0 ? value + 65536 : value, littleEndian);
    },
    setUint16: function (byteOffset, value, littleEndian) {
        var p = byteOffset + this.offset;
        if (littleEndian) {
            this.buf.a[p] = value & 255;
            this.buf.a[p++] = value >> 8 & 255;
        }
        else {
            this.buf.a[p++] = value >> 8 & 255;
            this.buf.a[p] = value & 255;
        }
    },
    setInt32: function (byteOffset, value, littleEndian) {
        this.setUint32(byteOffset, value, littleEndian);
    },
    setUint32: function (byteOffset, value, littleEndian) {
        var p = byteOffset + this.offset;
        if (littleEndian) {
            this.buf.a[p++] = value & 255;
            this.buf.a[p++] = value >> 8 & 255;
            this.buf.a[p++] = value >> 16 & 255;
            this.buf.a[p++] = value >>> 24;
        }
        else {
            this.buf.a[p++] = value >>> 24;
            this.buf.a[p++] = value >> 16 & 255;
            this.buf.a[p++] = value >> 8 & 255;
            this.buf.a[p++] = value & 255;
        }
    },
    setFloat32: function (byteOffset, value, littleEndian) {
        this.setUint32(byteOffset, haxe_io_FPHelper.floatToI32(value), littleEndian);
    },
    setFloat64: function (byteOffset, value, littleEndian) {
        var i64 = haxe_io_FPHelper.doubleToI64(value);
        if (littleEndian) {
            this.setUint32(byteOffset, i64.low);
            this.setUint32(byteOffset, i64.high);
        }
        else {
            this.setUint32(byteOffset, i64.high);
            this.setUint32(byteOffset, i64.low);
        }
    },
    __class__: js_html_compat_DataView
};
var js_html_compat_Uint8Array = function () { };
$hxClasses["js.html.compat.Uint8Array"] = js_html_compat_Uint8Array;
js_html_compat_Uint8Array.__name__ = ["js", "html", "compat", "Uint8Array"];
js_html_compat_Uint8Array._new = function (arg1, offset, length) {
    var arr;
    if (typeof (arg1) == "number") {
        arr = [];
        var _g1 = 0;
        var _g = arg1;
        while (_g1 < _g) {
            var i = _g1++;
            arr[i] = 0;
        }
        arr.byteLength = arr.length;
        arr.byteOffset = 0;
        arr.buffer = new js_html_compat_ArrayBuffer(arr);
    }
    else if (js_Boot.__instanceof(arg1, js_html_compat_ArrayBuffer)) {
        var buffer = arg1;
        if (offset == null) {
            offset = 0;
        }
        if (length == null) {
            length = buffer.byteLength - offset;
        }
        if (offset == 0) {
            arr = buffer.a;
        }
        else {
            arr = buffer.a.slice(offset, offset + length);
        }
        arr.byteLength = arr.length;
        arr.byteOffset = offset;
        arr.buffer = buffer;
    }
    else if ((arg1 instanceof Array) && arg1.__enum__ == null) {
        arr = arg1.slice();
        arr.byteLength = arr.length;
        arr.byteOffset = 0;
        arr.buffer = new js_html_compat_ArrayBuffer(arr);
    }
    else {
        throw new js__$Boot_HaxeError("TODO " + Std.string(arg1));
    }
    arr.subarray = js_html_compat_Uint8Array._subarray;
    arr.set = js_html_compat_Uint8Array._set;
    return arr;
};
js_html_compat_Uint8Array._set = function (arg, offset) {
    if (js_Boot.__instanceof(arg.buffer, js_html_compat_ArrayBuffer)) {
        var a = arg;
        if (arg.byteLength + offset > this.byteLength) {
            throw new js__$Boot_HaxeError("set() outside of range");
        }
        var _g1 = 0;
        var _g = arg.byteLength;
        while (_g1 < _g) {
            var i = _g1++;
            this[i + offset] = a[i];
        }
    }
    else if ((arg instanceof Array) && arg.__enum__ == null) {
        var a1 = arg;
        if (a1.length + offset > this.byteLength) {
            throw new js__$Boot_HaxeError("set() outside of range");
        }
        var _g11 = 0;
        var _g2 = a1.length;
        while (_g11 < _g2) {
            var i1 = _g11++;
            this[i1 + offset] = a1[i1];
        }
    }
    else {
        throw new js__$Boot_HaxeError("TODO");
    }
};
js_html_compat_Uint8Array._subarray = function (start, end) {
    var a = js_html_compat_Uint8Array._new(this.slice(start, end));
    a.byteOffset = start;
    return a;
};
function $iterator(o) { if (o instanceof Array)
    return function () { return HxOverrides.iter(o); }; return typeof (o.iterator) == 'function' ? $bind(o, o.iterator) : o.iterator; }
var $_, $fid = 0;
function $bind(o, m) { if (m == null)
    return null; if (m.__id__ == null)
    m.__id__ = $fid++; var f; if (o.hx__closures__ == null)
    o.hx__closures__ = {};
else
    f = o.hx__closures__[m.__id__]; if (f == null) {
    f = function () { return f.method.apply(f.scope, arguments); };
    f.scope = o;
    f.method = m;
    o.hx__closures__[m.__id__] = f;
} return f; }
function $arrayPush(x) { this.push(x); }
$hxClasses["Math"] = Math;
String.prototype.__class__ = $hxClasses["String"] = String;
String.__name__ = ["String"];
$hxClasses["Array"] = Array;
Array.__name__ = ["Array"];
Date.prototype.__class__ = $hxClasses["Date"] = Date;
Date.__name__ = ["Date"];
var Int = $hxClasses["Int"] = { __name__: ["Int"] };
var Dynamic = $hxClasses["Dynamic"] = { __name__: ["Dynamic"] };
var Float = $hxClasses["Float"] = Number;
Float.__name__ = ["Float"];
var Bool = $hxClasses["Bool"] = Boolean;
Bool.__ename__ = ["Bool"];
var Class = $hxClasses["Class"] = { __name__: ["Class"] };
var Enum = {};
var Void = $hxClasses["Void"] = { __ename__: ["Void"] };
var __map_reserved = {};
var ArrayBuffer = $global.ArrayBuffer || js_html_compat_ArrayBuffer;
if (ArrayBuffer.prototype.slice == null) {
    ArrayBuffer.prototype.slice = js_html_compat_ArrayBuffer.sliceImpl;
}
var DataView = $global.DataView || js_html_compat_DataView;
var Uint8Array = $global.Uint8Array || js_html_compat_Uint8Array._new;
StringTools.winMetaCharacters = [32, 40, 41, 37, 33, 94, 34, 60, 62, 38, 124, 10, 13, 44, 59];
cornerstone_integrator_configuration_Configuration.__rtti = "<class path=\"cornerstone.integrator.configuration.Configuration\" params=\"\">\n\t<Data public=\"1\" static=\"1\"><c path=\"cornerstone.integrator.configuration.ConfigurationData\"/></Data>\n\t<meta>\n\t\t<m n=\":keepSub\"/>\n\t\t<m n=\":rtti\"/>\n\t</meta>\n</class>";
cornerstone_integrator_configuration_ConfigurationData.__rtti = "<class path=\"cornerstone.integrator.configuration.ConfigurationData\" params=\"\">\n\t<LogFolder public=\"1\" get=\"accessor\" set=\"accessor\">\n\t\t<c path=\"String\"/>\n\t\t<meta><m n=\":isVar\"/></meta>\n\t</LogFolder>\n\t<CurrentDeployEnvironment public=\"1\" get=\"accessor\" set=\"accessor\">\n\t\t<e path=\"cornerstone.integrator.configuration.DeployEnvironmentEnum\"/>\n\t\t<meta><m n=\":isVar\"/></meta>\n\t</CurrentDeployEnvironment>\n\t<DatabaseConnections public=\"1\" get=\"accessor\" set=\"accessor\">\n\t\t<c path=\"Array\"><c path=\"cornerstone.integrator.configuration.DatabaseConnectionData\"/></c>\n\t\t<meta><m n=\":isVar\"/></meta>\n\t</DatabaseConnections>\n\t<get_LogFolder set=\"method\" line=\"12\"><f a=\"\"><c path=\"String\"/></f></get_LogFolder>\n\t<set_LogFolder set=\"method\" line=\"16\"><f a=\"value\">\n\t<c path=\"String\"/>\n\t<c path=\"String\"/>\n</f></set_LogFolder>\n\t<get_CurrentDeployEnvironment set=\"method\" line=\"20\"><f a=\"\"><e path=\"cornerstone.integrator.configuration.DeployEnvironmentEnum\"/></f></get_CurrentDeployEnvironment>\n\t<set_CurrentDeployEnvironment set=\"method\" line=\"24\"><f a=\"value\">\n\t<e path=\"cornerstone.integrator.configuration.DeployEnvironmentEnum\"/>\n\t<e path=\"cornerstone.integrator.configuration.DeployEnvironmentEnum\"/>\n</f></set_CurrentDeployEnvironment>\n\t<set_DatabaseConnections set=\"method\" line=\"28\"><f a=\"value\">\n\t<c path=\"Array\"><c path=\"cornerstone.integrator.configuration.DatabaseConnectionData\"/></c>\n\t<c path=\"Array\"><c path=\"cornerstone.integrator.configuration.DatabaseConnectionData\"/></c>\n</f></set_DatabaseConnections>\n\t<get_DatabaseConnections set=\"method\" line=\"32\"><f a=\"\"><c path=\"Array\"><c path=\"cornerstone.integrator.configuration.DatabaseConnectionData\"/></c></f></get_DatabaseConnections>\n\t<get_CurrentDatabaseConnection public=\"1\" set=\"method\" line=\"36\"><f a=\"\"><c path=\"cornerstone.integrator.configuration.DatabaseConnectionData\"/></f></get_CurrentDatabaseConnection>\n\t<new public=\"1\" set=\"method\" line=\"5\"><f a=\"\"><x path=\"Void\"/></f></new>\n\t<meta>\n\t\t<m n=\":keepSub\"/>\n\t\t<m n=\":rtti\"/>\n\t</meta>\n</class>";
cornerstone_integrator_configuration_DatabaseConnectionData.__rtti = "<class path=\"cornerstone.integrator.configuration.DatabaseConnectionData\" params=\"\">\n\t<DatabaseEngine public=\"1\" get=\"accessor\" set=\"accessor\">\n\t\t<e path=\"cornerstone.integrator.configuration.DatabaseEngineEnum\"/>\n\t\t<meta><m n=\":isVar\"/></meta>\n\t</DatabaseEngine>\n\t<DeploEnvironment public=\"1\" get=\"accessor\" set=\"accessor\">\n\t\t<e path=\"cornerstone.integrator.configuration.DeployEnvironmentEnum\"/>\n\t\t<meta><m n=\":isVar\"/></meta>\n\t</DeploEnvironment>\n\t<ConnectionString public=\"1\" get=\"accessor\" set=\"accessor\">\n\t\t<c path=\"String\"/>\n\t\t<meta><m n=\":isVar\"/></meta>\n\t</ConnectionString>\n\t<DataSource public=\"1\" get=\"accessor\" set=\"accessor\">\n\t\t<c path=\"String\"/>\n\t\t<meta><m n=\":isVar\"/></meta>\n\t</DataSource>\n\t<ServiceName public=\"1\" get=\"accessor\" set=\"accessor\">\n\t\t<c path=\"String\"/>\n\t\t<meta><m n=\":isVar\"/></meta>\n\t</ServiceName>\n\t<SID public=\"1\" get=\"accessor\" set=\"accessor\">\n\t\t<c path=\"String\"/>\n\t\t<meta><m n=\":isVar\"/></meta>\n\t</SID>\n\t<UserID public=\"1\" get=\"accessor\" set=\"accessor\">\n\t\t<c path=\"String\"/>\n\t\t<meta><m n=\":isVar\"/></meta>\n\t</UserID>\n\t<Password public=\"1\" get=\"accessor\" set=\"accessor\">\n\t\t<c path=\"String\"/>\n\t\t<meta><m n=\":isVar\"/></meta>\n\t</Password>\n\t<Database public=\"1\" get=\"accessor\" set=\"accessor\">\n\t\t<c path=\"String\"/>\n\t\t<meta><m n=\":isVar\"/></meta>\n\t</Database>\n\t<OtherParameters public=\"1\" get=\"accessor\" set=\"accessor\">\n\t\t<c path=\"Array\"><c path=\"String\"/></c>\n\t\t<meta><m n=\":isVar\"/></meta>\n\t</OtherParameters>\n\t<get_DatabaseEngine set=\"method\" line=\"18\"><f a=\"\"><e path=\"cornerstone.integrator.configuration.DatabaseEngineEnum\"/></f></get_DatabaseEngine>\n\t<set_DatabaseEngine set=\"method\" line=\"22\"><f a=\"value\">\n\t<e path=\"cornerstone.integrator.configuration.DatabaseEngineEnum\"/>\n\t<e path=\"cornerstone.integrator.configuration.DatabaseEngineEnum\"/>\n</f></set_DatabaseEngine>\n\t<get_DeploEnvironment set=\"method\" line=\"26\"><f a=\"\"><e path=\"cornerstone.integrator.configuration.DeployEnvironmentEnum\"/></f></get_DeploEnvironment>\n\t<set_DeploEnvironment set=\"method\" line=\"30\"><f a=\"value\">\n\t<e path=\"cornerstone.integrator.configuration.DeployEnvironmentEnum\"/>\n\t<e path=\"cornerstone.integrator.configuration.DeployEnvironmentEnum\"/>\n</f></set_DeploEnvironment>\n\t<get_ConnectionString set=\"method\" line=\"34\"><f a=\"\"><c path=\"String\"/></f></get_ConnectionString>\n\t<set_ConnectionString set=\"method\" line=\"38\"><f a=\"value\">\n\t<c path=\"String\"/>\n\t<c path=\"String\"/>\n</f></set_ConnectionString>\n\t<set_DataSource set=\"method\" line=\"42\"><f a=\"value\">\n\t<c path=\"String\"/>\n\t<c path=\"String\"/>\n</f></set_DataSource>\n\t<get_DataSource set=\"method\" line=\"46\"><f a=\"\"><c path=\"String\"/></f></get_DataSource>\n\t<set_ServiceName set=\"method\" line=\"50\"><f a=\"value\">\n\t<c path=\"String\"/>\n\t<c path=\"String\"/>\n</f></set_ServiceName>\n\t<get_ServiceName set=\"method\" line=\"54\"><f a=\"\"><c path=\"String\"/></f></get_ServiceName>\n\t<set_SID set=\"method\" line=\"58\"><f a=\"value\">\n\t<c path=\"String\"/>\n\t<c path=\"String\"/>\n</f></set_SID>\n\t<get_SID set=\"method\" line=\"62\"><f a=\"\"><c path=\"String\"/></f></get_SID>\n\t<set_UserID set=\"method\" line=\"66\"><f a=\"value\">\n\t<c path=\"String\"/>\n\t<c path=\"String\"/>\n</f></set_UserID>\n\t<get_UserID set=\"method\" line=\"70\"><f a=\"\"><c path=\"String\"/></f></get_UserID>\n\t<get_Password set=\"method\" line=\"74\"><f a=\"\"><c path=\"String\"/></f></get_Password>\n\t<set_Password set=\"method\" line=\"78\"><f a=\"value\">\n\t<c path=\"String\"/>\n\t<c path=\"String\"/>\n</f></set_Password>\n\t<get_Database set=\"method\" line=\"82\"><f a=\"\"><c path=\"String\"/></f></get_Database>\n\t<set_Database set=\"method\" line=\"86\"><f a=\"value\">\n\t<c path=\"String\"/>\n\t<c path=\"String\"/>\n</f></set_Database>\n\t<set_OtherParameters set=\"method\" line=\"90\"><f a=\"value\">\n\t<c path=\"Array\"><c path=\"String\"/></c>\n\t<c path=\"Array\"><c path=\"String\"/></c>\n</f></set_OtherParameters>\n\t<get_OtherParameters set=\"method\" line=\"94\"><f a=\"\"><c path=\"Array\"><c path=\"String\"/></c></f></get_OtherParameters>\n\t<new public=\"1\" set=\"method\" line=\"4\"><f a=\"\"><x path=\"Void\"/></f></new>\n\t<meta>\n\t\t<m n=\":keepSub\"/>\n\t\t<m n=\":rtti\"/>\n\t</meta>\n</class>";
cornerstone_integrator_datatypes_UUID.EMPTY = new cornerstone_integrator_datatypes_UUID();
cornerstone_integrator_datatypes_UUID.CHARS = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz".split("");
cornerstone_integrator_datatypes_UUID.MPM = 2147483647.0;
cornerstone_integrator_datatypes_UUID.MINSTD = 16807.0;
cornerstone_integrator_helpers_Int64_$Helper.MAX_32_PRECISION = 4294967296.0;
haxe__$Int32_Int32_$Impl_$._mul = Math.imul != null ? Math.imul : function (a, b) {
    return a * (b & 65535) + (a * (b >>> 16) << 16 | 0) | 0;
};
haxe_Serializer.USE_CACHE = false;
haxe_Serializer.USE_ENUM_INDEX = false;
haxe_Serializer.BASE64 = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789%:";
haxe_Serializer.BASE64_CODES = null;
haxe_Unserializer.DEFAULT_RESOLVER = new haxe__$Unserializer_DefaultResolver();
haxe_Unserializer.BASE64 = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789%:";
haxe_Unserializer.CODES = null;
haxe_ds_ObjectMap.count = 0;
haxe_io_FPHelper.i64tmp = (function ($this) {
    var $r;
    var this1 = new haxe__$Int64__$_$_$Int64(0, 0);
    $r = this1;
    return $r;
}(this));
haxe_io_FPHelper.LN2 = 0.6931471805599453;
haxe_io__$UInt8Array_UInt8Array_$Impl_$.BYTES_PER_ELEMENT = 1;
js_Boot.__toStr = ({}).toString;
js_html_compat_Uint8Array.BYTES_PER_ELEMENT = 1;
function ServiceCall(Call, callback) {
    var req = new cornerstone_integrator_transport_RequestMessage();
    req.set_RequestSeq(100);
    req.set_SessionID("");
    req.set_Calls([]);
    req.get_Calls().push(Call);
    var serializer = new haxe_Serializer();
    serializer.serialize(req);
    var PostSend = serializer.toString();
    // hago la llamada al servicio y obtengo el encriptado de retorno
    $.ajax({
        url: ServiceURL(),
        type: 'POST',
        dataType: 'text',
        data: PostSend,
        contentType: 'text/plain; charset=UTF-8',
        mimeType: 'text/plain',
        crossDomain: true,
        cache: false,
    })
        .done(function (PostReturn) {
        if (!PostReturn || PostReturn == "") {
            throw ('No se ha recibido respuesta del servidor.');
            return;
        }
        var unserializer = new haxe_Unserializer(PostReturn);
        var res = new cornerstone_integrator_transport_ResponseMessage();
        res = unserializer.unserialize();
        // Si es una excepción de infraestructura
        if (res.RequestSeq == -3) {
            throw ('Ha ocurrido un error en el procesamiento de su pedido. Por favor tome contacto con el administrador del sistema y proporciónele el siguiente código de error: ' + res.AttentionCode);
            return;
        }
        // Si es una excepción de logica
        if (res.RequestSeq == -1) {
            throw (res.Message + ' (#: ' + res.AttentionCode + ')');
            return;
        }
        // Si es una excepción de seguridad
        if (res.RequestSeq == -2) {
            throw (res.Message + ' (#: ' + res.AttentionCode + ')');
            return;
        }
        // devuelvo el objeto de respuesta
        if (typeof callback === "function") {
            if (res.Results.length == 1) {
                callback(res.Results[0].ReturnObject);
            }
        }
    })
        .fail(function (jqXHR, textStatus, errorThrown) {
        throw ('No se ha recibido respuesta del servidor, #: ' + jqXHR.status);
        //throw (errorThrown);
        // registro y búsqueda de servidor alternativo
    })
        .always(function () {
    });
}
function ServiceMultiCall(Calls, callback) {
    var req = new cornerstone_integrator_transport_RequestMessage();
    req.set_RequestSeq(100);
    req.set_SessionID("");
    req.set_Calls(Calls);
    var serializer = new haxe_Serializer();
    serializer.serialize(req);
    var PostSend = serializer.toString();
    // hago la llamada al servicio y obtengo el encriptado de retorno
    $.ajax({
        url: ServiceURL(),
        type: 'POST',
        dataType: 'text',
        data: PostSend,
        contentType: 'text/plain; charset=UTF-8',
        mimeType: 'text/plain',
        crossDomain: true,
        cache: false,
    })
        .done(function (PostReturn) {
        if (!PostReturn || PostReturn == "") {
            throw ('No se ha recibido respuesta del servidor.');
            return;
        }
        var unserializer = new haxe_Unserializer(PostReturn);
        var res = new cornerstone_integrator_transport_ResponseMessage();
        res = unserializer.unserialize();
        // Si es una excepción de infraestructura
        if (res.RequestSeq == -3) {
            throw ('Ha ocurrido un error en el procesamiento de su pedido. Por favor tome contacto con el administrador del sistema y proporciónele el siguiente código de error: ' + res.AttentionCode);
            return;
        }
        // Si es una excepción de logica
        if (res.RequestSeq == -1) {
            throw (res.Message + ' (#: ' + res.AttentionCode + ')');
            return;
        }
        // Si es una excepción de seguridad
        if (res.RequestSeq == -2) {
            throw (res.Message + ' (#: ' + res.AttentionCode + ')');
            return;
        }
        // devuelvo el objeto de respuesta
        if (typeof callback === "function") {
            for (var i = 0; i <= res.Results.length - 1; i++) {
                callback(res.Results[i].ReturnObject, res.Results[i].Name);
            }
        }
    })
        .fail(function (jqXHR, textStatus, errorThrown) {
        throw ('No se ha recibido respuesta del servidor, #: ' + jqXHR.status);
        //throw (errorThrown);
        // registro y búsqueda de servidor alternativo
    })
        .always(function () {
    });
}
function SaveToDisk(blobURL, fileName) {
    var reader = new FileReader();
    reader.readAsDataURL(blobURL);
    reader.onload = function (event) {
        var save = document.createElement('a');
        save.href = event.target.result;
        save.target = '_blank';
        save.download = fileName || 'unknown file';
        var event = document.createEvent('Event');
        event.initEvent('click', true, true);
        save.dispatchEvent(event);
        (window.URL || window.webkitURL).revokeObjectURL(save.href);
    };
}
function readMultipleFiles(evt) {
    //Retrieve all the files from the FileList object
    var files = evt.target.files;
    if (files) {
        for (var i = 0, f; f = files[i]; i++) {
            var r = new FileReader();
            r.onload = (function (f) {
                return function (e) {
                    var contents = e.target.result;
                    alert("Got the file.n"
                        + "name: " + f.name + "n"
                        + "type: " + f.type + "n"
                        + "size: " + f.size + " bytesn"
                        + "starts with: " + contents.substr(1, contents.indexOf("n")));
                };
            })(f);
            r.readAsText(f);
        }
    }
    else {
        alert("Failed to load files");
    }
}
// <input type="file" id="fileinput" multiple />
//  document.getElementById('fileinput').addEventListener('change', readMultipleFiles, false);
window.onerror = function (msg, url, line, col, error) {
    alert(error);
    var suppressErrorAlert = true;
    return suppressErrorAlert;
};
